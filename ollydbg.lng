EN English
ZH 简体中文 (Simplified Chinese)

// ANALYSER:206
EN Analysing %s - $ - press SPACE to interrupt
ZH 分析 %s - $ - 按空格中断 

// ANALYSER:227
EN Analysis interrupted
ZH 分析中断 

// ANALYSER:563
EN Low memory, analysis is not possible
ZH 低内存,不可能分析 

// ANALYSER:579
EN Module has empty code section
ZH 模块有空代码部分 

// ANALYSER:599
EN Compressed code?
ZH 压缩代码？ 

// ANALYSER:602
EN Quick statistical test of module '%s' reports that its code section is either compressed, encrypted, or contains large amount of embedded data. Do you want to analyze this code?
ZH 模块“%s”报告的快速统计测试,其代码部分被压缩,加密或包含大量嵌入式数据. 您要分析此代码吗？ 

// ANALYSER:605
EN Packed or encrypted code, code is not analysed
ZH 包装或加密的代码,未分析代码 

// ANALYSER:660
EN Struct 'IMAGE_IMPORT_DESCRIPTOR'
ZH struct'image_import_descriptor' 

// ANALYSER:671
EN Invalid DLL name in Import Directory at %08X
ZH 在 %08X 中,导入目录中的DLL名称无效

// ANALYSER:677
EN Import lookup table for '%.200S'
ZH 导入查找表的“%.200” 

// ANALYSER:696
EN Invalid import name in ILT at %08X
ZH ILT中的无效导入名称为 %08X

// ANALYSER:725
EN Struct 'IMAGE_EXPORT_DIRECTORY'
ZH struct'image_export_directory' 

// ANALYSER:741
EN Original module name
ZH 原始模块名称 

// ANALYSER:745
EN Invalid name of executable in Export Directory at %08X
ZH 在 %08X 中,导出目录中可执行文件的名称无效

// ANALYSER:751
EN Export Address Table
ZH 导出地址表 

// ANALYSER:763
EN Export Name Pointer Table
ZH 导出名称指针表 

// ANALYSER:775
EN Invalid export name in Export Name Table at %08X
ZH 出口名称表中的导出名称无效,位于 %08X

// ANALYSER:784
EN Export Ordinal Table
ZH 出口序列表 

// ANALYSER:816
EN TLS callback function
ZH TLS回调函数 

// ANALYSER:820
EN <TLSCallbacks>
ZH <tlscallbacks> 

// ANALYSER:1283
EN Exception handler
ZH 例外处理程序 

// ANALYSER:2279
EN Invalid or unknown format of .NET structures
ZH .NET结构的无效或未知格式 

// ANALYSER:2597
EN Signature of __except_handler2
ZH __EXCEPT_HANDLER2 的签名 

// ANALYSER:2598
EN Signature of __except_handler3
ZH __EXCEPT_HANDLER 的签名3 

// ANALYSER:2765
EN Invalid command in sure code
ZH 无效的命令 

// ANALYSER:2771
EN Command already decoded differently
ZH 命令已经解码了不同 

// ANALYSER:2787
EN Data already decoded as command%s
ZH 数据已经解码为命令 %s 

// ANALYSER:2788
EN (self-modified code?)
ZH  (自我修饰的代码？)  

// ANALYSER:2831
EN Jump over immediate data
ZH 跳过即时数据 

// ANALYSER:3075
EN Fixup split between items
ZH 修复项目之间分开 

// ANALYSER:3761
EN Tricky pattern %i: %s
ZH 棘手的模式 %i： %s 

// ANALYSER:4134
EN 1 library function from '%s'
ZH 1个库函数来自“%s” 

// ANALYSER:4137
EN %i library functions from '%s'
ZH  %i库的函数来自“%s” 

// ANALYSER:4982
EN Low memory, switches are not analysed
ZH 记忆力低,未分析开关 

// ANALYSER:5439
EN Switch is too complex, some cases are lost
ZH 切换太复杂了,有些情况会丢失 

// ANALYSER:6065
EN Low memory, unable to recognize procedures
ZH 记忆力低,无法识别进程 

// ANALYSER:6223
EN Loop reserves %i. bytes on the stack
ZH 循环预留 %i. 堆栈上的字节 

// ANALYSER:6243
EN ESP may depend on execution path
ZH ESP可能取决于执行路径 

// ANALYSER:6284
EN <T%X> stack alignment
ZH <t %x>堆栈对齐 

// ANALYSER:6339
EN SE handling routine
ZH SE处理程序 

// ANALYSER:6345
EN Installs SE handler
ZH 安装查看交易 

// ANALYSER:6347
EN Installs SE handler <+%X>
ZH 安装SE处理程序<+%X> 

// ANALYSER:6383
EN Possible access to uninitialized part of stack (below ESP)
ZH 可能访问堆栈的非初始化部分 (ESP下方)  

// ANALYSER:6392
EN Possible manipulation of return address on the stack
ZH 可能操纵堆栈上的返回地址 

// ANALYSER:6665
EN Large structure passed on stack or ESP manipulated
ZH 大结构通过堆栈或ESP操纵 

// ANALYSER:6902
EN RET is used as a jump
ZH RET用作跳跃 

// ANALYSER:6904
EN Jump to <+%X>
ZH 跳到<+%x> 

// ANALYSER:7233
EN Allocates EAX bytes on stack
ZH 在堆栈上分配EAX字节 

// ANALYSER:7235
EN Allocates %i. bytes on stack
ZH 分配 %i. 字节在堆栈上 

// ANALYSER:7243
EN Probes EAX bytes on stack
ZH 在堆栈上探测EAX字节 

// ANALYSER:7245
EN Probes %i. bytes on stack
ZH 探针 %i. 字节在堆栈上 

// ANALYSER:7504
EN Low memory, unable to recognize loop variables
ZH 低内存,无法识别循环变量 

// ANALYSER:7979
EN Low memory, unable to save analysis data
ZH 低内存,无法保存分析数据 

// ANALYSER:8043
EN Analysing %s
ZH 分析 %s 

// ANALYSER:8045
EN Some static imports are not yet resolved
ZH 一些静态进口尚未解决 

// ANALYSER:8286
EN 1 %s procedure
ZH 1 %s 程序 

// ANALYSER:8287
EN fuzzy
ZH 模糊 

// ANALYSER:8287
EN strict
ZH 严格的 

// ANALYSER:8288
EN %i %s procedures
ZH %i %s 程序 

// ANALYSER:8293
EN 1 call to known function
ZH 调用已知函数 

// ANALYSER:8295
EN %i calls to known functions
ZH 我打调用给已知函数的 % 

// ANALYSER:8299
EN 1 call to known,
ZH 1通知已知, 

// ANALYSER:8300
EN %i calls to known,
ZH 我呼吁知道的 %, 

// ANALYSER:8301
EN 1 call to guessed functions
ZH 1个呼吁猜测函数 

// ANALYSER:8302
EN %i calls to guessed functions
ZH 我打调用给猜测函数 

// ANALYSER:8307
EN switch or cascaded IF
ZH 切换或级联 

// ANALYSER:8307
EN switch
ZH 转变 

// ANALYSER:8310
EN switches and cascaded IFs
ZH 开关和级联 

// ANALYSER:8310
EN switches
ZH 开关 

// ANALYSER:8317
EN 1 loop
ZH 1个循环 

// ANALYSER:8319
EN %i loops
ZH  %i循环 

// ANALYSER:8391
EN Low memory, automatic analysis not possible
ZH 低内存,不可能自动分析 

// ASSEMBLE:375
EN Only 32-bit registers can be scaled
ZH 只能缩放32位寄存器 

// ASSEMBLE:378
EN Expecting integer scale
ZH 期望整数量表 

// ASSEMBLE:381
EN Zero scale is not allowed
ZH 不允许零标度 

// ASSEMBLE:384
EN Invalid scale
ZH 无效量表 

// ASSEMBLE:396
EN Use round parentheses, like ST(0)
ZH 使用圆形括号,例如ST (0)  

// ASSEMBLE:401
EN Expecting index of FPU register
ZH 期望FPU寄存器索引 

// ASSEMBLE:404
EN FPU register is out of range 0..7
ZH FPU寄存器超出范围0..7 

// ASSEMBLE:409
EN Expecting right parenthesis
ZH 期望正确的括号 

// ASSEMBLE:454
EN Duplicate SHORT specifier
ZH 重复的简短说明符 

// ASSEMBLE:459
EN Duplicate LONG specifier
ZH 重复的长指定符 

// ASSEMBLE:464
EN Duplicate NEAR specifier
ZH 副本附近的指定符 

// ASSEMBLE:469
EN Duplicate FAR specifier
ZH 重复的远面指定符 

// ASSEMBLE:477
EN Conflicting SHORT and LONG specifiers
ZH 矛盾的短规范式 

// ASSEMBLE:480
EN Conflicting NEAR and FAR specifiers
ZH 近距离指定者发生冲突 

// ASSEMBLE:483
EN Conflicting SHORT and FAR specifiers
ZH 相互冲突的短而遥远的指定符 

// ASSEMBLE:522
EN Immediate selector out of range
ZH 直接选择器超出范围 

// ASSEMBLE:529
EN Unrecognized identifier
ZH 无法识别的标识符 

// ASSEMBLE:536
EN Unrecognized label
ZH 无法识别的标签 

// ASSEMBLE:546
EN Expecting register name
ZH 期望寄存器名称 

// ASSEMBLE:555
EN Invalid index register
ZH 无效的索引寄存器 

// ASSEMBLE:566
EN Expecting 32-bit register
ZH 期望32位寄存器册 

// ASSEMBLE:599
EN Floating-point numbers are not allowed
ZH 不允许浮点数 

// ASSEMBLE:602
EN Invalid character
ZH 无效字符 

// ASSEMBLE:605
EN Syntax error
ZH 语法错误 

// ASSEMBLE:643
EN Expecting right bracket
ZH 期望正确的括号 

// ASSEMBLE:646
EN Missing or incomplete operand
ZH 失踪或不完整的操作数 

// ASSEMBLE:649
EN Incomplete operand
ZH 操作数不完整 

// ASSEMBLE:652
EN PTR applies only to memory
ZH PTR仅适用于内存 

// ASSEMBLE:658
EN Can't declare size of ANY operand
ZH 无法声明任何操作数的大小 

// ASSEMBLE:663
EN Invalid size of constant
ZH 恒定的大小无效 

// ASSEMBLE:671
EN Can't index ANY address
ZH 无法索引任何地址 

// ASSEMBLE:686
EN Offset out of allowed range
ZH 抵消允许范围 

// ASSEMBLE:690
EN Can't scale 16-bit registers
ZH 无法扩展16位寄存器 

// ASSEMBLE:719
EN Invalid indexing mode
ZH 无效的索引模式 

// ASSEMBLE:727
EN Imprecise form is not allowed
ZH 不准确的表格不允许 

// ASSEMBLE:734
EN Can't get offset of register
ZH 无法抵消寄存器 

// ASSEMBLE:738
EN Don't declare size of register
ZH 不要声明寄存器的大小 

// ASSEMBLE:740
EN Place index registers into brackets
ZH 将索引寄存器放在括号中 

// ASSEMBLE:748
EN Mixed 16 and 32-bit registers
ZH 混合16和32位寄存器册 

// ASSEMBLE:751
EN Can't subtract or negate register
ZH 不能减去或否定寄存器 

// ASSEMBLE:754
EN Can't OR register
ZH 无法寄存器 

// ASSEMBLE:757
EN Missing comma or operation
ZH 缺少逗号或操作 

// ASSEMBLE:788
EN Illegal indexing register
ZH 非法索引寄存器册 

// ASSEMBLE:814
EN Expecting colon after segment register
ZH 期待结肠在段寄存器册 

// ASSEMBLE:825
EN Misplaced segment override
ZH 放错位置的细分市场覆盖 

// ASSEMBLE:828
EN Can't get offset of address
ZH 无法抵消地址 

// ASSEMBLE:831
EN Duplicate segment override
ZH 重复的段覆盖 

// ASSEMBLE:866
EN Illegal register
ZH 非法寄存器 

// ASSEMBLE:871
EN Misplaced data size declaration
ZH 放置的数据大小声明 

// ASSEMBLE:874
EN Duplicate data size declaration
ZH 重复的数据大小声明 

// ASSEMBLE:881
EN Misplaced address size declaration
ZH 地址大小声明放错位置 

// ASSEMBLE:884
EN Conflicting address size declaration
ZH 地址大小声明冲突 

// ASSEMBLE:894
EN Conflicting OFFSET and PTR
ZH 冲突偏移和PTR 

// ASSEMBLE:906
EN Misplaced jump size declaration
ZH 放置的跳跃尺寸声明 

// ASSEMBLE:909
EN Conflicting OFFSET and jump size
ZH 冲突的偏移和跳跃大小 

// ASSEMBLE:912
EN Duplicate jump size declaration
ZH 重复跳跃大小声明 

// ASSEMBLE:919
EN Misplaced OFFSET
ZH 放置的偏移 

// ASSEMBLE:924
EN Duplicate OFFSET
ZH 重复的偏移 

// ASSEMBLE:935
EN Arithmetic with undefined operand is meaningless
ZH 使用未定义的操作数算术是毫无意义的 

// ASSEMBLE:978
EN Immediate far address is not allowed
ZH 不允许立即地址 

// ASSEMBLE:981
EN Conflicting jump size specifier
ZH 跳跃大小指定符 

// ASSEMBLE:997
EN Expecting immediate constant
ZH 期望立即恒定 

// ASSEMBLE:1005
EN Can't subtract expression in brackets
ZH 不能减去括号中的表达 

// ASSEMBLE:1008
EN Can't OR expression in brackets
ZH 不能或在括号中表达 

// ASSEMBLE:1011
EN Nested brackets
ZH 嵌套括号 

// ASSEMBLE:1014
EN Conflicting OFFSET and memory address
ZH 冲突偏移和内存地址 

// ASSEMBLE:1022
EN Unmatched right bracket
ZH 不匹配的右括号 

// ASSEMBLE:1025
EN Expecting register or constant
ZH 期望寄存器或常数 

// ASSEMBLE:1028
EN Brackets must contain register or constant
ZH 括号必须包含寄存器或常量 

// ASSEMBLE:1080
EN Invalid parameters
ZH 无效参数 

// ASSEMBLE:1154
EN Total size of the constant exceeds 16 bytes
ZH 常数的总大小超过16个字节 

// ASSEMBLE:1166
EN Integer constant must be 1, 2 or 4 bytes long
ZH 整数常数必须为1、2或4个字节长 

// ASSEMBLE:1182
EN Don't mix integer and floating constants
ZH 不要混合整数和浮点数于常数 

// ASSEMBLE:1185
EN Floating constant must be 4, 8 or 10 bytes long
ZH 浮点数于常数必须为4、8或10个字节长 

// ASSEMBLE:1208
EN Don't mix text and floating constants
ZH 不要混合文本和浮点数于常数 

// ASSEMBLE:1211
EN Character size must be 1 or 2 bytes
ZH 字符大小必须为1或2个字节 

// ASSEMBLE:1214
EN Emptry string
ZH 空字符串 

// ASSEMBLE:1232
EN Invalid constant
ZH 无效的常数 

// ASSEMBLE:1248
EN Duplicated REP/REPE/REPNE prefix
ZH 重复的代表/repe/repne前缀 

// ASSEMBLE:1263
EN Duplicated LOCK prefix
ZH 重复的锁定前缀 

// ASSEMBLE:1268
EN Duplicated jump hint
ZH 重复的跳跃提示 

// ASSEMBLE:1306
EN Command mnemonics expected
ZH 命令助记符预期 

// ASSEMBLE:1332
EN HLA: right parenthesis expected
ZH HLA：正确的括号预期 

// ASSEMBLE:1350
EN Invalid register operation
ZH 无效的寄存器操作 

// ASSEMBLE:1353
EN Comma between operands expected
ZH 操作数期预期的逗号 

// ASSEMBLE:1362
EN Too many operands
ZH 操作数太多 

// ASSEMBLE:2091
EN Internal error: unknown operand type
ZH 内部错误：未知操作数类型 

// ASSEMBLE:2868
EN No room for all possible forms
ZH 没有所有可能形式的空间 

// ASSEMBLE:2878
EN Unknown command
ZH 未知的命令 

// ASSEMBLE:2880
EN Implicit operand
ZH 隐式操作数 

// ASSEMBLE:2882
EN Imprecise command
ZH 不精确的命令 

// ASSEMBLE:2884
EN Command is a standalone prefix
ZH 命令是独立前缀 

// ASSEMBLE:2886
EN LOCK is not allowed
ZH 不允许锁 

// ASSEMBLE:2888
EN Jump hint is not allowed
ZH 不允许跳跃提示 

// ASSEMBLE:2890
EN Prefix is not allowed
ZH 不允许前缀 

// ASSEMBLE:2892
EN Please specify operand size
ZH 请指定操作数尺寸 

// ASSEMBLE:2894
EN Unsupported memory addressing mode
ZH 不受支持的内存寻址模式 

// ASSEMBLE:2896
EN Conflicting data size
ZH 相互冲突的数据大小 

// ASSEMBLE:2898
EN Constant is out of range
ZH 常数超出范围 

// ASSEMBLE:2900
EN Destination is out of range
ZH 目的地超出范围 

// ASSEMBLE:2902
EN Invalid segment register
ZH 无效的细分寄存器 

// ASSEMBLE:2904
EN No match for specified operands
ZH 指定操作数没有匹配 

// ASSEMBLE:2906
EN Invalid operand size
ZH 无效的操作数尺寸 

// ASSEMBLE:2908
EN Invalid jump size specifier
ZH 无效跳跃尺寸指示符 

// ASSEMBLE:2910
EN Expecting memory operand
ZH 期望内存操作数 

// ASSEMBLE:2912
EN Expecting register
ZH 期望寄存器 

// ASSEMBLE:2914
EN Register is not allowed
ZH 不允许寄存器 

// ASSEMBLE:2916
EN Wrong number of operands
ZH 操作数错误 

// ASSEMBLE:2918
EN REP prefix is not allowed
ZH 不允许销售前缀 

// ASSEMBLE:2920
EN Undocumented command
ZH 无证命令 

// ASSEMBLE:2922
EN Invalid command
ZH 无效命令 

// ASSEMBLE:2936
EN Extra characters on line
ZH 额外的字符在线 

// ASSEMBLE:2983
EN Internal error
ZH 内部错误 

// ASSEMBLE:2986
EN No room for assembled code
ZH 没有组装代码的空间 

// BDISASM:1010
EN Backspace
ZH backspace 

// BDISASM:1011
EN TAB
ZH 标签 

// BDISASM:1012
EN Line Feed
ZH 线饲料 

// BDISASM:1013
EN Form Feed
ZH 形式饲料 

// BDISASM:1014
EN Carriage Return
ZH 马车返回 

// BDISASM:1015
EN ESC
ZH ESC键 
ZH ESC键 

// BDISASM:1018
EN Char '%c'
ZH char' %c' 

// BDISASM:1019
EN char '%c'
ZH char' %c' 

// BDISASM:1020
EN CHAR '%c'
ZH CHAR '%c' 

// BDISASM:1207
EN Stack address=
ZH 堆栈地址= 

// BDISASM:1207
EN Address=
ZH 地址= 

// BDISASM:1221
EN Top of stack
ZH 顶部的顶部 

// BDISASM:1223
EN Stack
ZH 堆 

// BDISASM:2132
EN Dest
ZH 目标

// BDISASM:2304
EN Imm
ZH Imm 

// BDISASM:2416
EN %08X (decimal %i.)
ZH %08X (十进制 %i.) 

// BDISASM:2419
EN %08X (decimal %u.)
ZH %08X (十进制 %u.) 

// BDISASM:2437
EN - jumps to
ZH - 跳到 

// BDISASM:2454
EN Top of stack =
ZH 堆栈的顶部= 

// BDISASM:2486
EN (decimal %i.)
ZH  (十进制 %i.)  

// BDISASM:2489
EN (decimal %u.)
ZH  (十进制 %u.)  

// BDISASM:2743
EN CONST
ZH CONST 

// BDISASM:2883
EN ??? (internal error)
ZH ???  (内部错误)  

// BDISASM:2891
EN FLOAT
ZH 浮点数 

// BDISASM:4732
EN Command crosses end of memory block
ZH 命令交叉记忆块的末端 

// BDISASM:4734
EN Illegal use of register
ZH 非法使用寄存器

// BDISASM:4736
EN Memory address is not allowed
ZH 不允许内存地址 

// BDISASM:4738
EN LOCK prefix is not allowed
ZH 不允许锁定前缀 

// BDISASM:4742
EN Two prefixes from the same group
ZH 同一组的两个前缀 

// BDISASM:4744
EN More than 4 prefixes
ZH 超过4个前缀 

// BDISASM:4746
EN Invalid CR register
ZH 无效的CR寄存器册 

// BDISASM:4748
EN Internal OllyDbg error
ZH 内部OLLYDBG错误 

// BDISASM:4750
EN Superfluous operand size prefix
ZH 多余的操作数尺寸前缀 

// BDISASM:4752
EN Superfluous address size prefix
ZH 多余的地址大小前缀 

// BDISASM:4754
EN Superfluous segment override prefix
ZH 多余的段覆盖前缀 

// BDISASM:4756
EN Superfluous REPxx prefix
ZH 多余的repxx前缀 

// BDISASM:4758
EN Default segment register in prefix
ZH 前缀中的默认段寄存器 

// BDISASM:4760
EN 16-bit return
ZH 16位返回

// BDISASM:4762
EN 16-bit jump or call
ZH 16位跳跃或调用 

// BDISASM:4764
EN Far jump or call
ZH 远跳或调用

// BDISASM:4766
EN Modification of segment register
ZH 细分寄存器的修改 

// BDISASM:4768
EN Privileged instruction
ZH 特权指令 

// BDISASM:4770
EN I/O command
ZH I/O 命令 

// BDISASM:4772
EN Shift out of range
ZH 偏离范围 

// BDISASM:4774
EN Command uses (valid) LOCK prefix
ZH 命令使用 (有效) 锁定前缀 

// BDISASM:4776
EN Unaligned stack operation
ZH 未对齐的堆栈操作 

// BDISASM:4778
EN Suspicious use of stack pointer
ZH 可疑使用堆栈指针 

// BDISASM:4780
EN Undocumented instruction or encoding
ZH 无证说明或编码 

// BPHARD:378
EN Delete
ZH 删除 

// BPHARD:378
EN Delete hardware breakpoint
ZH 删除硬件断点 

// BPHARD:380
EN Disable
ZH 禁用 

// BPHARD:381
EN Disable breakpoint but don't remove it from the list
ZH 禁用断点,但不要将其从列表中删除 

// BPHARD:383
EN Enable
ZH 使能够 

// BPHARD:383
EN Re-enable hardware breakpoint
ZH 重新启用硬件断点 

// BPHARD:385
EN Edit properties...
ZH 编辑属性... 

// BPHARD:385
EN Edit properties of the selected breakpoint
ZH 编辑选定断点的属性 

// BPHARD:387
EN Follow in Disassembler
ZH 跟随反汇编器

// BPHARD:387
EN Follow breakpoint in CPU Disassembler
ZH 关注CPU反汇编器中的断点

// BPHARD:389
EN Follow in Dump
ZH 跟随转储 

// BPHARD:389
EN Follow breakpoint in CPU Dump pane
ZH 关注CPU垃圾窗格中的断点 

// BPHARD:391
EN Disable all
ZH 禁用所有 

// BPHARD:391
EN Disable all hardware breakpoints
ZH 禁用所有硬件断点 

// BPHARD:393
EN Enable all
ZH 启用全部 

// BPHARD:393
EN Re-enable all hardware breakpoints
ZH 重新启用所有硬件断点 

// BPHARD:489
EN Internal
ZH 内部的 

// BPHARD:491
EN Exec
ZH 执行 

// BPHARD:493
EN Access:%i
ZH 访问： %i 

// BPHARD:495
EN Write:%i
ZH 写： %i 

// BPHARD:513
EN Disabled
ZH 禁用 

// BPHARD:515
EN Cond
ZH 条件 

// BPHARD:517
EN Active
ZH 积极的 

// BPHARD:558
EN Slot
ZH 插槽 

// BPHARD:559
EN 1-based index of hardware breakpoint
ZH 硬件断点的1个索引 

// BPHARD:562
EN Type
ZH 类型 

// BPHARD:563
EN Type of hardware breakpoint
ZH 硬件断点的类型 

// BPHARD:566
EN Address
ZH 地址 

// BPHARD:568
EN Address of memory guarded by the hardware breakpoint
ZH 硬件断点守卫内存的地址 

// BPHARD:571
EN Module
ZH 模块 

// BPHARD:572
EN Name of the module this breakpoint belongs to
ZH 模块的名称此断点属于 

// BPHARD:575
EN Status
ZH 地位 

// BPHARD:576
EN Status of the hardware breakpoint
ZH 硬件断点的状态 

// BPHARD:579
EN Disassembly
ZH 反汇编 

// BPHARD:580
EN Disassembled command for code breakpoints
ZH 反汇编代码断点的命令 

// BPHARD:583
EN Comment
ZH 注释 

// BPHARD:599
EN Hardware breakpoints
ZH 硬件断点 

// BPMEM:39
EN Memory protection attributes in memory breakpoint are changed
ZH 内存保护属性在内存断点中已更改 

// BPMEM:43
EN Old protection: %08X %s
ZH 旧保护： %08X %S

// BPMEM:45
EN New protection: %08X %s
ZH 新保护： %08X %S

// BPMEM:191
EN Memory breakpoint on stack
ZH 堆栈上的内存断点 

// BPMEM:195
EN You are going to set memory breakpoint on stack. As long as this breakpoint is active, some system calls may fail, terminating the applicatin or changing its behaviour. Do you still want to set this breakpoint?
ZH 您将在堆栈上设置内存断点. 只要此断点处于活动状态,某些系统调用可能会失败,终止应用程序或更改其行为. 您还想设置这个断点吗？ 

// BPMEM:388
EN Delete memory breakpoint
ZH 删除内存断点 

// BPMEM:393
EN Re-enable memory breakpoint
ZH 重新启用内存断点 

// BPMEM:398
EN Follow breakpoint in the CPU Disassembler
ZH 关注CPU反汇编器中的断点

// BPMEM:400
EN Follow breakpoint in the CPU Dump pane
ZH 关注CPU垃圾窗格中的断点 

// BPMEM:402
EN Disable all memory breakpoints
ZH 禁用所有内存断点 

// BPMEM:404
EN Re-enable all memory breakpoints
ZH 重新启用所有内存断点 

// BPMEM:521
EN <none - not kept between sessions>
ZH <无 - 在会话之间不保留> 

// BPMEM:573
EN Address of the memory breakpoint
ZH 内存断点的地址 

// BPMEM:576
EN Size$    (Decimal)
ZH 尺寸$ (十进制)  

// BPMEM:577
EN Size of the memory area covered by the breakpoint
ZH 断点覆盖的内存区域的大小 

// BPMEM:585
EN Type of the memory breakpoint
ZH 内存断点的类型 

// BPMEM:589
EN Status of the memory breakpoint
ZH 内存断点的状态 

// BPMEM:608
EN Memory breakpoints
ZH 内存断点 

// BREAKS:152
EN Corrupt breakpoint
ZH 损坏的断点 

// BREAKS:156
EN Breakpoint set at address %08X is corrupt (contains hex code %02X instead of %02X (%s). Probably the code is self-modifiable, or breakpoint was set on data. Description of the breakpoint will be updated.
ZH 地址 %08X处的断点设置为损坏 (包含HEX代码 %02X而不是 %02X ( %s) .可能是可以自我修改的,或者在数据上设置了断点.断点的描述将更新.

// BREAKS:226
EN Unable to set breakpoint
ZH 无法设置断点 

// BREAKS:227
EN Unable to set breakpoint at address %08X.
ZH 无法在地址 %08X处设置断点.

// BREAKS:237
EN Unable to set breakpoint at address %08X. Memory is not readable.
ZH 无法在地址 %08X处设置断点. 内存是不可读的.

// BREAKS:247
EN Unable to set breakpoint at address %08X. Memory is not writeable.
ZH 无法在地址 %08X处设置断点. 记忆是不可写的.

// BREAKS:261
EN Unable to remove breakpoint
ZH 无法删除断点 

// BREAKS:262
EN Unable to remove breakpoint at address %08X.
ZH 无法在地址 %08X处删除断点.

// BREAKS:275
EN Unable to remove breakpoint at address %08X. Memory is not readable.
ZH 无法在地址 %08X处删除断点. 内存是不可读的.

// BREAKS:282
EN Breakpoint set at address %08X is corrupt (contains hex code %02X instead of %02X (%s). Probably the code is self-modifiable, or breakpoint was set on data.
ZH 地址 %08X处的断点设置为损坏 (包含HEX CODE %02X而不是 %02X ( %s) .代码可能是自修改的,或者在数据上设置了断点.

// BREAKS:292
EN Unable to remove breakpoint at address %08X. Memory is not writeable.
ZH 无法在地址 %08X处删除断点. 记忆是不可写的.

// BREAKS:470
EN Suspicious breakpoint
ZH 可疑断点 

// BREAKS:474
EN You are going to set execution breakpoint at the location %08X which is probably not the first byte of the command. This may disturb execution or even crash the debugged application. Do you still want to set breakpoint?
ZH 您将在位置 %08X处设置执行断点,这可能不是命令的第一个字节. 这可能会干扰执行,甚至崩溃调试应用程序. 您还想设置断点吗？

// BREAKS:486
EN You are going to set execution breakpoint at the location %08X which is probably not the first byte of the command. Are you sure?
ZH 您将在位置 %08X处设置执行断点,这可能不是命令的第一个字节. 你确定吗？

// BREAKS:511
EN Suspicious breakpoints
ZH 可疑断点 

// BREAKS:515
EN You are going to set execution breakpoints on several locations. At least one of them (for example, %08X) is probably not the first byte of the command. This may disturb execution or even crash the debugged application. Do you still want to set breakpoints?
ZH 您将在多个位置设置执行断点. 其中至少一个 (例如, %08X) 可能不是命令的第一个字节. 这可能会干扰执行,甚至崩溃调试应用程序. 您还想设置断点吗？

// BREAKS:711
EN Delete INT3 breakpoint
ZH 删除INT3断点 

// BREAKS:716
EN Re-enable INT3 breakpoint
ZH 重新启用INT3断点 

// BREAKS:718
EN Edit properties associated with breakpoint
ZH 编辑与断点关联的属性 

// BREAKS:724
EN Disable all INT3 breakpoints
ZH 禁用所有INT3断点 

// BREAKS:726
EN Re-enable all INT3 breakpoints
ZH 重新启用所有INT3断点 

// BREAKS:833
EN One-shot
ZH 一声 

// BREAKS:836
EN Plugin Permanent
ZH 插件永久 

// BREAKS:838
EN Permanent
ZH 永恒的 

// BREAKS:840
EN Temporary
ZH 暂时的 

// BREAKS:843
EN Trace
ZH 痕迹 

// BREAKS:883
EN Address of INT3 breakpoint
ZH INT3断点的地址 

// BREAKS:891
EN Status of INT3 breakpoint
ZH INT3断点的状态 

// BREAKS:895
EN Disassembled command
ZH 反汇编命令 

// BREAKS:914
EN INT3 breakpoints
ZH INT3断点 

// COMMENTS:519
EN Jump to
ZH 跳到 

// COMMENTS:537
EN Entry point
ZH 入口点 

// COMMENTS:550
EN PTR to
ZH ptr到 

// COMMENTS:687
EN XMMWORD (16.-byte)
ZH XMMWord (16.-BYTE)  

// COMMENTS:689
EN YMMWORD (32.-byte)
ZH ymmword (32.-byte)  

// COMMENTS:693
EN (%i-byte)
ZH  (%i-byte)  

// COMMENTS:695
EN (%i.-byte)
ZH  (%i.-byte)  

// COMMENTS:698
EN %i.-byte
ZH  %i.-byte 

// COMMENTS:733
EN Cascaded IF (
ZH 如果是 

// COMMENTS:735
EN Switch (
ZH 转变  ( 

// COMMENTS:737
EN cases -%X..%X
ZH 案例 -  %x .. %x 

// COMMENTS:740
EN exceptions %X..%X
ZH 例外 %x .. %x 

// COMMENTS:742
EN messages %X..%X
ZH 消息 %x .. %x 

// COMMENTS:744
EN cases %X..%X
ZH 案例 %x .. %x 

// COMMENTS:746
EN , %i exits)
ZH , % 退出)  

// COMMENTS:748
EN , %i. exits)
ZH , %i. 出口)  

// COMMENTS:750
EN , some cases lost due to high complexity
ZH ,某些情况由于复杂性高而失去 

// COMMENTS:759
EN Default case
ZH 默认情况 

// COMMENTS:761
EN Case
ZH 案子 

// COMMENTS:762
EN Cases
ZH 案例 

// COMMENTS:782
EN and other
ZH 和别的 

// COMMENTS:786
EN of cascaded IF
ZH 级联 

// COMMENTS:788
EN of switch
ZH 开关 

// COMMENTS:818
EN Loop
ZH 环形 

// COMMENTS:821
EN : loop variable
ZH ：循环变量 

// COMMENTS:823
EN : loop variables
ZH ：循环变量 

// COMMENTS:906
EN Callback

// COMMENTS:920
EN guessed
ZH 猜测 

// COMMENTS:925
EN void
ZH 空白 

// CPU:55
EN Disassembler
ZH 反汇编器

// CPU:58
EN Info
ZH 信息 

// CPU:61
EN Registers
ZH 寄存器 

// CPU:64
EN Dump
ZH 倾倒 

// CPU:149
EN Modify %s
ZH 修改 %s 

// CPU:191
EN Modify 3DNow! register %s
ZH 修改3dnow！ 寄存器 %s 

// CPU:232
EN Edit
ZH 编辑 

// CPU:257
EN byte at
ZH 字节at 

// CPU:260
EN word at
ZH 字 

// CPU:263
EN dword at
ZH dword at 

// CPU:268
EN Memory is not readable
ZH 内存不可读取 

// CPU:282
EN 32-bit float
ZH 32位浮点数 

// CPU:285
EN 64-bit float
ZH 64位浮点数 

// CPU:288
EN 80-bit float
ZH 80位浮点数 

// CPU:290
EN at
ZH at

// CPU:303
EN MMX operand at
ZH MMX操作数 

// CPU:311
EN 3DNow! operand at
ZH 3dnow！ 操作数在 

// CPU:339
EN SSE operand at
ZH SSE操作数 

// CPU:361
EN Modify FPU status register
ZH 修改FPU状态寄存器 

// CPU:369
EN Modify FPU control register
ZH 修改FPU控制寄存器 

// CPU:377
EN Modify MXCSR
ZH 修改MXCSR 

// CPU:464
EN Go to
ZH 去 

// CPU:472
EN jump
ZH 跳 

// CPU:474
EN call
ZH 称呼 

// CPU:477
EN from %08X
ZH 从 %08X

// CPU:536
EN Unable to show source
ZH 无法显示来源 

// CPU:544
EN Modify...
ZH 调整... 

// CPU:544
EN Edit contents of selected operand
ZH 编辑选定操作数的内容 

// CPU:546
EN Follow
ZH 跟随 

// CPU:546
EN Follow jump or call destination in Disassembler
ZH 在反汇编器中关注跳跃或调用目的地

// CPU:548
EN Follow loop
ZH 跟随循环 

// CPU:548
EN Follow loop in Disassembler
ZH 在反汇编器中关注循环

// CPU:550
EN Follow address in CPU Dump
ZH 关注CPU转储中的地址 

// CPU:552
EN Follow in Stack
ZH 跟随堆栈 

// CPU:552
EN Follow address in CPU Stack
ZH 关注CPU堆栈中的地址 

// CPU:554
EN Go to jump or call to the first selected command
ZH 跳转或调用第一个选择的命令 

// CPU:574
EN List jumps and calls to command...
ZH 列表跳跃和调用命令... 

// CPU:575
EN List all known jumps and calls to the first selected command
ZH 列出所有已知的跳跃和调用到第一个选择的命令 

// CPU:577
EN List destinations...
ZH 列出目的地... 

// CPU:578
EN List all known destinations of the selected switch
ZH 列出所选开关的所有已知目的地 

// CPU:580
EN Follow in Source code
ZH 遵循源代码 

// CPU:580
EN Follow address in Source code window
ZH 在源代码窗口中关注地址 

// CPU:674
EN Jump is taken
ZH 跳跃 

// CPU:676
EN Jump is not taken
ZH 跳跃没有采取 

// CPU:683
EN Condition is met
ZH 符合条件 

// CPU:685
EN Condition is not met
ZH 条件不满足 

// CPU:701
EN returned EAX =
ZH 返回的eax = 

// CPU:703
EN Returned EAX =
ZH 返回的eax = 

// CPU:758
EN Jump from
ZH 从 

// CPU:758
EN Jumps from
ZH 从 

// CPU:777
EN Local call from
ZH 来自本地调用 

// CPU:777
EN Local calls from
ZH 来自本地调用 

// CPU:811
EN Jumps to
ZH 跳到 

// CPU:830
EN Call to
ZH 调用至 

// CPU:830
EN Calls to
ZH 打调用 

// CPU:919
EN (current memory state)
ZH  (当前内存状态)  

// CPU:928
EN (current registers)
ZH  (当前寄存器)  

// CPU:1144
EN CPU
ZH 中央处理器 

// CPU:1276
EN Run trace %i. step%s back
ZH 运行跟踪 %i. step%s 返回 

// CPU:1290
EN module
ZH 模块 

// DATA:263
EN Data table full, some data will be lost!
ZH 数据表已满,一些数据将丢失！ 

// DATA:1699
EN Bad input data
ZH 不良输入数据 

// DATA:1728
EN Unknown module
ZH 未知模块 

// DATA:1741
EN Invalid import name
ZH 无效的导入名称 

// DATA:1754
EN Please specify module
ZH 请指定模块 

// DATA:1762
EN Invalid ordinal
ZH 无效的序数 

// DATA:1766
EN Extra characters in name
ZH 名称中的额外字符 

// DATA:1820
EN Ordinal not found
ZH 找不到序数 

// DATA:1843
EN Unknown import
ZH 未知的导入 

// DATA:1850
EN Ordinal not imported
ZH 未进口的序数 

// DBGHELP:136
EN DBGHELP.DLL is too old, debugging data will be ignored
ZH dbghelp.dll太老了,调试数据将被忽略 

// DBGHELP:151
EN Missing SYMSRV.DLL, Microsoft Symbol Server is deactivated
ZH 缺少SYMSRV.DLL,已停用Microsoft Symbol Server 

// DBGHELP:155
EN Old SYMSRV.DLL, Microsoft Symbol Server may be unreachable
ZH 旧的Symsrv.dll,Microsoft符号服务器可能无法到达 

// DBGHELP:243
EN Accessing Microsoft Symbol Server (module '%s'), this may take a while...
ZH 访问Microsoft符号服务器 (模块'%s') ,这可能需要一段时间... 

// DBGHELP:255
EN PDB file: '%s'
ZH PDB文件：'%s' 

// DBGHELP:270
EN Debugging information in %s format is available
ZH 可以以 %s格式调试信息 

// DEBUG:393
EN Modified debug registers of
ZH 修改后的调试寄存器处 

// DEBUG:410
EN DR%i: old %08X, new %08X
ZH DR %I：旧 %08X,新 %08X

// DEBUG:861
EN Immediate string is not a valid condition
ZH 立即字符串不是有效的条件 

// DEBUG:864
EN Invalid expression in conditional breakpoint: '%s'
ZH 条件断点中的无效表达：'%s' 

// DEBUG:888
EN INT3:
ZH 男生： 

// DEBUG:890
EN MEM:
ZH mem： 

// DEBUG:892
EN HARD:
ZH 难的： 

// DEBUG:894
EN COND:
ZH 条件： 

// DEBUG:918
EN Structure
ZH 结构 

// DEBUG:919
EN %s %s%s at address %08X:
ZH  %s %s %s在地址 %08X：

// DEBUG:922
EN NULL pointer
ZH 空指针 

// DEBUG:924
EN Unknown structure
ZH 未知结构 

// DEBUG:926
EN Unable to decode
ZH 无法解码 

// DEBUG:938
EN %08X (conversion according to type is not possible)
ZH %08X (不可能根据类型进行转换) 

// DEBUG:1035
EN Unable to protocol function arguments
ZH 无法协议函数参数 

// DEBUG:1040
EN Call to %s
ZH 调用 %s 

// DEBUG:1046
EN from
ZH 从 

// DEBUG:1082
EN Return from %s
ZH 从 %s返回 

// DEBUG:1084
EN Return from call
ZH 从调用返回 

// DEBUG:1239
EN Unable to close process
ZH 无法关闭进程 

// DEBUG:1242
EN The state of the debugged process does not allow to close it right now. Please repeat this operation later. If this message comes again, the only solution is to restart OllyDbg.
ZH 调试进程的状态现在不允许立即关闭. 请稍后重复此操作. 如果此消息再次出现,唯一的解决方案是重新启动OLLYDBG. 

// DEBUG:1245
EN Process is still running
ZH 进程仍在运行 

// DEBUG:1247
EN The debugged process is still active. Would you like to close it now? Note that forced termination may lead to the loss of data.
ZH 调试进程仍处于活动状态. 您是否现在要关闭它？ 请注意,强制终止可能导致数据丢失.

// DEBUG:1283
EN Unable to pause process
ZH 无法暂停进程 

// DEBUG:1287
EN OllyDbg is unable to pause debugged process. Graceful termination is therefore not possible and OllyDbg will call TerminateProcess(), which may lead to the loss of data in the files opened by the application.
ZH Ollydbg无法暂停调试进程. 因此,不可能优雅终止,OLLYDBG将调用terminateProcess () ,这可能导致应用程序打开的文件中的数据丢失. 

// DEBUG:1317
EN Unable to close gracefully
ZH 无法优雅地关闭 

// DEBUG:1320
EN OllyDbg is unable to close debugged process gracefully and will use TerminateProcess(), which may lead to the loss of data in the files opened by the application.
ZH Ollydbg无法优雅地关闭调试进程,并将使用terminateProcess () ,这可能导致应用程序打开的文件中的数据丢失. 

// DEBUG:1350
EN Unable to close debugged process
ZH 无法关闭调试进程 

// DEBUG:1352
EN OllyDbg was unable to close debugged process. Probably the only solution is to restart OllyDbg.
ZH Ollydbg无法关闭调试进程. 可能唯一的解决方案是重新启动OLLYDBG. 

// DEBUG:1356
EN Process closed
ZH 进程关闭 

// DEBUG:1379
EN Unable to detach debugged process
ZH 无法分离调试进程 

// DEBUG:1381
EN The state of the debugged process does not allow to detach it right now. Please repeat this operation later.
ZH 调试进程的状态现在不允许立即分离. 请稍后重复此操作. 

// DEBUG:1400
EN OllyDbg is unable to remove some breakpoints. If debugged process encounters such breakpoint, most probably it will crash. Do you still want to detach?
ZH Ollydbg无法删除一些断点. 如果调试进程遇到此类断点,则很可能会崩溃. 你还想分离吗？ 

// DEBUG:1400
EN Unable to remove breakpoints
ZH 无法删除断点 

// DEBUG:1439
EN OllyDbg is unable to detach debugged application. Probably the only solution is to kill it. If you decide to continue, please note that breakpoints are disabled or removed, and all threads are resumed.
ZH Ollydbg无法分离调试的应用程序. 唯一的解决方案是杀死它. 如果决定继续,请注意,断点是禁用或删除的,所有线程均已恢复. 

// DEBUG:1447
EN Process detached
ZH 进程分离 

// DEBUG:1477
EN All threads are suspended
ZH 所有线程均已悬挂 

// DEBUG:1480
EN All threads in the debugged application are suspended. Application is stopped. To continue, please resume some threads in the Threads window.
ZH 调试应用程序中的所有线程均已暂停. 应用被停止. 要继续,请在“线程”窗口中恢复一些线程. 

// DEBUG:1484
EN The thread you are going to run (ID %08X) is suspended. Please resume it in the Threads window.
ZH 您要运行的线程 (ID %08X) 被悬挂. 请在“线程”窗口中恢复.

// DEBUG:1487
EN The thread you are going to run (ordinal %i, ID %08X) is suspended. Please resume it in the Threads window.
ZH 您要运行的线程 (序数I,ID %08X) 被悬挂. 请在“线程”窗口中恢复.

// DEBUG:1860
EN The thread with ID %08X is no longer valid. Please choose another thread.
ZH 具有ID %08X的线程不再有效. 请选择另一个线程.

// DEBUG:1925
EN OllyDbg is unable to step over the command at (possibly invalid) address %08X. Memory is not readable.
ZH Ollydbg无法在 (可能无效的) 地址 %08X上介绍该命令. 内存是不可读的.

// DEBUG:1967
EN The CONTEXT structure passed to ZwContinue()/NtContinue() contains EIP pointing to the non-existing memory. Most probably the program will crash. Either correct EIP (doubleword at address %08X), or try to run instead of stepping.
ZH 上下文结构传递给zwcontinue () /ntcontinue () 包含指向不存在的内存的EIP. 该程序很可能会崩溃. 正确的EIP (地址 %08X处的双字) ,或尝试运行而不是步进.

// DEBUG:2012
EN Temporarily removed INT3 already pending
ZH 暂时删除的INT3已经待正在等待 

// DEBUG:2127
EN OllyDbg is unable to step over the command at (possibly invalid) address %08X. Unable to set temporary breakpoint on the %s.
ZH Ollydbg无法在 (可能无效的) 地址 %08X上介绍该命令. 无法在 %s上设置临时断点.

// DEBUG:2128
EN destination
ZH 目的地 

// DEBUG:2128
EN next command
ZH 下一个命令 

// DEBUG:2137
EN OllyDbg is unable to set temporary breakpoint on KiUserExceptionDispatcher() at address %08X. Context passed to the custom exception handler will contain flag T set by OllyDbg.
ZH Ollydbg无法在地址 %08X处的KiuserexceptionDisPatcher () 上设置临时断点. 传递给自定义处理程序的上下文将包含OLLYDBG设置的标志t.

// DEBUG:2150
EN OllyDbg is unable to set temporary breakpoint on NtQueryInformationProcess() at address %08X. Exception will not be passed to the unhandled exception filter.
ZH OLLYDBG无法在地址 %08X处在NtqueryInformationProcess () 上设置临时断点. 异常将不会传递给未经处理的异常过滤器.

// DEBUG:2264
EN %s - passed to application
ZH  %s-传递给应用 

// DEBUG:2274
EN %s - application was unable to process exception
ZH  %S-应用程序无法处理异常 

// DEBUG:2277
EN %s - exception is non-continuable
ZH  %s-例外是不可限制的 

// DEBUG:2279
EN %s - Shift+Run/Step to pass exception to the program
ZH  %s -shift+run/step以将异常传递给程序 

// DEBUG:2298
EN EIP is in the range
ZH EIP在该范围内 

// DEBUG:2303
EN EIP is outside the range
ZH EIP不在范围之外 

// DEBUG:2317
EN possible entry point of packed file
ZH 包装文件的可能入口点 

// DEBUG:2356
EN EIP points to modified command
ZH EIP点要修改命令 

// DEBUG:2364
EN command count reached
ZH 达到命令数 

// DEBUG:2372
EN invalid command
ZH 无效命令 

// DEBUG:2383
EN memory range %i - unable to calculate address
ZH 内存范围 %i-无法计算地址 

// DEBUG:2388
EN memory range %i accessed
ZH 内存范围 %我访问 

// DEBUG:2403
EN invalid condition %i - %s
ZH 无效条件 %i - %s 

// DEBUG:2414
EN condition %i is of non-integer type
ZH 条件 %i是非全能类型的 

// DEBUG:2417
EN condition %i met -
ZH 我遇到的条件 % - 

// DEBUG:2432
EN invalid command %i -
ZH 无效命令 %i- 

// DEBUG:2446
EN command %i matched -
ZH 命令 %我匹配 - 

// DEBUG:2589
EN OllyDbg is unable to step over the command at (possibly invalid) address %08X. Unable to set temporary breakpoint on the next command.
ZH Ollydbg无法在 (可能无效的) 地址 %08X上介绍该命令. 无法在下一个命令上设置临时断点.

// DEBUG:2762
EN WinMain() of main module
ZH 主模块的Winmain ()  

// DEBUG:2765
EN First TLS callback of main module
ZH 主模块的第一个TLS回调 

// DEBUG:2769
EN Entry point of self-extractor
ZH 自提取器的入口点 

// DEBUG:2772
EN Entry point of LOADDLL.EXE
ZH loaddll.exe的入口点 

// DEBUG:2775
EN DLL loaded
ZH dll加载 

// DEBUG:2786
EN Entry point of main module
ZH 主模块的入口点 

// DEBUG:2816
EN Searching for the SFX entry point of module '%s'
ZH 搜索模块“%s”的SFX入口点 

// DEBUG:2825
EN Entry point of module '%s'
ZH 模块的入口点“%s” 

// DEBUG:2827
EN Entry point of DLL
ZH DLL的入口点 

// DEBUG:2845
EN Known entry point of packed file
ZH 包装文件的已知入口点 

// DEBUG:2865
EN .NET startup entry point
ZH .NET启动入口点 

// DEBUG:2867
EN Entry point of thread %08X
ZH 线程的入口点 %08X

// DEBUG:2869
EN .NET entry point
ZH .NET入口点 

// DEBUG:2871
EN Executed to selection
ZH 执行至选择 

// DEBUG:2911
EN %i events per second
ZH  %i事件每秒 

// DEBUG:2987
EN Child process with ID %08lX starts
ZH ID %08LX开始的儿童进程 

// DEBUG:3025
EN Unexpected debug event %i from child process %08lX. Process will be detached.
ZH 来自儿童进程 %08LX的意外调试事件 %i. 进程将分离. 

// DEBUG:3036
EN Event %08lX from different process (ID %08lX)
ZH 事件 %08LX来自不同的进程 (ID %08LX)  

// DEBUG:3047
EN OllyDbg received debug event, but there is no application to debug. This is a severe internal error, please restart OllyDbg.
ZH Ollydbg收到了调试活动,但没有调试的应用. 这是一个严重的内部错误,请重新启动OLLYDBG. 

// DEBUG:3080
EN Unrecoverable exception %08X (no thread)
ZH 不可恢复的异常 %08X (无线程) 

// DEBUG:3087
EN Thread %08X that reported exception %08X at address %08X is not known to OllyDbg. Usually this makes correct continuation impossible. However, you may try to recover and continue at your own risk.
ZH 螺纹 %08X在地址 %08X上报告异常的 %08X是Ollydbg所不知道的. 通常,这使得不可能正确. 但是,您可能会尝试恢复并继续自负.

// DEBUG:3099
EN Unrecoverable exception %08X (no registers)
ZH 无法恢复的异常 %08X (无寄存器) 

// DEBUG:3106
EN OllyDbg is unable to read registers for exception %08X at (possibly invalid) address %08X in thread %08X. Usually this makes correct continuation impossible, but you may try to recover and continue at your own risk.
ZH OLLYDBG无法读取dexcement %08X at (可能无效) 地址 %08X中的寄存器,线程 %08X. 通常,这使得不可能正确的延续,但是您可能会尝试恢复并继续自负.

// DEBUG:3113
EN Debug registers modified
ZH 调试寄存器已修改 

// DEBUG:3115
EN Debugged application has modified the debugging registers. %sThe modifications are saved to the log.
ZH 调试应用程序已修改了调试寄存器.  %sthe修改保存到日志中. 

// DEBUG:3117
EN Maybe it called ZwContinue() or SetDebugContext().
ZH 也许它称为zwcontinue () 或setDebugContext () . 

// DEBUG:3170
EN Different thread
ZH 不同的线程 

// DEBUG:3174
EN While running single thread of debugged application with ID %08X, OllyDbg received exception from the different thread with ID %08X. Either this thread is new, or application has resumed thread paused by OllyDbg. Application is paused.
ZH 在运行具有ID %08X的调试应用程序的单线线程时,OLLYDBG从ID %08X的不同线程中收到了异常. 该线程是新线程,或者应用程序已恢复由Ollydbg暂停的线程. 应用被暂停.

// DEBUG:3324
EN OllyDbg is unable to establish connection with LOADDLL.EXE. DLL debugging is not possible. Try to delete LOADDLL.EXE in order to allow OllyDbg to extract valid copy of DLL loader.
ZH Ollydbg无法与loaddll.exe建立连接. DLL调试是不可能的. 尝试删除loaddll.exe,以允许Ollydbg提取DLL加载程序的有效副本. 

// DEBUG:3391
EN Unable to set startup breakpoint at address %08X. Debugged application will be paused on system breakpoint.
ZH 无法在地址 %08X处设置启动断点. 调试应用程序将在系统断点上暂停.

// DEBUG:3426
EN System breakpoint
ZH 系统断点 

// DEBUG:3428
EN Return from call to DLL export
ZH 从调用返回到DLL导出 

// DEBUG:3432
EN INT 2D command at
ZH int 2D命令在 

// DEBUG:3441
EN Call to DebugBreak()
ZH 调用debugbreak ()  

// DEBUG:3443
EN Call to DbgBreakPoint()
ZH 调用dbgbreakpoint ()  

// DEBUG:3445
EN INT3 command at
ZH int3命令在 

// DEBUG:3456
EN INT3 in .NET application stepped over on closing
ZH INT3 IN .NET应用程序在关闭上重新启动 

// DEBUG:3472
EN INT3 in MSCORWKS stepped over on request
ZH MSCORWKS中的INT3根据要求重新安排 

// DEBUG:3551
EN Hit trace may pass control to the non-command
ZH 命中痕迹可能会传递到非命令 

// DEBUG:3559
EN Hit trace may leave code section
ZH 命中跟踪可能会离开代码部分 

// DEBUG:3603
EN Breakpoint at
ZH 断点处 

// DEBUG:3605
EN Conditional breakpoint at
ZH 有条件的断点 

// DEBUG:3609
EN (count reached)
ZH  (达到计数)  

// DEBUG:3724
EN Hardware breakpoint %i
ZH 硬件断点 %i 

// DEBUG:3726
EN Conditional hardware breakpoint %i
ZH 有条件的硬件断点 %i 

// DEBUG:3735
EN - EIP points to next instruction
ZH -  EIP指向下一个指令 

// DEBUG:3749
EN Break on hardware breakpoints
ZH 打破硬件断点 

// DEBUG:3751
EN Break on hardware breakpoint
ZH 打破硬件断点 

// DEBUG:3756
EN set by application
ZH 通过应用程序设置 

// DEBUG:3943
EN Break on single-step trap or INT1 set by application
ZH 打破按应用程序设置的单步陷阱或INT1 

// DEBUG:4042
EN Memory breakpoint
ZH 内存断点 

// DEBUG:4045
EN Conditional memory breakpoint
ZH 有条件的内存断点 

// DEBUG:4052
EN when executing
ZH 执行时 

// DEBUG:4054
EN when reading
ZH 阅读时 

// DEBUG:4056
EN when writing to
ZH 写信时 

// DEBUG:4058
EN when accessing
ZH 访问时 

// DEBUG:4101
EN Access violation when %s [%08lX] caused by plugin
ZH 当插件引起的 %s [ %08LX]时访问违规 

// DEBUG:4102
EN writing to
ZH 写信给 

// DEBUG:4103
EN executing
ZH 执行 

// DEBUG:4104
EN reading
ZH 阅读 

// DEBUG:4107
EN Access violation caused by plugin
ZH 插件引起的访问违规行为 

// DEBUG:4128
EN Access violation in KERNEL32 ignored on request
ZH 可根据要求忽略kernel32中的访问违法行为 

// DEBUG:4133
EN Access violation when %s [%08lX]
ZH  %s [ %08LX] 

// DEBUG:4138
EN Access violation
ZH 违反访问 

// DEBUG:4157
EN Break-on-access while %s %08X
ZH 访问中断,而 %s %08X

// DEBUG:4158
EN accessing
ZH 访问 

// DEBUG:4187
EN Break-on-access set by plugin while %s %08X
ZH 由插件设置的突破性访问,而 %s %08X

// DEBUG:4199
EN Break on guarded memory page set by application while %s %08X
ZH 突破由应用程序设置的守卫记忆页,而 %s %08X

// DEBUG:4389
EN Integer division by zero
ZH 整数部门为零 

// DEBUG:4403
EN Illegal instruction
ZH 非法指示 

// DEBUG:4431
EN Stack overflow
ZH 堆栈溢出 

// DEBUG:4444
EN Noncontinuable exception
ZH 不可触发的例外 

// DEBUG:4459
EN Denormalized floating-point operand
ZH 非规范化的浮点操作数 

// DEBUG:4461
EN Floating-point division by zero
ZH 浮点划分为零 

// DEBUG:4463
EN Inexact floating-point result
ZH 不精确的浮点结果 

// DEBUG:4465
EN Invalid floating-point operation
ZH 无效的浮点操作 

// DEBUG:4467
EN Floating-point overflow
ZH 浮点溢出 

// DEBUG:4469
EN FPU stack error
ZH FPU堆栈错误 

// DEBUG:4471
EN Floating-point underflow
ZH 浮点下流 

// DEBUG:4473
EN from EIP=%08X
ZH 来自eip = %08X

// DEBUG:4504
EN VC service exception
ZH VC服务例外 

// DEBUG:4514
EN : Thread %08X is named '%s'
ZH ：thread %08X命名为“%s”

// DEBUG:4531
EN MS C++ exception
ZH MS C++ 异常 

// DEBUG:4550
EN , module %s class '%s' object %08X
ZH ,模块 %s类'%s'对象 %08X

// DEBUG:4575
EN Exception %08X
ZH 异常 %08X

// DEBUG:4609
EN Return reached and executed
ZH 收到回报并执行 

// DEBUG:4615
EN User code reached
ZH 到达用户代码 

// DEBUG:4629
EN SFX trace: %s
ZH SFX跟踪： %s 

// DEBUG:4631
EN Run trace: %s
ZH 运行跟踪： %s 

// DEBUG:4743
EN Return reached
ZH 回报到达 

// DEBUG:4957
EN New thread %i. (ID %08X) created
ZH 新线程 %i.  (ID %08X) 创建

// DEBUG:4969
EN New thread %08X: unable to set breakpoint on entry point %08X
ZH 新线程 %08X：无法在入口点上设置断点 %08X

// DEBUG:5014
EN New process (ID %08X) created
ZH 创建的新进程 (ID %08X) 

// DEBUG:5020
EN Main thread (ID %08X) created
ZH 主线程 (ID %08X) 创建

// DEBUG:5044
EN Main thread is resumed from suspended state
ZH 主线程从悬浮状态恢复 

// DEBUG:5102
EN Thread (ID %08X) terminated, exit code %X
ZH 线程 (ID %08X) 终止,退出代码 %x

// DEBUG:5105
EN Thread %i. (ID %08X) terminated, exit code %X
ZH 线程 %i.  (ID %08X) 终止,退出代码 %x

// DEBUG:5162
EN LOADDLL terminated: Missing DLL name
ZH LoadDll终止：缺少DLL名称 

// DEBUG:5165
EN LOADDLL terminated: Unable to load DLL
ZH LoadDll终止：无法加载DLL 

// DEBUG:5169
EN LoadLibrary() reports error %08X (%s)
ZH LoadLibrary () 报告错误 %08X ( %s) 

// DEBUG:5173
EN LoadLibrary() reports error %08X
ZH loadLibrary () 报告错误 %08X

// DEBUG:5179
EN LOADDLL terminated: Too many parameters
ZH loaddll终止：参数太多 

// DEBUG:5182
EN LOADDLL terminated: Error %08X
ZH LOADDLL终止：错误 %08X

// DEBUG:5186
EN LOADDLL terminated, exit code %X
ZH loaddll终止,退出代码 %x 

// DEBUG:5188
EN LOADDLL terminated, exit code %X (%li.)
ZH loaddll终止,退出代码 %x ( %li.)  

// DEBUG:5191
EN Process terminated, exit code %X
ZH 进程终止,退出代码 %x 

// DEBUG:5299
EN Unload %s
ZH 卸载 %s 

// DEBUG:5313
EN Module %s - failed to initialize
ZH 模块 %S-无法初始化 

// DEBUG:5314
EN (name unknown)
ZH  (名称未知)  

// DEBUG:5321
EN Unload hidden module %08X
ZH 卸载隐藏模块 %08X

// DEBUG:5370
EN Debug string (invalid length)
ZH 调试字符串 (长度无效)  

// DEBUG:5380
EN Debug string (unable to get text)
ZH 调试字符串 (无法获取文本)  

// DEBUG:5390
EN Debug string
ZH 调试字符串 

// DEBUG:5477
EN System debugging error (RIP event) %08lX (type %li.)
ZH 系统调试错误 (RIP事件)  %08LX (类型 %li.)  

// DEBUG:5481
EN Unknown debugging event %08lX
ZH 未知调试事件 %08LX 

// DIALOGS:904
EN Hexadecimal
ZH 十六进制 

// DIALOGS:907
EN Doubleword register in hexadecimal form
ZH 十六进制形式的双字寄存器 

// DIALOGS:909
EN Word register in hexadecimal form
ZH 单词寄存器以十六进制形式 

// DIALOGS:911
EN High byte register in hexadecimal form
ZH 高字节寄存器以十六进制形式 

// DIALOGS:913
EN Low byte register in hexadecimal form
ZH 十六进制形式的低字节寄存器 

// DIALOGS:914
EN Signed
ZH 签 

// DIALOGS:917
EN Doubleword register in signed form
ZH 签名表格的双词寄存器 

// DIALOGS:919
EN Word register in signed form
ZH 签名形式的单词寄存器 

// DIALOGS:921
EN High byte register in signed form
ZH 高字节寄存器处的签名表格 

// DIALOGS:923
EN Low byte register in signed form
ZH 低字节寄存器处的签名表格 

// DIALOGS:924
EN Unsigned
ZH 未签名 

// DIALOGS:927
EN Doubleword register in unsigned form
ZH 双字寄存器以未签名的形式 

// DIALOGS:929
EN Word register in unsigned form
ZH 单词寄存器以未签名的形式 

// DIALOGS:931
EN High byte register in unsigned form
ZH 高字节寄存器以未签名的形式 

// DIALOGS:933
EN Low byte register in unsigned form
ZH 低字节寄存器以未签名的形式 

// DIALOGS:934
EN Character
ZH 特点 

// DIALOGS:937
EN High byte register in character form
ZH 高字节形式形式 

// DIALOGS:939
EN Low byte register in character form
ZH 低字节寄存器为字符形式 

// DIALOGS:940
EN OK
ZH CH

// DIALOGS:941
EN Apply modifications
ZH 应用修改 

// DIALOGS:942
EN Cancel
ZH 取消 

// DIALOGS:943
EN Discard modifications
ZH 丢弃修改 

// DIALOGS:944
EN Edit register
ZH 编辑寄存器 

// DIALOGS:1001
EN Enter data in hexadecimal form
ZH 以十六进制形式输入数据 

// DIALOGS:1005
EN Enter data in signed decimal form
ZH 输入签名十进制形式的数据 

// DIALOGS:1009
EN Enter data in unsigned decimal form
ZH 以未签名的小数形式输入数据 

// DIALOGS:1014
EN Edit data
ZH 编辑数据 

// DIALOGS:1032
EN Float
ZH 浮点数 

// DIALOGS:1035
EN Enter data in floating point form
ZH 以浮点形式输入数据 

// DIALOGS:1063
EN Enter word in hexadecimal form
ZH 以十六进制形式输入单词 

// DIALOGS:1067
EN Enter word in signed decimal form
ZH 以签名的小数形式输入单词 

// DIALOGS:1071
EN Enter word in unsigned decimal form
ZH 以未签名的小数形式输入单词 

// DIALOGS:1099
EN Enter byte in hexadecimal form
ZH 以十六进制形式输入字节 

// DIALOGS:1103
EN Enter byte in signed decimal form
ZH 以签名小数形式输入字节 

// DIALOGS:1107
EN Enter byte in unsigned decimal form
ZH 以未签名的小数形式输入字节 

// DIALOGS:1111
EN Enter byte as ASCII character
ZH 输入字节为ASCII字符 

// DIALOGS:1136
EN Last error (hex)
ZH 最后错误 (十六进制)  

// DIALOGS:1139
EN Enter last threas's error in hexadecimal form
ZH 以十六进制的形式输入最后的拨款错误 

// DIALOGS:1141
EN Select new last thread's error from the list
ZH 从列表中选择新的最后一个线程错误 

// DIALOGS:1143
EN Sort by name
ZH 按名称分类 

// DIALOGS:1144
EN Check to sort error list by name
ZH 检查按名称排序错误列表 

// DIALOGS:1150
EN Change last error
ZH 更改最后一个错误 

// DIALOGS:1569
EN First address in the range
ZH 范围内的第一个地址 

// DIALOGS:1571
EN Select or type in the first address in the range
ZH 选择或输入该范围的第一个地址 

// DIALOGS:1573
EN Last address in the range (included)
ZH 范围内的最后一个地址 (随附)  

// DIALOGS:1575
EN Select or type in the last address in the range
ZH 选择或输入该范围的最后一个地址 

// DIALOGS:1579
EN Select range
ZH 选择范围 

// DIALOGS:1581
EN Discard action
ZH 丢弃动作 

// DIALOGS:1583
EN Select address range
ZH 选择地址范围 

// DIALOGS:1624
EN First address: %s
ZH 第一个地址： %s 

// DIALOGS:1630
EN First address: Integer expression expected
ZH 第一个地址：预期的整数表达式 

// DIALOGS:1638
EN Last address: %s
ZH 最后地址： %s 

// DIALOGS:1644
EN Last address: Integer expression expected
ZH 最后地址：预期的整数表达式 

// DIALOGS:1650
EN First address exceeds last address
ZH 第一个地址超过最后地址 

// DIALOGS:1704
EN First exception in the range
ZH 范围的第一个例外 

// DIALOGS:1706
EN Select or type in the first exception in the range
ZH 选择或输入该范围的第一个例外 

// DIALOGS:1708
EN Last exception in the range (included)
ZH 范围的最后例外 (随附)  

// DIALOGS:1710
EN Select or type in the last exception in the range
ZH 在范围内选择或输入最后一个异常 

// DIALOGS:1716
EN Select range of exception codes
ZH 选择异常代码范围 

// DIALOGS:1734
EN Same as above
ZH 与上面相同 

// DIALOGS:1806
EN Select type of the structure
ZH 选择结构的类型 

// DIALOGS:1808
EN Confirm selection
ZH 确认选择 

// DIALOGS:1812
EN Select structure
ZH 选择结构 

// DIALOGS:1822
EN Exactly one structure
ZH 正是一个结构 

// DIALOGS:1823
EN Set dump size to the size of the structure
ZH 将转储大小设置为结构的大小 

// DIALOGS:1825
EN Specify count:
ZH 指定计数： 

// DIALOGS:1826
EN Specify how many instances of the structure to decode
ZH 指定要解码的结构的数量 

// DIALOGS:1847
EN Fill selection
ZH 填充选择 

// DIALOGS:1848
EN Fill selection with the packed structures
ZH 用包装结构填充选择 

// DIALOGS:2013
EN Floating-point register in decimal form
ZH 小数形式的浮点寄存器 

// DIALOGS:2014
EN Hex
ZH 十六进制 

// DIALOGS:2017
EN Floating-point register in hexadecimal form
ZH 十六进制形式的浮点寄存器 

// DIALOGS:2019
EN Modify associated tag
ZH 修改关联的标签 

// DIALOGS:2020
EN Modify tag associated with register according to new contents
ZH 修改与寄存器关联的标签,根据新内容 

// DIALOGS:2031
EN High part
ZH 高部分 

// DIALOGS:2033
EN Low part
ZH 低零件 

// DIALOGS:2038
EN High part of 3DNow! operand in decimal form
ZH 3dnow的高部分！ 小数形式的操作数 

// DIALOGS:2040
EN Low part of 3DNow! operand in decimal form
ZH 3dnow的低部分！ 小数形式的操作数 

// DIALOGS:2044
EN High part of 3DNow! operand in hexadecimal form
ZH 3dnow的高部分！ 十六进制形式的操作数 

// DIALOGS:2046
EN Low part of 3DNow! operand in hexadecimal form
ZH 3dnow的低部分！ 十六进制形式的操作数 

// DIALOGS:2052
EN Edit 3DNow! operand
ZH 编辑3dnow！ 操作数 

// DIALOGS:2060
EN 32-bit floating-point number in decimal form
ZH 小数形式的32位浮点数 

// DIALOGS:2064
EN 32-bit floating-point number in hexadecimal form
ZH 十六进制形式的32位浮点数 

// DIALOGS:2070
EN Edit 32-bit float
ZH 编辑32位浮点 

// DIALOGS:2078
EN 64-bit floating-point number in decimal form
ZH 64位浮点数为十进制形式 

// DIALOGS:2082
EN 64-bit floating-point number in hexadecimal form
ZH 64位浮点数十六进制形式 

// DIALOGS:2088
EN Edit 64-bit float
ZH 编辑64位浮点 

// DIALOGS:2096
EN 80-bit floating-point number in decimal form
ZH 十进制形式的80位浮点数 

// DIALOGS:2100
EN 80-bit floating-point number in hexadecimal form
ZH 十六进制形式的80位浮点数 

// DIALOGS:2106
EN Edit 80-bit float
ZH 编辑80位浮点 

// DIALOGS:2114
EN Floating-point number in decimal form
ZH 小数形式的浮点数 

// DIALOGS:2116
EN Entire block
ZH 整个块 

// DIALOGS:2117
EN Search forward from the beginning of the block
ZH 从块的开头向前搜索 

// DIALOGS:2118
EN Forward
ZH 向前 

// DIALOGS:2119
EN Search forward from the current selection
ZH 从当前选择中搜索 

// DIALOGS:2120
EN Backward
ZH 落后 

// DIALOGS:2121
EN Search backward from the current selection
ZH 从当前选择向后搜索 

// DIALOGS:2123
EN Aligned search
ZH 对齐搜索 

// DIALOGS:2124
EN Search only at addresses aligned with dump
ZH 仅在与转储对齐的地址上搜索 

// DIALOGS:2125
EN Accuracy:
ZH 准确性： 

// DIALOGS:2128
EN High
ZH 高的 

// DIALOGS:2130
EN Search with 1 (float) or 2 (double, long double) least significant digit accuracy
ZH 使用1 (浮点) 或2 (双,长双重) 最低数字精度搜索 

// DIALOGS:2132
EN Search with 0.01% (1.0e-4) accuracy
ZH 搜索0.01 % (1.0E-4) 精度 

// DIALOGS:2134
EN Search with 1% (1.0e-2) accuracy
ZH 搜索1 % (1.0E-2) 精度 

// DIALOGS:2136
EN Start search
ZH 开始寻找 

// DIALOGS:2138
EN Cancel search
ZH 取消搜索 

// DIALOGS:2140
EN Enter floating-point number to search
ZH 输入浮点数进行搜索 

// DIALOGS:2453
EN Byte
ZH 字节 

// DIALOGS:2455
EN Most significant byte of MMX operand
ZH MMX操作数最重要的字节 

// DIALOGS:2457
EN Byte 6 of MMX operand
ZH MMX操作数的字节6 

// DIALOGS:2459
EN Byte 5 of MMX operand
ZH MMX操作数的字节5 

// DIALOGS:2461
EN Byte 4 of MMX operand
ZH MMX操作机的字节4 

// DIALOGS:2463
EN Byte 3 of MMX operand
ZH MMX操作数的字节3 

// DIALOGS:2465
EN Byte 2 of MMX operand
ZH MMX操作数的字节2 

// DIALOGS:2467
EN Byte 1 of MMX operand
ZH MMX操作数的字节1 

// DIALOGS:2469
EN Least significant byte of MMX operand
ZH MMX操作数最不重要的字节 

// DIALOGS:2471
EN Word
ZH 单词 

// DIALOGS:2473
EN Most significant word of MMX operand
ZH MMX操作数的最重要词 

// DIALOGS:2475
EN Word 2 of MMX operand
ZH MMX操作数的单词2 

// DIALOGS:2477
EN Word 1 of MMX operand
ZH MMX操作数的单词1 

// DIALOGS:2479
EN Least significant word of MMX operand
ZH MMX操作数的最低意义 

// DIALOGS:2481
EN Doubleword
ZH 双字 

// DIALOGS:2483
EN High doubleword of MMX operand
ZH MMX操作数的高双词 

// DIALOGS:2485
EN Low doubleword of MMX operand
ZH MMX操作数的低双词 

// DIALOGS:2487
EN Display data in hexadecimal format
ZH 以十六进制格式显示数据 

// DIALOGS:2489
EN Display data in signed decimal format
ZH 以签名的十进制格式显示数据 

// DIALOGS:2491
EN Display data in unsigned decimal format
ZH 以未签名的十进制格式显示数据 

// DIALOGS:2496
EN Edit MMX operand
ZH 编辑MMX操作数 

// DIALOGS:2711
EN Most significant word of SSE operand
ZH SSE操作数的最重要词 

// DIALOGS:2713
EN Word 6 of SSE operand
ZH SSE操作数的单词6 

// DIALOGS:2715
EN Word 5 of SSE operand
ZH SSE操作数的单词5 

// DIALOGS:2717
EN Word 4 of SSE operand
ZH SSE操作数的单词4 

// DIALOGS:2719
EN Word 3 of SSE operand
ZH SSE操作数的单词3 

// DIALOGS:2721
EN Word 2 of SSE operand
ZH SSE操作数的单词2 

// DIALOGS:2723
EN Word 1 of SSE operand
ZH SSE操作数的单词1 

// DIALOGS:2725
EN Least significant word of SSE operand
ZH SSE操作数最不重要的话 

// DIALOGS:2729
EN Most significant doubleword of SSE operand
ZH SSE操作数最重要的双词 

// DIALOGS:2731
EN Doubleword 2 of SSE operand
ZH SSE操作数的双字2 

// DIALOGS:2733
EN Doubleword 1 of SSE operand
ZH SSE操作数的双词1 

// DIALOGS:2735
EN Least significant doubleword of SSE operand
ZH SSE操作数的最不重要的双词 

// DIALOGS:2739
EN Most significant float of SSE operand
ZH SSE操作数最重要的浮标 

// DIALOGS:2741
EN Float 2 of SSE operand
ZH SSE操作数的Float 2 

// DIALOGS:2743
EN Float 1 of SSE operand
ZH SSE操作数的Float 1 

// DIALOGS:2745
EN Least significant float of SSE operand
ZH SSE操作数的最不重要的浮标 

// DIALOGS:2747
EN Double
ZH 双倍的 

// DIALOGS:2749
EN High quadword of SSE operand as floating-point number
ZH SSE操作数作为浮点数的高四倍词 

// DIALOGS:2751
EN Low quadword of SSE operand as floating-point number
ZH SSE操作数作为浮点数的低四句 

// DIALOGS:2754
EN Display integer data in hexadecimal format
ZH 以十六进制格式显示整数数据 

// DIALOGS:2756
EN Display integer data in signed decimal format
ZH 以签名的十进制格式显示整数数据 

// DIALOGS:2758
EN Display integer data in unsigned decimal format
ZH 以未签名的小数格式显示整数数据 

// DIALOGS:2763
EN Edit SSE operand
ZH 编辑SSE操作数 

// DIALOGS:2984
EN Type or select string here
ZH 在此处键入或选择字符串 

// DIALOGS:2988
EN Close dialog
ZH 关闭对话框 

// DIALOGS:2989
EN Enter string
ZH 输入字符串 

// DIALOGS:2996
EN Type or select expression here
ZH 在此处键入或选择表达式 

// DIALOGS:3010
EN Type or select search string here
ZH 在此处键入或选择搜索字符串 

// DIALOGS:3012
EN Search direction:
ZH 搜索方向： 

// DIALOGS:3021
EN Ignore case
ZH 忽略案例 

// DIALOGS:3022
EN Ignore case while searching for text
ZH 在搜索文本时忽略案例 

// DIALOGS:3028
EN Enter search string
ZH 输入搜索字符串 

// DIALOGS:3037
EN Search:
ZH 搜索： 

// DIALOGS:3081
EN Enter address expression:
ZH 输入地址表达式： 

// DIALOGS:3083
EN Type or select label or expression here
ZH 在此处键入或选择标签或表达式 

// DIALOGS:3085
EN Matching labels:
ZH 匹配标签： 

// DIALOGS:3088
EN Labels in all modules that match entered string, doubleclick to select, Enter to follow
ZH 在所有匹配字符串的模块中的标签,doubleclick要选择,输入以关注 

// DIALOGS:3102
EN Executable from History:
ZH 可执行的历史： 

// DIALOGS:3104
EN Name of the recently opened executable file
ZH 最近打开的可执行文件的名称 

// DIALOGS:3106
EN New arguments:
ZH 新论点： 

// DIALOGS:3108
EN Type or select new arguments here
ZH 在此处输入或选择新参数 

// DIALOGS:3110
EN New current directory:
ZH 新当前目录： 

// DIALOGS:3112
EN Type or select new current directory here
ZH 在此处键入或选择新的当前目录 

// DIALOGS:3114
EN Browse for current directory
ZH 浏览当前目录 

// DIALOGS:3120
EN Enter new command line arguments
ZH 输入新的命令行参数 

// DIALOGS:3166
EN Follow label
ZH 关注标签 

// DIALOGS:3168
EN Follow expression
ZH 遵循表达 

// DIALOGS:3295
EN Select current directory for executable
ZH 选择可执行文件的当前目录 

// DIALOGS:3317
EN Integer expression expected
ZH 预期的整数表达 

// DIALOGS:3323
EN Result doesn't fit into 16 bits
ZH 结果不适合16位 

// DIALOGS:3522
EN Name
ZH 姓名 

// DIALOGS:3586
EN Drive
ZH 驾驶 

// DIALOGS:3589
EN Select local drive
ZH 选择本地驱动器 

// DIALOGS:3590
EN Volume name
ZH 卷名称 

// DIALOGS:3593
EN Volume name of the selected disk
ZH 选定磁盘的卷名称 

// DIALOGS:3594
EN File system
ZH 文件系统 

// DIALOGS:3597
EN File system on the selected disk
ZH 选定磁盘上的文件系统 

// DIALOGS:3598
EN Offset
ZH 抵消 

// DIALOGS:3601
EN Offset in bytes
ZH 偏移字节 

// DIALOGS:3603
EN Offset in sectors
ZH 在扇区中的抵消 

// DIALOGS:3605
EN Offset in clusters
ZH 群集中的抵消 

// DIALOGS:3606
EN Size
ZH 尺寸 

// DIALOGS:3609
EN Size in bytes
ZH 大小为字节 

// DIALOGS:3611
EN Size in sectors
ZH 扇区的大小 

// DIALOGS:3613
EN Size in clusters
ZH 群集的大小 

// DIALOGS:3614
EN bytes
ZH 字节 

// DIALOGS:3616
EN sectors
ZH 部门 

// DIALOGS:3618
EN clusters
ZH 集群 

// DIALOGS:3621
EN Dump specified extent
ZH 转储指定范围 

// DIALOGS:3626
EN Drive extent
ZH 驱动范围 

// DIALOGS:3765
EN Data extends beyond the disk size
ZH 数据扩展超出磁盘大小 

// DIALOGS:3767
EN Data offset exceeds disk size
ZH 数据偏移超过磁盘大小 

// DIALOGS:3769
EN Negative offsets are not allowed
ZH 不允许负面偏移 

// DIALOGS:3771
EN Negative size is not allowed
ZH 不允许负大小 

// DIALOGS:3773
EN Zero size is not allowed
ZH 不允许零大小 

// DIALOGS:3775
EN Data size exceeds 256 Mb
ZH 数据大小超过256 MB 

// DIALOGS:3856
EN Unable to open specified drive
ZH 无法打开指定驱动器 

// DIALOGS:3862
EN Low memory
ZH 记忆不足 

// DIALOGS:3870
EN Unable to read data
ZH 无法读取数据 

// DIALOGS:3892
EN Drive %s%08LX..%08X
ZH 驱动 %s %08LX .. %08X

// DIALOGS:3896
EN Unable to create dump window
ZH 无法创建转储窗口 

// DIALOGS:3923
EN Specify physical drive extent
ZH 指定物理驱动器范围 

// DIALOGS:3953
EN Type or select next Assembler command
ZH 键入或选择下一个汇编器命令 

// DIALOGS:3957
EN Keep size
ZH 保持尺寸 

// DIALOGS:3958
EN Don't modify code outside the initial selection
ZH 不要在初始选择之外修改代码 

// DIALOGS:3960
EN Fill rest with NOPs
ZH 填充鼻子 

// DIALOGS:3961
EN If new command is shorter than old, fill rest with NOPs
ZH 如果新命令比旧命令短,请填满小子 

// DIALOGS:3962
EN Assemble
ZH 集合 

// DIALOGS:3963
EN Add typed command
ZH 添加键入命令 

// DIALOGS:3964
EN Close
ZH 关 

// DIALOGS:4072
EN No room for this command
ZH 没有这个命令的空间 

// DIALOGS:4208
EN Command search pattern. To search for several patterns at once, separate them with semicolon
ZH 命令搜索模式. 要立即搜索几种模式,请用分号分开 

// DIALOGS:4211
EN Search
ZH 搜索 

// DIALOGS:4215
EN Command search
ZH 命令搜索 

// DIALOGS:4346
EN Commands:
ZH 命令： 

// DIALOGS:4349
EN Enter the sequence of commands to search for
ZH 输入搜索命令的顺序 

// DIALOGS:4352
EN Options:
ZH 选项： 

// DIALOGS:4355
EN Allow intermediate commands
ZH 允许中间命令 

// DIALOGS:4356
EN Allow commands that do not influence the final result
ZH 允许不影响最终结果的命令 

// DIALOGS:4358
EN Allow jumps from outside
ZH 允许外面跳跃 

// DIALOGS:4359
EN Allow jumps and calls from outside into the specified sequence
ZH 允许外部跳跃和调用进入指定的序列 

// DIALOGS:4360
EN << Prev
ZH <<上一个 

// DIALOGS:4361
EN Previous pattern
ZH 以前的模式 

// DIALOGS:4362
EN Next >>
ZH 下一个>> 

// DIALOGS:4363
EN Next pattern
ZH 下一个模式 

// DIALOGS:4369
EN Search for the sequence of commands
ZH 搜索命令序列 

// DIALOGS:4495
EN No commands
ZH 没有命令 

// DIALOGS:4591
EN Enter search pattern as ASCII text using specified codepage
ZH 使用指定的codepage输入搜索模式作为ASCII文本 

// DIALOGS:4596
EN Enter search pattern as multibyte text using specified codepage
ZH 使用指定的CodePage输入搜索模式作为多重细胞文本 

// DIALOGS:4597
EN UNICODE
ZH Unicode 

// DIALOGS:4600
EN Enter search pattern as UNICODE text
ZH 输入搜索模式作为Unicode文本 

// DIALOGS:4601
EN HEX
ZH 十六进制 

// DIALOGS:4605
EN Enter search pattern in hexadecimal form, question mark means any 4-bit nibble
ZH 以十六进制形式输入搜索模式,问号是指任何4位nibble 

// DIALOGS:4608
EN Toggles data entering mode (INS - insert, OVR - overwrite)
ZH 切换数据输入模式 (ins-插入,OVR-覆盖)  

// DIALOGS:4620
EN Ignore case, does not work with UNICODE!
ZH 忽略案例,不使用Unicode！ 

// DIALOGS:4629
EN Search for data
ZH 搜索数据 

// DIALOGS:4677
EN Edit data as ASCII text using specified codepage
ZH 使用指定的编码ePage编辑数据作为ASCII文本 

// DIALOGS:4682
EN Edit data as multibyte text using specified codepage
ZH 使用指定的codepage编辑数据作为多键文本 

// DIALOGS:4686
EN Edit data as UNICODE text
ZH 将数据编辑为Unicode文本 

// DIALOGS:4690
EN Edit data in hexadecimal form
ZH 以十六进制形式编辑数据 

// DIALOGS:4692
EN Toggles editing mode (INS - insert, OVR - overwrite)
ZH 切换编辑模式 (ins-插入,OVR-覆盖)  

// DIALOGS:4695
EN Do not extend size of data over the initial selection
ZH 不要将数据大小扩展到初始选择上 

// DIALOGS:4820
EN &Undo
ZH &撤消 

// DIALOGS:4820
EN Undo modifications in selected area
ZH 在选定区域进行撤消修改 

// DIALOGS:4822
EN Cu&t
ZH Ch&c

// DIALOGS:4822
EN Cut selection to clipboard
ZH 切成剪贴板的选择 

// DIALOGS:4824
EN &Copy
ZH &复制 

// DIALOGS:4824
EN Copy selection to clipboard
ZH 将选择复制到剪贴板 

// DIALOGS:4826
EN &Paste
ZH &粘贴 

// DIALOGS:4826
EN Insert contents of clipboard
ZH 插入剪贴板的内容 

// DIALOGS:4828
EN Select &all
ZH 全选 

// DIALOGS:4828
EN Select all data
ZH 选择所有数据 

// DIALOGS:4830
EN &Zero selection
ZH &零选择 

// DIALOGS:4830
EN Set selected bytes to zero
ZH 将选定的字节设置为零 

// DIALOGS:5184
EN Unable to allocate %li. bytes of memory
ZH 无法分配 %li. 内存的字节 

// DIALOGS:5465
EN HEX +%02X
ZH 十六进制 + %02X 

// DIALOGS:5468
EN INS
ZH ins 

// DIALOGS:5468
EN OVR
ZH OVR 

// DIALOGS:5545
EN ASCII
ZH ASCII 

// DIALOGS:5552
EN UTF-8
ZH UTF-8 

// DIALOGS:5554
EN MBCS
ZH MBCS 

// DIALOGS:5766
EN Assumed by expression
ZH 由表达假设 

// DIALOGS:5767
EN Boolean value (TRUE/FALSE)
ZH 布尔值 (true/false)  

// DIALOGS:5768
EN Window handle
ZH 窗口手柄 

// DIALOGS:5769
EN Message code (WM_xxx)
ZH 消息代码 (WM_XXX)  

// DIALOGS:5778
EN Automatic
ZH 自动的 

// DIALOGS:5858
EN Condition:
ZH 健康) 状况： 

// DIALOGS:5861
EN Set conditional expression
ZH 设置条件表达式 

// DIALOGS:5863
EN Deactivate breakpoint but keep its data
ZH 停用断点,但保留数据 

// DIALOGS:5867
EN Set breakpoint
ZH 设置断点 

// DIALOGS:5869
EN Do nothing
ZH 没做什么 

// DIALOGS:5881
EN Expressions (name=expr, name=expr...):
ZH 表达式 (名称= expr,name = expr ...) ： 

// DIALOGS:5885
EN Expressions to protocol (separate multiple expressions with comma)
ZH 协议的表达式 (单独的多个表达式逗号)  

// DIALOGS:5887
EN Decode expressions as:
ZH 解码表达式为： 

// DIALOGS:5889
EN Select how to decode the values of expressions
ZH 选择如何解码表达式的值 

// DIALOGS:5891
EN Assume function of type:
ZH 假设类型的函数： 

// DIALOGS:5893
EN Select predefined decoding of call arguments
ZH 选择调用参数的预定义解码 

// DIALOGS:5894
EN Never
ZH 绝不 

// DIALOGS:5896
EN On condition
ZH 条件 

// DIALOGS:5898
EN Always
ZH 总是 

// DIALOGS:5901
EN Pause program:
ZH 暂停程序： 

// DIALOGS:5903
EN Never pause on this breakpoint
ZH 切勿在这个断点上停下来 

// DIALOGS:5905
EN Pause on this breakpoint if condition is TRUE
ZH 如果条件为true,请在此断点上暂停 

// DIALOGS:5907
EN Always pause on this breakpoint
ZH 总是在这个断点上停下来 

// DIALOGS:5909
EN Log value of expressions:
ZH 表达式的日志值： 

// DIALOGS:5911
EN Never log values of expressions on this breakpoint
ZH 切勿在此断点上表达式的log值 

// DIALOGS:5913
EN Log values of expressions if condition is TRUE
ZH 表达式的日志值如果条件为真 

// DIALOGS:5915
EN Always log values of expressions on this breakpoint
ZH 始终在此断点上的表达式log值 

// DIALOGS:5917
EN Log function arguments:
ZH 日志函数参数： 

// DIALOGS:5919
EN Never log function arguments on this breakpoint
ZH 切勿在此断点上进行登录函数参数 

// DIALOGS:5921
EN Log function arguments if condition is TRUE
ZH 日志函数参数如果条件为true 

// DIALOGS:5923
EN Always log function arguments on this breakpoint
ZH 始终在此断点上登录函数参数 

// DIALOGS:5925
EN Log returned value:
ZH 日志返回值： 

// DIALOGS:5927
EN Never log value returned by function
ZH 切勿通过函数返回的日志值 

// DIALOGS:5929
EN Log value returned by function if condition is TRUE
ZH 如果条件为true,则由函数返回的日志值 

// DIALOGS:5931
EN Always log value returned by functiont
ZH 始终通过函数返回的日志值 

// DIALOGS:5935
EN Pass count (dec.)
ZH 通过计数 (十二月)  

// DIALOGS:5938
EN Skip specified number of breaks (decimal notation)
ZH 跳过指定的断裂数 (十进制表示法)  

// DIALOGS:5939
EN Actual count
ZH 实际计数 

// DIALOGS:5942
EN Number of breaks skipped so far (decimal notation)
ZH 到目前为止跳过的休息次数 (十进制表示法)  

// DIALOGS:5943
EN Periodical
ZH 期刊 

// DIALOGS:5944
EN Check to break on each passcount-th breakpoint
ZH 检查为每个Passcount-th The Breakpoint打破 

// DIALOGS:6129
EN Breakpoint specifies no action and will be removed!
ZH 断点指定没有任何动作,将被删除！ 

// DIALOGS:6141
EN Condition: %s
ZH 条件 

// DIALOGS:6157
EN Expression: %s
ZH 表达： %s 

// DIALOGS:6230
EN Set breakpoint at
ZH 设置断点 

// DIALOGS:6232
EN Edit breakpoint at
ZH 编辑断点处 

// DIALOGS:6237
EN Set breakpoints at
ZH 设置断点 

// DIALOGS:6239
EN Edit breakpoints at
ZH 编辑断点 

// DIALOGS:6458
EN Break on:
ZH 打断： 

// DIALOGS:6460
EN Read access
ZH 阅读访问 

// DIALOGS:6461
EN Break when memory range is accessed for read
ZH 访问内存范围以进行阅读时断开 

// DIALOGS:6462
EN Write access
ZH 写入访问 

// DIALOGS:6463
EN Break when memory range is accessed for write
ZH 当访问记忆范围以进行写时,请断开 

// DIALOGS:6464
EN Execution
ZH 执行 

// DIALOGS:6465
EN Break when command from the memory range is executed
ZH 从内存范围执行命令时断开 

// DIALOGS:6782
EN Set memory breakpoint at
ZH 设置内存断点 

// DIALOGS:6784
EN Edit memory breakpoint at
ZH 编辑内存断点 

// DIALOGS:6928
EN Break when command at the specified address is executed
ZH 当执行指定地址处的命令何时中断 

// DIALOGS:6929
EN Access (R/W)
ZH 访问 (R/W)  

// DIALOGS:6930
EN Break when data is accessed (but not executed)
ZH 访问数据 (但未执行) 时中断 

// DIALOGS:6931
EN Write
ZH 写 

// DIALOGS:6932
EN Break when data is written to the specified location
ZH 当数据写入指定位置时断开 

// DIALOGS:6935
EN Data size:
ZH 数据大小： 

// DIALOGS:6938
EN Break only on the specified address
ZH 仅在指定的地址上断开 

// DIALOGS:6940
EN Breakpoint is 2 bytes long
ZH 断点是2个字节长 

// DIALOGS:6941
EN Dword
ZH dword 

// DIALOGS:6942
EN Breakpoint is 4 bytes long
ZH 断点是4个字节长 

// DIALOGS:6945
EN Hardware slot:
ZH 硬件插槽： 

// DIALOGS:6948
EN Check to use hardware breakpoint 1
ZH 检查使用硬件断点1 

// DIALOGS:6950
EN Current type of hardware breakpoint 1
ZH 当前类型的硬件断点1 

// DIALOGS:6952
EN Current address of hardware breakpoint 1
ZH 硬件断点的当前地址1 

// DIALOGS:6954
EN Check to use hardware breakpoint 2
ZH 检查使用硬件断点2 

// DIALOGS:6956
EN Current type of hardware breakpoint 2
ZH 当前类型的硬件断点2 

// DIALOGS:6958
EN Current address of hardware breakpoint 2
ZH 硬件断点2的当前地址2 

// DIALOGS:6960
EN Check to use hardware breakpoint 3
ZH 检查使用硬件断点3 

// DIALOGS:6962
EN Current type of hardware breakpoint 3
ZH 当前类型的硬件断点3 

// DIALOGS:6964
EN Current address of hardware breakpoint 3
ZH 硬件断点3的当前地址3 

// DIALOGS:6966
EN Check to use hardware breakpoint 4
ZH 检查使用硬件断点4 

// DIALOGS:6968
EN Current type of hardware breakpoint 4
ZH 当前类型的硬件断点4 

// DIALOGS:6970
EN Current address of hardware breakpoint 4
ZH 硬件断点的当前地址4 

// DIALOGS:7071
EN Log values of expressions:
ZH 表达式的日志值： 

// DIALOGS:7093
EN Always log value returned by function
ZH 始终通过函数返回的日志值 

// DIALOGS:7100
EN Current count
ZH 当前计数 

// DIALOGS:7221
EN R/W:%i
ZH C/C:%i

// DIALOGS:7225
EN Empty
ZH 空的 

// DIALOGS:7533
EN Hardware breakpoint %i at
ZH 硬件断点 %i 

// DIALOGS:7535
EN Hardware breakpoint at
ZH 硬件断点 

// DIALOGS:7729
EN Pause run trace when any checked condition is met:
ZH 当满足任何检查条件时,暂停运行跟踪： 

// DIALOGS:7734
EN Pause run trace when program enters specified range
ZH 当程序输入指定范围时,暂停运行跟踪 

// DIALOGS:7736
EN Low limit of in range (hexadecimal)
ZH 范围的低限制 (十六进制)  

// DIALOGS:7740
EN High limit of in range (hexadecimal, not included)
ZH 范围的高限制 (十六进制,不包括)  

// DIALOGS:7743
EN Pause run trace when program leaves specified range
ZH 程序离开指定范围时暂停运行跟踪 

// DIALOGS:7745
EN Low limit of out range (hexadecimal)
ZH 范围的低限制 (十六进制)  

// DIALOGS:7749
EN High limit of out range (hexadecimal, not included)
ZH 高范围的高限制 (十六进制,不包括)  

// DIALOGS:7752
EN EIP points to modified command (backup necessary!)
ZH EIP指向修改的命令 (必需备份！)  

// DIALOGS:7754
EN Don't forget to create backup when tracing self-modified code!
ZH 在追踪自修改代码时,不要忘记创建备份！ 

// DIALOGS:7757
EN Memory range 1 accessed
ZH 内存范围1访问 

// DIALOGS:7758
EN Pause run trace when memory range 1 is accessed
ZH 访问内存范围1时暂停运行跟踪 

// DIALOGS:7760
EN Low limit of memory range 1 (hexadecimal)
ZH 记忆范围1的低限 (十六进制)  

// DIALOGS:7764
EN High limit of memory range 1 (not included)
ZH 高度记忆范围1 (不包括)  

// DIALOGS:7765
EN on
ZH ch

// DIALOGS:7768
EN Read|Write|R/W
ZH 阅读|写| r/w 

// DIALOGS:7769
EN Type of memory access to memory range 1
ZH 内存访问内存范围1的类型1 

// DIALOGS:7771
EN Memory range 2 accessed
ZH 内存范围2访问 

// DIALOGS:7772
EN Pause run trace when memory range 2 is accessed
ZH 访问内存范围2时暂停运行跟踪 

// DIALOGS:7774
EN Low limit of memory range 2 (hexadecimal)
ZH 记忆范围2的低限 (十六进制)  

// DIALOGS:7778
EN High limit of memory range 2 (not included)
ZH 高度记忆范围2 (不包括)  

// DIALOGS:7783
EN Type of memory access to memory range 2
ZH 内存访问记忆范围2的类型2 

// DIALOGS:7786
EN Condition 1 is true
ZH 条件1是正确的 

// DIALOGS:7787
EN Pause run trace when condition 1 is true
ZH 条件1为真时暂停运行跟踪 

// DIALOGS:7789
EN Condition 1
ZH 条件1 

// DIALOGS:7791
EN Condition 2 is true
ZH 条件2是正确的 

// DIALOGS:7792
EN Pause run trace when condition 2 is true
ZH 条件2为真时暂停运行跟踪 

// DIALOGS:7794
EN Condition 2
ZH 条件2 

// DIALOGS:7796
EN Condition 3 is true
ZH 条件3是正确的 

// DIALOGS:7797
EN Pause run trace when condition 3 is true
ZH 条件3为真时暂停运行跟踪 

// DIALOGS:7799
EN Condition 3
ZH 条件3 

// DIALOGS:7801
EN Condition 4 is true
ZH 条件4是正确的 

// DIALOGS:7802
EN Pause run trace when condition 4 is true
ZH 条件4为真时暂停运行跟踪 

// DIALOGS:7804
EN Condition 4
ZH 条件4 

// DIALOGS:7807
EN Command count is
ZH 命令计数是 

// DIALOGS:7808
EN Pause run trace after specified (decimal) number of commands are traced
ZH 指定 (十进制) 命令数之后,暂停运行跟踪被追踪 

// DIALOGS:7810
EN Number of commands to trace (decimal)
ZH 跟踪的命令数 (十进制)  

// DIALOGS:7811
EN (Current
ZH  (当前的 

// DIALOGS:7814
EN Current number of traced commands (decimal)
ZH 当前的跟踪命令数 (十进制)  

// DIALOGS:7817
EN Reset
ZH 重置 

// DIALOGS:7818
EN Reset number of commands traced so far
ZH 重置到目前为止追踪的命令数 

// DIALOGS:7821
EN Command is (1)
ZH 命令是 (1)  

// DIALOGS:7822
EN Pause run trace when command to be executed is same as specified
ZH 暂停运行跟踪何时执行命令与指定 

// DIALOGS:7825
EN Command 1 (pseudooperands are allowed, use semicolon to separate multiple patterns)
ZH 命令1 (允许伪足,使用分号分隔多种模式)  

// DIALOGS:7827
EN Command is (2)
ZH 命令是 (2)  

// DIALOGS:7831
EN Command 2 (pseudooperands are allowed, use semicolon to separate multiple patterns)
ZH 命令2 (允许伪足,使用分号分隔多种模式)  

// DIALOGS:7836
EN Set condition
ZH 设置条件 

// DIALOGS:7840
EN Condition to pause run or hit trace
ZH 条件暂停运行或点击跟踪 

// DIALOGS:7985
EN Invalid low in range limit
ZH 范围极限无效 

// DIALOGS:7988
EN Invalid high in range limit
ZH 范围极限无效 

// DIALOGS:7991
EN Empty in range
ZH 范围为空 

// DIALOGS:7994
EN Low in limit exceeds high limit
ZH 低限度超过高限 

// DIALOGS:8005
EN Invalid low out range limit
ZH 无效的低范围限制 

// DIALOGS:8008
EN Invalid high out range limit
ZH 无效的高范围极限 

// DIALOGS:8011
EN Empty out range
ZH 空出范围 

// DIALOGS:8014
EN Low out limit exceeds high limit
ZH 低限制超过高限 

// DIALOGS:8025
EN Memory range %i:
ZH 内存范围 %i： 

// DIALOGS:8027
EN Invalid low limit
ZH 无效的低极限 

// DIALOGS:8030
EN Invalid high limit
ZH 无效的高极限 

// DIALOGS:8033
EN Empty range
ZH 空范围 

// DIALOGS:8035
EN Low limit exceeds high limit
ZH 低限度超过高限 

// DIALOGS:8049
EN Condition %i:
ZH 条件 %i： 

// DIALOGS:8063
EN Invalid count
ZH 无效的计数 

// DIALOGS:8066
EN Count is zero
ZH 计数为零 

// DIALOGS:8070
EN Count is same as or lower than actual count
ZH 计数与实际计数相同或低于实际计数 

// DIALOGS:8085
EN Command %i:
ZH 命令 %i： 

// DIALOGS:8171
EN Protocol the following commands:
ZH 协议以下命令： 

// DIALOGS:8173
EN All commands
ZH 所有命令 

// DIALOGS:8173
EN Protocol all commands
ZH 协议所有命令 

// DIALOGS:8175
EN Taken jumps, calls, returns and their destinations
ZH 跳高,调用,回报及其目的地 

// DIALOGS:8177
EN Protocol all control transfer commands and their destinations
ZH 协议所有控制传输命令及其目的地 

// DIALOGS:8179
EN Call destinations
ZH 调用目的地 

// DIALOGS:8180
EN Protocol only entry points of called subroutines
ZH 协议仅称为子例程的入口点 

// DIALOGS:8182
EN Commands that access the following memory ranges:
ZH 命令访问以下内存范围： 

// DIALOGS:8183
EN Protocol only commands accessing specified memory
ZH 协议仅命令访问指定内存 

// DIALOGS:8185
EN Range 1
ZH 范围1 

// DIALOGS:8186
EN Protocol commands that access memory range 1
ZH 访问内存范围1的协议命令1 

// DIALOGS:8199
EN Range 2
ZH 范围2 

// DIALOGS:8200
EN Protocol commands that access memory range 2
ZH 访问内存范围2的协议命令2 

// DIALOGS:8213
EN Protocol only the following EIP ranges:
ZH 协议仅以下EIP范围： 

// DIALOGS:8214
EN Limit protocolling to the specified pieces of code
ZH 将原始批准限制为指定的代码 

// DIALOGS:8217
EN List of EIP ranges to protocol, second address is not included
ZH EIP范围到协议的列表,不包括第二个地址 

// DIALOGS:8218
EN Add range
ZH 添加范围 

// DIALOGS:8219
EN Add range of addresses
ZH 添加地址范围 

// DIALOGS:8220
EN Follow in CPU
ZH 跟随CPU 

// DIALOGS:8221
EN Follow selected range in the CPU Disassembler pane
ZH 在CPU反汇编器窗格中遵循选定的范围

// DIALOGS:8222
EN Delete range
ZH 删除范围 

// DIALOGS:8223
EN Delete selected range of addresses
ZH 删除选定的地址范围 

// DIALOGS:8224
EN Clear list
ZH 清晰的列表 

// DIALOGS:8225
EN Delete all ranges
ZH 删除所有范围 

// DIALOGS:8227
EN Symbolic
ZH 象征性 

// DIALOGS:8227
EN Show symbolic names if available
ZH 显示符号名称如果可用 

// DIALOGS:8231
EN Set protocolling mode
ZH 设置原始模式 

// DIALOGS:8233
EN Discard all modifications
ZH 丢弃所有修改 

// DIALOGS:8235
EN Commands protocolled by run trace
ZH 命令通过运行跟踪固定 

// DIALOGS:8376
EN Add address range to protocol
ZH 将地址范围添加到协议 

// DIALOGS:8393
EN Edit address range to protocol
ZH 编辑地址范围到协议 

// DIALOGS:8457
EN All memory ranges are disabled
ZH 所有内存范围都是禁用的 

// DIALOGS:8540
EN Check to allow debuggee execution on this CPU
ZH 检查以允许在此CPU上执行debuggee 

// DIALOGS:8604
EN Accept affinity
ZH 接受亲和力 

// DIALOGS:8608
EN Select affinity mask
ZH 选择亲和力掩码

// DIALOGS:8622
EN CPU %i
ZH CPU %i

// DIALOGS:8653
EN Set affinity mask
ZH 设置亲和力掩码

// DIALOGS:8677
EN List of found items
ZH 发现的项目列表 

// DIALOGS:8679
EN Go to the specified location
ZH 转到指定的位置 

// DIALOGS:8681
EN Go back to the original command
ZH 回到原始命令 

// DIALOGS:8683
EN Known jumps and calls
ZH 已知的跳跃和调用 

// DIALOGS:8689
EN List of code locations
ZH 代码位置列表 

// DIALOGS:8693
EN Cancel code browsing
ZH 取消代码浏览 

// DIALOGS:8695
EN Browse code locations
ZH 浏览代码位置 

// DIALOGS:8747
EN Jump
ZH 跳 

// DIALOGS:8750
EN Table jump
ZH 桌子跳 

// DIALOGS:8753
EN RET
ZH ret 

// DIALOGS:8756
EN Call
ZH 称呼 

// DIALOGS:8759
EN Table call
ZH 表调用 

// DIALOGS:8793
EN Switch origin
ZH 开关来源 

// DIALOGS:8803
EN default case
ZH 默认情况 

// DIALOGS:8806
EN case
ZH 案子 

// DIALOGS:8808
EN cases
ZH 案例 

// DIALOGS:8833
EN and others
ZH 和别的 

// DIALOGS:8936
EN Known calls from
ZH 来自已知的调用 

// DIALOGS:8938
EN Known jumps from
ZH 已知的跳跃 

// DIALOGS:8957
EN All known jumps and calls to
ZH 所有已知的跳跃和调用 

// DIALOGS:8959
EN Local jumps and calls to
ZH 当地的跳跃和调用 

// DIALOGS:8990
EN Cases of switch
ZH 开关情况 

// DIALOGS:9208
EN Code page
ZH 代码页 

// DIALOGS:9235
EN Select multibyte code page
ZH 选择多级代码页 

// DIALOGS:9237
EN Select code page
ZH 选择代码页 

// DUMP:107
EN Source
ZH 资源 

// DUMP:108
EN Source code
ZH 源代码 

// DUMP:111
EN Profile  Comments
ZH 个人资料注释 

// DUMP:112
EN Profile and comments
ZH 个人资料和注释 

// DUMP:115
EN Profile  Source
ZH 配置文件源 

// DUMP:116
EN Profile and source code
ZH 配置文件和源代码 

// DUMP:119
EN Comments
ZH 注释 

// DUMP:148
EN Locked
ZH 锁定 

// DUMP:149
EN Press to allow automatic repositioning
ZH 按以允许自动重新定位 

// DUMP:151
EN Backup
ZH 备份 

// DUMP:152
EN Press to view current data
ZH 按以查看当前数据 

// DUMP:155
EN Address of first displayed byte in a row
ZH 连续显示字节的第一个地址 

// DUMP:173
EN Hex dump
ZH 十六进制 

// DUMP:174
EN Hexadecimal dump, press to change dump type
ZH 十六进制转储,按更改转储类型 

// DUMP:178
EN ASCII dump, press to toggle between UNICODE and ASCII
ZH ASCII转储,按在Unicode和ASCII之间切换 

// DUMP:191
EN UNICODE dump, press to toggle between UNICODE and ASCII
ZH Unicode转储,按在Unicode和ASCII之间切换 

// DUMP:202
EN Multibyte
ZH 多键 

// DUMP:204
EN Multibyte text, press to change to UNICODE or ASCII
ZH 多键文本,按更改为Unicode或ASCII 

// DUMP:211
EN ASCII dump
ZH ASCII垃圾场 

// DUMP:212
EN ASCII dump, press to change dump type
ZH ASCII转储,按更改转储类型 

// DUMP:219
EN UNICODE dump
ZH Unicode转储 

// DUMP:220
EN UNICODE dump, press to change dump type
ZH Unicode转储,按更改转储类型 

// DUMP:227
EN 16-bit signed decimal dump
ZH 16位签名的十进制垃圾场 

// DUMP:229
EN 16-bit signed decimal dump, press to change dump type
ZH 16位签名的十进制转储,按更改转储类型 

// DUMP:232
EN 32-bit signed decimal dump
ZH 32位签名的十进制垃圾场 

// DUMP:234
EN 32-bit signed decimal dump, press to change dump type
ZH 32位签名的十进制转储,按更改转储类型 

// DUMP:242
EN 16-bit unsigned decimal dump
ZH 16位未签名的十进制转储 

// DUMP:244
EN 16-bit unsigned decimal dump, press to change dump type
ZH 16位未签名的十进制转储,按更改转储类型 

// DUMP:247
EN 32-bit unsigned decimal dump
ZH 32位未签名的十进制转储 

// DUMP:249
EN 32-bit unsigned decimal dump, press to change dump type
ZH 32位未签名的十进制转储,按更改转储类型 

// DUMP:257
EN 16-bit hex dump
ZH 16位十六进制垃圾场 

// DUMP:258
EN 16-bit hexadecimal dump, press to change dump type
ZH 16位十六进制转储,按更改转储类型 

// DUMP:261
EN 32-bit hex dump
ZH 32位十六进制 

// DUMP:262
EN 32-bit hexadecimal dump, press to change dump type
ZH 32位十六进制转储,按更改转储类型 

// DUMP:272
EN 32-bit floating-point dump
ZH 32位浮点转储 

// DUMP:274
EN 32-bit floating-point numbers, press to change dump type
ZH 32位浮点数,按更改转储类型 

// DUMP:277
EN 64-bit floating-point dump
ZH 64位浮点转储 

// DUMP:279
EN 64-bit floating-point numbers, press to change dump type
ZH 64位浮点数,按更改转储类型 

// DUMP:282
EN 80-bit floating-point dump
ZH 80位浮点转储 

// DUMP:284
EN 80-bit floating-point numbers, press to change dump type
ZH 80位浮点数,按更改转储类型 

// DUMP:294
EN Value
ZH 价值 

// DUMP:295
EN 32-bit address, press to change dump type
ZH 32位地址,按更改转储类型 

// DUMP:299
EN Address-related comments
ZH 与地址有关的注释 

// DUMP:340
EN Hexadecimal dump of disassembled commands
ZH 反汇编命令的十六进制转储 

// DUMP:343
EN Command
ZH 命令 

// DUMP:344
EN Disassembled commands
ZH 分解命令 

// DUMP:358
EN Hexadecimal dump of decoded data
ZH 解码数据的十六进制转储 

// DUMP:361
EN Decoded data
ZH 解码数据 

// DUMP:992
EN Selection %08X..%08X (1. byte)
ZH 选择 %08X .. %08X (1.字节) 

// DUMP:994
EN Selection %08X..%08X (%i. bytes)
ZH 选择 %08X .. %08X ( %i.字节) 

// DUMP:1020
EN Current EIP
ZH 当前EIP 

// DUMP:1024
EN Current ESP
ZH 当前ESP 

// DUMP:1028
EN Disabled breakpoint
ZH 禁用断点 

// DUMP:1030
EN Conditional breakpoint
ZH 有条件的断点 

// DUMP:1032
EN Breakpoint
ZH 断点 

// DUMP:1193
EN Dump -
ZH 倾倒 - 

// DUMP:2296
EN End of SEH chain
ZH SEH链的末端 

// DUMP:2298
EN Pointer to next SEH record
ZH 指向下一个SEH记录 

// DUMP:2301
EN SE handler
ZH 见交易 

// DUMP:2376
EN RETURN from
ZH 从 

// DUMP:2379
EN to
ZH ch

// DUMP:2381
EN RETURN to
ZH 还给 

// DUMP:3095
EN This dump is read only
ZH 此转储仅读取 

// DUMP:3095
EN Read only dump
ZH 仅阅读转储 

// DUMP:3131
EN Internal copy of file '%s' is not modified. Do you really want to save unchanged dump to disk?
ZH 文件“%s”的内部副本未修改. 您真的想保存不变的垃圾场吗？ 

// DUMP:3132
EN File unchanged
ZH 文件不变 

// DUMP:3138
EN File '%s' on the disk is lost or unreadable. Do you want to save the internal copy back to disk?
ZH 磁盘上的文件“%s”丢失或不可读. 您要将内部副本保存回磁盘吗？ 

// DUMP:3139
EN Original file lost
ZH 原始文件丢失 

// DUMP:3142
EN Internal copy of file '%s' differs from original. Do you want to save modified file back to disk?
ZH 文件“%s”的内部副本与原始副本不同. 您是否要将修改后的文件保存回磁盘？ 

// DUMP:3143
EN File changed
ZH 文件更改 

// DUMP:3147
EN Size of file '%s' on the disk differs from the size of its internal copy. Probably disk file was modified. Do you want to save the internal copy?
ZH 磁盘上的文件“%s”的大小不同于其内部副本的大小. 可能修改了磁盘文件. 您要保存内部副本吗？ 

// DUMP:3151
EN If you answer 'Yes', you will be asked for the filename. If you answer 'No', you will lose any changes you have made. Press 'Cancel' to keep
ZH 如果您回答“是”,将要求您使用文件名. 如果您回答“否”,您将失去所做的任何更改. 按“取消”以保持 

// DUMP:3153
EN dump window open.
ZH 转储窗口打开. 

// DUMP:3155
EN OllyDbg running.
ZH Ollydbg跑步. 

// DUMP:3173
EN Save file as
ZH 将文件另存为 

// DUMP:3193
EN Unable to backup file '%s'. Please try another name
ZH 无法备份文件'%s'. 请尝试另一个名字 

// DUMP:3200
EN Unable to create file '%s'. Please try another name
ZH 无法创建文件“%s”. 请尝试另一个名字 

// DUMP:3206
EN File %s
ZH 文件 %s 

// DUMP:3209
EN Error saving file '%s'. Please try another name
ZH 错误保存文件'%s'. 请尝试另一个名字 

// DUMP:3312
EN Huge clipboard data size
ZH 庞大的剪贴板数据大小 

// DUMP:3316
EN Estimated size of clipboard buffer is %i. MB. Data at the end of the selection may get lost. Do you want to continue?\n\nTip: If you need all the selected data, try to reduce width of some columns, or save data directly to file.
ZH 剪贴板缓冲区的估计尺寸为 %i. MB. 选择结束时的数据可能会丢失. 您要继续吗？\n \ntip：如果您需要所有选定的数据,请尝试减少某些列的宽度,或直接保存数据到文件. 

// DUMP:3386
EN Unable to copy the whole selection to the clipboard
ZH 无法将整个选择复制到剪贴板 

// DUMP:3905
EN Memory list has changed, dump no longer corresponds to memory block
ZH 内存列表已更改,转储不再对应于内存块 

// DUMP:3938
EN Unable to create backup
ZH 无法创建备份 

// DUMP:4025
EN Load backup from file
ZH 从文件加载备份 

// DUMP:4027
EN Save backup to file
ZH 将备份保存到文件 

// DUMP:4029
EN Save current data to file
ZH 将当前数据保存到文件 

// DUMP:4036
EN Unable to open or read file '%s'.
ZH 无法打开或读取文件“%s”. 

// DUMP:4040
EN File size does not match
ZH 文件大小不匹配 

// DUMP:4042
EN Size of backup file '%s' (%i. bytes) differs from the size of dump (%i. bytes). Load anyway and %s?
ZH 备份文件的大小“%s” ( %i.字节) 与转储的大小 ( %i.字节) 不同. 无论如何加载和 %s？ 

// DUMP:4043
EN fill the rest of backup with current data
ZH 用当前数据填充其余的备份 

// DUMP:4044
EN truncate the file
ZH 截断文件 

// DUMP:4075
EN Unable to create file '%s'
ZH 无法创建文件'%s' 

// DUMP:4080
EN Error writing backup to file '%s'
ZH 错误编写备份到文件“%s” 

// DUMP:4107
EN Error writing data to file '%s'
ZH 错误地将数据写入文件“%s” 

// DUMP:4172
EN Unable to copy
ZH 无法复制 

// DUMP:4325
EN Edit file at offset %08X
ZH 在offset %08X上编辑文件

// DUMP:4330
EN Edit code at address
ZH 编辑地址代码 

// DUMP:4332
EN Edit data at address
ZH 编辑地址的数据 

// DUMP:4452
EN word
ZH 单词 

// DUMP:4453
EN doubleword
ZH 双字 

// DUMP:4455
EN at offset %08X
ZH 在偏移 %08X

// DUMP:4639
EN Unable to locate executable file
ZH 无法找到可执行文件 

// DUMP:4653
EN Copy to Import Address Table
ZH 复制到导入地址表 

// DUMP:4657
EN You are going to copy modifications back to the Import Address Table. This is usually bad idea because IAT in memory is updated by the Process Loader and differs from that in the executable file. Do you still want to copy selection to the executable file?
ZH 您将将修改复制回导入地址表. 这通常是坏主意,因为内存中的IAT是由进程加载程序更新的,并且与可执行文件中的IAT不同. 您是否仍然要将选择复制到可执行文件？ 

// DUMP:4664
EN Unable to copy selection
ZH 无法复制选择 

// DUMP:4668
EN Some fixups are only partially selected. OllyDbg is unable to copy them to the executable file. File dump was not modified.%s
ZH 一些修复程序仅部分选择. Ollydbg无法将其复制到可执行文件. 文件转储未修改. %s 

// DUMP:4670
EN To visualize fixups, please check 'Underline fixups' in Code dump options.
ZH 要可视化修复程序,请在代码转储选项中检查“下划线修复程序”. 

// DUMP:4673
EN Selection contains modified fixups.
ZH 选择包含修改的修复程序. 

// DUMP:4676
EN It is hardly possible that main program will be loaded on different base addres. However, should it happen,
ZH 主要程序几乎不可能被加载到不同的基础插件上. 但是,如果发生, 

// DUMP:4679
EN Please keep in mind that in the case that this DLL will be loaded on different base address,
ZH 请记住,如果此dll会加载在不同的基础地址上, 

// DUMP:4682
EN OS will adjust fixups, thus modifying your code. Were you not carefull enough, this may have disastrous effects on the debugged application.
ZH OS将调整修复程序,从而修改您的代码. 如果您不够小心,这可能会对调试应用程序产生灾难性影响. 

// DUMP:4683
EN Modified fixups
ZH 修改后的修复程序 

// DUMP:4685
EN Modified file
ZH 修改后的文件 

// DUMP:4687
EN Internal copy of file '%s' was modified. Choose 'Save file' from popup menu if you want to save modifications to disk.
ZH 修改了文件“%s”的内部副本. 如果要将修改保存到磁盘,请从弹出菜单中选择“保存文件”. 

// DUMP:4718
EN Unable to read memory of debugged process
ZH 无法读取对调试进程的记忆 

// DUMP:4740
EN You are going to copy modifications back to the Import Address Table. This is usually bad idea because IAT in memory is updated by the Process Loader and differs from that in the executable file. IAT will be excluded from Copy all modifications.
ZH 您将将修改复制回导入地址表. 这通常是坏主意,因为内存中的IAT是由进程加载程序更新的,并且与可执行文件中的IAT不同. IAT将被排除在副本所有修改之外. 

// DUMP:4815
EN Some fixups are only partially available. OllyDbg is unable to copy them to the executable file. File dump was not modified. Remaining modifications, if any, will not be saved.%s
ZH 一些修复程序仅部分可用. Ollydbg无法将其复制到可执行文件. 文件转储未修改. 剩余的修改 (如果有) 将无法保存. %s 

// DUMP:4821
EN Unable to copy selection to the executable file. Search stopped. Remaining modifications, if any, will not be saved.
ZH 无法将选择复制到可执行文件. 搜索停止. 剩余的修改 (如果有) 将无法保存. 

// DUMP:4830
EN Memory block and its backup copy are identical
ZH 内存块及其备份副本相同 

// DUMP:4833
EN Memory block contains modified fixups.
ZH 内存块包含修改的修复程序. 

// DUMP:4873
EN Unable to access stack memory
ZH 无法访问堆栈内存 

// DUMP:4875
EN Enter value to push
ZH 输入值 

// DUMP:4947
EN Unable to set temporary breakpoint
ZH 无法设置临时断点 

// DUMP:5117
EN Limit run trace protocol to selection
ZH 将跟踪协议限制为选择 

// DUMP:5119
EN Limit run trace protocol to current procedure
ZH 将跟踪协议限制为当前进程 

// DUMP:5123
EN Add selection to run trace protocol
ZH 添加选择以运行跟踪协议 

// DUMP:5125
EN Add procedure to run trace protocol
ZH 添加进程以运行跟踪协议 

// DUMP:5174
EN Add label at
ZH 添加标签 

// DUMP:5176
EN Add comment at
ZH 添加注释 

// DUMP:5178
EN Edit label at
ZH 编辑标签 

// DUMP:5180
EN Edit comment at
ZH 编辑注释 

// DUMP:5253
EN Suspicious location
ZH 可疑位置 

// DUMP:5255
EN You are going to set execution point at the location %08X which is probably not the first byte of the command. Are you sure?
ZH 您将在位置 %08X设置执行点,这可能不是命令的第一个字节. 你确定吗？

// DUMP:5484
EN Enter expression to follow
ZH 输入表达式以遵循 

// DUMP:5494
EN Offset beyond the end of file
ZH 偏移文件末尾 

// DUMP:5496
EN No memory at the specified address
ZH 指定地址没有内存 

// DUMP:5812
EN Decode memory area starting at address %08X as a structure of the following type:
ZH 解码内存区域从地址 %08X开始,作为以下类型的结构：

// DUMP:5867
EN Item not found
ZH 找不到项目 

// DUMP:6083
EN Commands found in
ZH 在中找到命令 

// DUMP:6085
EN Command sequences found in
ZH 在 

// DUMP:6108
EN References to
ZH 参考 

// DUMP:6154
EN References to constant
ZH 引用常数 

// DUMP:6178
EN Enter constant or expression to search for
ZH 输入常数或表达以搜索 

// DUMP:6200
EN Modifications in module
ZH 模块中的修改 

// DUMP:6238
EN Text strings referenced in
ZH 引用的文本字符串 

// DUMP:6254
EN GUIDs referenced in
ZH 引用的指南 

// DUMP:6268
EN All user-defined comments
ZH 所有用户定义的注释 

// DUMP:6282
EN Procedures in
ZH 程序中的程序 

// DUMP:6298
EN Switches in
ZH 切换 

// DUMP:6316
EN Floating-point constants referenced in
ZH 浮点常数 

// DUMP:6341
EN No record found
ZH 没有找到记录 

// DUMP:6567
EN No help on selected command
ZH 对选定命令没有帮助 

// DUMP:6641
EN Decode as a structure of the following type:
ZH 解码为以下类型的结构： 

// DUMP:6712
EN Create backup
ZH 创建备份 

// DUMP:6713
EN Create backup copy of data displayed in dump window
ZH 创建在转储窗口中显示的数据的备份副本 

// DUMP:6715
EN Read executable file
ZH 阅读可执行文件 

// DUMP:6716
EN Create backup from the section images in executable file
ZH 从可执行文件中的“部分图像”创建备份 

// DUMP:6718
EN View backup
ZH 查看备份 

// DUMP:6719
EN View backup copy of data displayed in dump window
ZH 查看在转储窗口中显示的数据的备份副本 

// DUMP:6721
EN View current data
ZH 查看当前数据 

// DUMP:6722
EN Finish backup view and display current data
ZH 完成备份视图并显示当前数据 

// DUMP:6724
EN Update backup
ZH 更新备份 

// DUMP:6725
EN Update backup copy of data displayed in dump window
ZH 更新在转储窗口中显示的数据的备份副本 

// DUMP:6727
EN Delete backup
ZH 删除备份 

// DUMP:6728
EN Delete backup copy of data displayed in dump window
ZH 删除在转储窗口中显示的数据的备份副本 

// DUMP:6730
EN Load backup from file...
ZH 从文件加载备份... 

// DUMP:6731
EN Read old backup from the disk
ZH 从磁盘上阅读旧备份 

// DUMP:6733
EN Save backup to file...
ZH 将备份保存到文件... 

// DUMP:6734
EN Save backup to file in binary format
ZH 将备份保存到二进制格式的文件 

// DUMP:6736
EN Save data to file...
ZH 将数据保存到文件... 

// DUMP:6737
EN Save current data to file in binary format
ZH 将当前数据保存到二进制格式的文件 

// DUMP:6743
EN Undo selection
ZH 撤消选择 

// DUMP:6744
EN Undo modifications within selected block
ZH 撤消选定块中的修改 

// DUMP:6746
EN &Copy as table
ZH 和复制为桌子 

// DUMP:6747
EN Copy selection to clipboard as seen on the screen
ZH 将选择复制到剪贴板,如屏幕上看到 

// DUMP:6749
EN &Copy backup as table
ZH 并将备份复制为表格 

// DUMP:6752
EN Copy address
ZH 复制地址 

// DUMP:6753
EN Copy address of selection to clipboard
ZH 将选择的地址复制到剪贴板 

// DUMP:6755
EN &Binary copy
ZH 和二进制副本 

// DUMP:6756
EN Copy selected data to clipboard in hexadecimal format
ZH 以十六进制格式将选定的数据复制到剪贴板 

// DUMP:6758
EN &Binary copy of backup
ZH 和备份二进制副本 

// DUMP:6761
EN Binary &paste
ZH 二进制和糊状 

// DUMP:6762
EN Paste data from clipboard in hexadecimal format
ZH 从十六进制格式的剪贴板粘贴数据 

// DUMP:6764
EN Edit word...
ZH 编辑字... 

// DUMP:6765
EN Edit first selected word
ZH 编辑第一个选择的单词 

// DUMP:6767
EN Edit doubleword...
ZH 编辑双字... 

// DUMP:6768
EN Edit first selected doubleword
ZH 编辑第一个选择的双字 

// DUMP:6770
EN Edit 32-bit float...
ZH 编辑32位浮点... 

// DUMP:6771
EN Edit selected 32-bit floating-point number
ZH 编辑选定的32位浮点数 

// DUMP:6773
EN Edit 64-bit float...
ZH 编辑64位浮点... 

// DUMP:6774
EN Edit selected 64-bit floating-point number
ZH 编辑选定的64位浮点数 

// DUMP:6776
EN Edit 80-bit float...
ZH 编辑80位浮点... 

// DUMP:6777
EN Edit 80-bit (long double) floating-point number
ZH 编辑80位 (长双重) 浮点数 

// DUMP:6779
EN Binary &edit...
ZH 二进制和编辑... 

// DUMP:6780
EN Edit selection in text and binary forms
ZH 编辑文本和二进制形式的选择 

// DUMP:6782
EN Fill with &zeros
ZH 填充&零 

// DUMP:6783
EN Fill selection with zeros
ZH 用零填充选择 

// DUMP:6785
EN Fill with &NOPs
ZH 填充&nop 

// DUMP:6786
EN Fill selection with NOPs
ZH 用nop填充选择 

// DUMP:6788
EN Fill with &FF's
ZH 填充&ff的 

// DUMP:6789
EN Fill selection with codes 0xFF
ZH 用代码0xff填充选择 

// DUMP:6792
EN Select whole data
ZH 选择整个数据 

// DUMP:6794
EN Select &procedure
ZH 选择和进程 

// DUMP:6795
EN Select current procedure
ZH 选择当前进程 

// DUMP:6797
EN Select &structure
ZH 选择与结构 

// DUMP:6798
EN Select current structure
ZH 选择当前结构 

// DUMP:6800
EN Copy to executable
ZH 复制为可执行 

// DUMP:6801
EN Copy selection to executable file
ZH 将选择复制到可执行文件 

// DUMP:6803
EN Copy all modifications to executable
ZH 将所有修改复制到可执行 

// DUMP:6804
EN Copy all modifications from memory block to executable file
ZH 复制从内存块到可执行文件的所有修改 

// DUMP:6810
EN Toggle
ZH 切换 

// DUMP:6811
EN Toggle INT3 breakpoint
ZH 切换INT3断点 

// DUMP:6813
EN Conditional...
ZH 有条件... 

// DUMP:6814
EN Set or edit conditional INT3 breakpoint
ZH 设置或编辑有条件的INT3断点 

// DUMP:6816
EN Conditional log...
ZH 条件日志... 

// DUMP:6817
EN Set or edit conditional logging INT3 breakpoint
ZH 设置或编辑条件记录INT3断点 

// DUMP:6819
EN Run to selection
ZH 运行到选择 

// DUMP:6820
EN Run application till the first selected command is hit
ZH 运行应用程序直到第一个选定命令被击中 

// DUMP:6823
EN Temporarily disable selected INT3 breakpoint
ZH 暂时禁用选定的INT3断点 

// DUMP:6826
EN Re-enable selected INT3 breakpoint
ZH 重新启用选定的INT3断点 

// DUMP:6828
EN Memory...
ZH 记忆... 

// DUMP:6829
EN Set simple memory breakpoint
ZH 设置简单的内存断点 

// DUMP:6831
EN Memory log...
ZH 内存日志... 

// DUMP:6832
EN Set or edit conditional logging memory breakpoint
ZH 设置或编辑条件记录内存断点 

// DUMP:6834
EN Memory disable
ZH 记忆禁用 

// DUMP:6835
EN Temporarily disable the selected memory breakpoint
ZH 暂时禁用选定的内存断点 

// DUMP:6837
EN Memory enable
ZH 内存启用 

// DUMP:6838
EN Re-enable the selected memory breakpoint
ZH 重新启用选定的内存断点 

// DUMP:6840
EN Memory delete
ZH 内存删除 

// DUMP:6841
EN Remove selected memory breakpoint
ZH 删除选定的内存断点 

// DUMP:6843
EN Hardware...
ZH 硬件... 

// DUMP:6844
EN Set simple hardware breakpoint
ZH 设置简单的硬件断点 

// DUMP:6846
EN Hardware log...
ZH 硬件日志... 

// DUMP:6847
EN Set or edit conditional logging hardware breakpoint
ZH 设置或编辑条件记录硬件断点 

// DUMP:6849
EN Hardware disable
ZH 硬件禁用 

// DUMP:6850
EN Temporarily disable selected hardware breakpoint
ZH 暂时禁用选定的硬件断点 

// DUMP:6852
EN Hardware enable
ZH 硬件启用 

// DUMP:6853
EN Re-enable the selected hardware breakpoint
ZH 重新启用选定的硬件断点 

// DUMP:6855
EN Hardware delete
ZH 硬件删除 

// DUMP:6856
EN Remove selected hardware breakpoint
ZH 删除选定的硬件断点 

// DUMP:6859
EN Add selection to the run trace protocol
ZH 将选择添加到运行跟踪协议 

// DUMP:6862
EN Add procedure that contains selection to the run trace protocol
ZH 添加在运行跟踪协议中包含选择的进程 

// DUMP:6868
EN Memory &address
ZH 内存和地址 

// DUMP:6869
EN Follow address of memory operand in CPU Dump
ZH 按照CPU转储中的内存操作数的地址 

// DUMP:6871
EN String &source
ZH 字符串和源 

// DUMP:6872
EN Follow register ESI (string source) in CPU Dump
ZH 在CPU转储中关注寄存器ESI (字符串源)  

// DUMP:6874
EN String destination
ZH 字符串目标 

// DUMP:6875
EN Follow register EDI (string destination) in CPU Dump
ZH 在CPU转储中关注寄存器EDI (字符串目标)  

// DUMP:6877
EN Address &constant
ZH 地址和常数 

// DUMP:6878
EN Follow address constant in CPU Dump
ZH 在CPU转储中关注地址常数 

// DUMP:6880
EN &Immediate constant
ZH 和直接常数 

// DUMP:6881
EN Follow immediate constant in CPU Dump
ZH 在CPU转储中关注立即常量 

// DUMP:6883
EN &Address
ZH &地址 

// DUMP:6886
EN Selection
ZH 选择 

// DUMP:6887
EN Repeat selection in CPU Dump
ZH 在CPU转储中重复选择 

// DUMP:6893
EN Origin
ZH 起源 

// DUMP:6894
EN Follow EIP of current thread
ZH 关注当前线程的EIP 

// DUMP:6896
EN Expression...
ZH 表达... 

// DUMP:6897
EN Specify location to follow
ZH 指定要遵循的位置 

// DUMP:6899
EN Jump or call to selection...
ZH 跳或打调用选择... 

// DUMP:6900
EN Follow one of known jumps or calls to the selected command
ZH 遵循已知的跳跃或调用之一到所选命令 

// DUMP:6902
EN Table jump destination...
ZH 餐桌跳跃目的地... 

// DUMP:6903
EN Follow one of known table jump destinations
ZH 遵循已知的桌子跳跃目的地之一 

// DUMP:6905
EN Switch case...
ZH 开关外壳... 

// DUMP:6906
EN Follow one of known switch cases
ZH 遵循已知的开关案例之一 

// DUMP:6908
EN Previous location
ZH 以前的位置 

// DUMP:6909
EN Go to the previous location in the history list
ZH 转到历史记录列表中的先前位置 

// DUMP:6911
EN Next location
ZH 下一个位置 

// DUMP:6912
EN Go to the next location in the history list
ZH 转到历史列表中的下一个位置 

// DUMP:6914
EN Previous run trace record
ZH 以前的运行跟踪记录 

// DUMP:6915
EN Go to the previous location in the run trace
ZH 转到运行跟踪中的先前位置 

// DUMP:6917
EN Next run trace record
ZH 下一个运行跟踪记录 

// DUMP:6918
EN Go to the next location in the run trace
ZH 转到运行跟踪中的下一个位置 

// DUMP:6920
EN MSIL code
ZH MSIL代码 

// DUMP:6921
EN Go to the MSIL code from which selection was JIT-compiled
ZH 转到从中选择的MSIL代码 

// DUMP:6923
EN Native code
ZH 本地代码 

// DUMP:6924
EN Go to the native code that was JIT-compiled from the selection
ZH 转到从选择中汇总的本机代码 

// DUMP:6926
EN Previous procedure
ZH 先前的进程 

// DUMP:6927
EN Go to the beginning of the previous procedure
ZH 转到上一个进程的开始 

// DUMP:6929
EN Next procedure
ZH 下一个进程 

// DUMP:6930
EN Go to the beginning of the next procedure
ZH 转到下一个进程的开始 

// DUMP:6932
EN Previous structure
ZH 先前的结构 

// DUMP:6933
EN Go to the beginning of the previous structure
ZH 转到上一个结构的开头 

// DUMP:6935
EN Next structure
ZH 下一个结构 

// DUMP:6936
EN Go to the beginning of the next structure
ZH 转到下一个结构的开始 

// DUMP:6938
EN Previous frame
ZH 以前的帧 

// DUMP:6939
EN Go to the beginning of the previous stack frame
ZH 转到上一个栈帧的开头 

// DUMP:6941
EN Next frame
ZH 下一帧 

// DUMP:6942
EN Go to the beginning of the next stack frame
ZH 转到下一个栈帧的开头 

// DUMP:6944
EN Previous found item
ZH 先前发现的项目 

// DUMP:6945
EN Go to the previous found item
ZH 转到先前的项目 

// DUMP:6947
EN Next found item
ZH 接下来找到的项目 

// DUMP:6948
EN Go to the next found item
ZH 转到下一个找到的项目 

// DUMP:6951
EN Go to the current stack pointer location
ZH 转到当前的堆栈指针位置 

// DUMP:6954
EN Go to the current stack frame location
ZH 转到当前的栈帧位置 

// DUMP:6956
EN Executable file
ZH 可执行文件 

// DUMP:6957
EN Follow selection in the executable file
ZH 在可执行文件中关注选择 

// DUMP:6963
EN Names
ZH 名称 

// DUMP:6964
EN Show all names declared in the current module
ZH 显示当前模块中声明的所有名称 

// DUMP:6966
EN Command...
ZH 命令... 

// DUMP:6967
EN Find command that matches specified pattern
ZH 查找匹配指定模式的命令 

// DUMP:6969
EN Sequence of commands...
ZH 命令序列... 

// DUMP:6970
EN Find sequence of commands that matches specified pattern
ZH 查找匹配指定模式的命令序列 

// DUMP:6972
EN Constant...
ZH 持续的... 

// DUMP:6973
EN Find command that references supplied constant or expression
ZH 查找引用提供常数或表达的命令 

// DUMP:6975
EN Integer...
ZH 整数... 

// DUMP:6976
EN Find integer number
ZH 查找整数编号 

// DUMP:6978
EN Floating-point number...
ZH 浮点数... 

// DUMP:6979
EN Find floating-point number
ZH 查找浮点数 

// DUMP:6981
EN Binary string...
ZH 二进制字符串... 

// DUMP:6982
EN Find binary data that matches specified pattern
ZH 查找与指定模式匹配的二进制数据 

// DUMP:6984
EN Modification
ZH 修改 

// DUMP:6985
EN Find modified data
ZH 找到修改的数据 

// DUMP:6987
EN Search again
ZH 再次搜索 

// DUMP:6988
EN Repeat search in the specified direction
ZH 在指定方向上重复搜索 

// DUMP:6990
EN Search reverse
ZH 搜索反向 

// DUMP:6991
EN Repeat search in the direction opposite to specified
ZH 在与指定的方向上重复搜索 

// DUMP:6993
EN All intermodular calls
ZH 所有载体调用 

// DUMP:6994
EN Find all calls to outside the module
ZH 查找到模块外部的所有调用 

// DUMP:6996
EN All commands...
ZH 所有命令... 

// DUMP:6997
EN Find all commands that match specified pattern
ZH 查找所有匹配指定模式的命令 

// DUMP:6999
EN All command sequences...
ZH 所有命令序列... 

// DUMP:7000
EN Find all sequences of commands that match specified pattern
ZH 查找与指定模式匹配的所有命令序列 

// DUMP:7002
EN All constants...
ZH 所有常数... 

// DUMP:7004
EN Find all commands that refer to the supplied constant or expression
ZH 查找所有命令,指的是提供的常数或表达式 

// DUMP:7006
EN All modifications
ZH 所有修改 

// DUMP:7007
EN Find all modifications within the code sections of current module
ZH 在当前模块的代码部分中找到所有修改 

// DUMP:7009
EN All referenced strings
ZH 所有引用的字符串 

// DUMP:7010
EN Find all referenced ASCII and UNICODE strings
ZH 查找所有引用的ASCII和Unicode字符串 

// DUMP:7012
EN All referenced GUIDs
ZH 所有引用指南 

// DUMP:7013
EN Find all referenced GUIDs
ZH 查找所有引用的指南 

// DUMP:7015
EN All user comments
ZH 所有用户注释 

// DUMP:7016
EN List all user-defined comments
ZH 列出所有用户定义的注释 

// DUMP:7018
EN All found procedures
ZH 所有找到程序 

// DUMP:7019
EN List call destinations found by Analyser
ZH 分析仪找到的列表调用目的地 

// DUMP:7021
EN All found switches
ZH 所有找到的开关 

// DUMP:7022
EN List all switches and cascaded ifs found by Analyser
ZH 列出分析仪找到的所有开关和级联IF 

// DUMP:7024
EN All floating constants
ZH 所有浮点数于常数 

// DUMP:7026
EN Find all referenced floating-point constants that reside directly in the code section
ZH 查找直接位于“代码”部分中的所有引用的浮点常数 

// DUMP:7028
EN Last record in run trace
ZH 运行跟踪中的最后记录 

// DUMP:7029
EN Find last record in the run trace for the selected command
ZH 在选定命令的运行跟踪中查找最后记录 

// DUMP:7032
EN Find last record in the run trace for the selected command range
ZH 在所选命令范围的运行跟踪中查找最后记录 

// DUMP:7038
EN Selected command
ZH 选定命令 

// DUMP:7039
EN Find all commands that refer to the selected command
ZH 查找参考选定命令的所有命令 

// DUMP:7041
EN Selected block
ZH 选定的块 

// DUMP:7042
EN Find all commands that refer to the selected range
ZH 查找参考选定范围的所有命令 

// DUMP:7044
EN Immediate constant
ZH 直接常数 

// DUMP:7045
EN Find all commands that refer to the same immediate constant
ZH 查找所有指代相同立即常数的命令 

// DUMP:7047
EN Jump destination
ZH 跳跃目的地 

// DUMP:7049
EN Find all commands that refer to the address of the jump destination
ZH 查找参考跳跃目的地地址的所有命令 

// DUMP:7051
EN Call destination
ZH 调用目的地 

// DUMP:7053
EN Find all commands that refer to the address of the call destination
ZH 查找参考调用目标地址的所有命令 

// DUMP:7055
EN Address constant
ZH 地址常数 

// DUMP:7056
EN Find all commands that refer to the constant part of address
ZH 查找所有参考地址常数部分的命令 

// DUMP:7062
EN Stop highlighting
ZH 停止突出显示 

// DUMP:7063
EN Stop register highlighting
ZH 停止寄存器突出显示 

// DUMP:7066
EN Highlight operands that use EAX, AX, AH or AL
ZH 突出显示使用EAX,AX,AH或AL的操作数 

// DUMP:7069
EN Highlight operands that use ECX, CX, CH or CL
ZH 突出显示使用ECX,CX,CH或CL的操作数 

// DUMP:7072
EN Highlight operands that use EDX, DX, DH or DL
ZH 突出显示使用EDX,DX,DH或DL的操作数 

// DUMP:7075
EN Highlight operands that use EBX, BX, BH or BL
ZH 突出显示使用EBX,BX,BH或BL的操作数 

// DUMP:7078
EN Highlight operands that use ESP (stack pointer)
ZH 突出显示使用ESP的操作数 (堆栈指针)  

// DUMP:7081
EN Highlight operands that use EBP (frame pointer)
ZH 突出显示使用EBP的操作数 (帧指针)  

// DUMP:7084
EN Highlight operands that use ESI or SI
ZH 突出显示使用ESI或SI的操作数 

// DUMP:7087
EN Highlight operands that use EDI or DI
ZH 突出显示使用EDI或DI的操作数 

// DUMP:7093
EN Absolute
ZH 绝对 

// DUMP:7094
EN Show absolute addresses
ZH 显示绝对地址 

// DUMP:7096
EN Relative to selection
ZH 相对于选择 

// DUMP:7097
EN Show offsets from current selection
ZH 显示当前选择的偏移 

// DUMP:7099
EN Relative to ESP
ZH 相对于ESP 

// DUMP:7100
EN Show offsets relative to current value of ESP
ZH 显示相对于ESP当前价值的偏移 

// DUMP:7102
EN Relative to EBP
ZH 相对于EBP 

// DUMP:7103
EN Show offsets relative to current value of EBP
ZH 显示相对于EBP当前价值的偏移 

// DUMP:7105
EN Relative to module base
ZH 相对于模块基础 

// DUMP:7106
EN Show offsets from the beginning of the module
ZH 从模块开头显示偏移 

// DUMP:7112
EN Show comments
ZH 显示注释 

// DUMP:7113
EN Show standard comments in the comments column
ZH 在注释列中显示标准注释 

// DUMP:7115
EN Show source
ZH 显示来源 

// DUMP:7116
EN Show source code (if available) in the comments column
ZH 在注释列中显示源代码 (如果有)  

// DUMP:7118
EN Hide profile
ZH 隐藏配置文件 

// DUMP:7119
EN Hide run trace profile counts in the comments column
ZH 在注释列中隐藏运行跟踪配置文件计数 

// DUMP:7121
EN Show profile
ZH 显示个人资料 

// DUMP:7122
EN Show run trace profile counts in the comments column
ZH 在注释列中显示运行跟踪配置文件计数 

// DUMP:7128
EN Analyse code
ZH 分析代码 

// DUMP:7129
EN Analyse executable code and SFX in the current module
ZH 分析当前模块中的可执行代码和SFX 

// DUMP:7131
EN Analyse PE header
ZH 分析PE标头 

// DUMP:7134
EN Analyse TIB
ZH 分析TIB 

// DUMP:7135
EN Analyse Thread Information Block
ZH 分析线程信息块 

// DUMP:7137
EN Analyse Process Parameters Block
ZH 分析进程参数块 

// DUMP:7140
EN Analyse PEB
ZH 分析我们 

// DUMP:7141
EN Analyse Process Environment Block
ZH 分析进程环境块 

// DUMP:7143
EN Analyse User Shared Data
ZH 分析用户共享数据 

// DUMP:7144
EN Analyse User Shared Data structure
ZH 分析用户共享数据结构 

// DUMP:7146
EN Analyse GDI Handle Table
ZH 分析GDI手柄表 

// DUMP:7147
EN Analyse shared table of GDI handles
ZH 分析GDI手柄的共享表 

// DUMP:7149
EN Remove analysis from selection
ZH 从选择中删除分析 

// DUMP:7150
EN Remove analysis data from the selection
ZH 从选择中删除分析数据 

// DUMP:7152
EN Remove analysis from module
ZH 从模块中删除分析 

// DUMP:7153
EN Remove analysis from the currently selected module
ZH 从当前选择的模块中删除分析 

// DUMP:7159
EN Hex/ASCII (16 bytes)
ZH 十六进制/ASCII (16个字节)  

// DUMP:7160
EN Hex bytes (16 per line) and ASCII characters
ZH 十六进制字节 (每行16个) 和ASCII字符 

// DUMP:7162
EN Hex/ASCII (8 bytes)
ZH 十六进制/ascii (8个字节)  

// DUMP:7163
EN Hex bytes (8 per line) and ASCII characters
ZH 十六进制字节 (每行8个) 和ASCII字符 

// DUMP:7165
EN Hex/UNICODE (16 bytes)
ZH 十六进制/unicode (16个字节)  

// DUMP:7166
EN Hex bytes (16 per line) and UNICODE characters
ZH 十六进制字节 (每行16个) 和Unicode字符 

// DUMP:7168
EN Hex/UNICODE (8 bytes)
ZH 十六进制/unicode (8个字节)  

// DUMP:7169
EN Hex bytes (8 per line) and UNICODE characters
ZH 十六进制字节 (每行8个) 和Unicode字符 

// DUMP:7171
EN Hex/multibyte (16 bytes)
ZH 十六进制/多键 (16个字节)  

// DUMP:7172
EN Hex bytes (at most 16 per line) and multibyte characters
ZH 十六进制字节 (每行最多16个) 和多键字符 

// DUMP:7174
EN Hex/multibyte (8 bytes)
ZH 十六进制/多键 (8个字节)  

// DUMP:7175
EN Hex bytes (at most 8 per line) and multibyte characters
ZH 十六进制字节 (每行最多8个) 和多键字符 

// DUMP:7181
EN ASCII (64 chars)
ZH ASCII (64个字符)  

// DUMP:7182
EN ASCII characters (64 per line)
ZH ASCII字符 (每行64个)  

// DUMP:7184
EN ASCII (32 chars)
ZH ASCII (32个字符)  

// DUMP:7185
EN ASCII characters (32 per line)
ZH ASCII字符 (每行32)  

// DUMP:7187
EN UNICODE (64 chars)
ZH Unicode (64个字符)  

// DUMP:7188
EN UNICODE characters (64 per line)
ZH Unicode字符 (每行64个)  

// DUMP:7190
EN UNICODE (32 chars)
ZH Unicode (32个字符)  

// DUMP:7191
EN UNICODE characters (32 per line)
ZH Unicode字符 (每行32个)  

// DUMP:7193
EN UNICODE (16 chars)
ZH Unicode (16个字符)  

// DUMP:7194
EN UNICODE characters (16 per line)
ZH Unicode字符 (每行16个)  

// DUMP:7200
EN Short signed
ZH 简短签名 

// DUMP:7201
EN 16-bit signed decimal numbers
ZH 16位签名的十进制数字 

// DUMP:7206
EN Short unsigned
ZH 简短的未签名 

// DUMP:7207
EN 16-bit unsigned decimal numbers
ZH 16位未签名的小数 

// DUMP:7212
EN Short hex
ZH 短十六进制 

// DUMP:7213
EN 16-bit hexadecimal numbers
ZH 16位十六进制数 

// DUMP:7218
EN Long signed
ZH 长期签名 

// DUMP:7219
EN 32-bit signed decimal numbers
ZH 32位签名的十进制数字 

// DUMP:7224
EN Long unsigned
ZH 长期未签名 

// DUMP:7225
EN 32-bit unsigned decimal numbers
ZH 32位未签名的十进制数字 

// DUMP:7230
EN Long hex
ZH 长六角 

// DUMP:7231
EN 32-bit hexadecimal numbers
ZH 32位十六进制数 

// DUMP:7237
EN 32-bit hexadecimal address with comments
ZH 32位十六进制地址和注释 

// DUMP:7239
EN Address with ASCII dump
ZH 用ASCII转储地址 

// DUMP:7240
EN Address with ASCII dump and comments
ZH 用ASCII转储和注释地址 

// DUMP:7242
EN Address with UNICODE dump
ZH 用Unicode转储地址 

// DUMP:7243
EN Address with UNICODE dump and comments
ZH 用Unicode转储和注释地址 

// DUMP:7250
EN 32-bit floating-point numbers (float)
ZH 32位浮点数 (浮点)  

// DUMP:7256
EN 64-bit floating-point numbers (double)
ZH 64位浮点数 (双)  

// DUMP:7262
EN 80-bit floating-point numbers (long double)
ZH 80位浮点数 (长双重)  

// DUMP:7285
EN Lock address
ZH 锁定地址 

// DUMP:7286
EN Stop scrolling stack as ESP changes
ZH 随着ESP的变化,停止滚动堆栈 

// DUMP:7288
EN Unlock address
ZH 解锁地址 

// DUMP:7289
EN Allow automatic stack scrolling according to ESP
ZH 根据ESP允许自动堆栈滚动 

// DUMP:7293
EN Backup functions
ZH 备份函数 

// DUMP:7296
EN &Edit
ZH &编辑 

// DUMP:7297
EN Select, copy and edit functions
ZH 选择,复制和编辑函数 

// DUMP:7299
EN Zero whole dump
ZH 零整个转储 

// DUMP:7300
EN Fill whole dump with zeros and update backup
ZH 用零填充整个转储并更新备份 

// DUMP:7302
EN Push DWORD...
ZH 推dword ... 

// DUMP:7303
EN Push doubleword into the stack
ZH 将双字推入堆栈 

// DUMP:7305
EN Pop DWORD
ZH 流行dword 

// DUMP:7306
EN Pop doubleword from the stack (increments ESP by 4)
ZH 堆栈中的流行双字 (ESP增量为4)  

// DUMP:7308
EN Add &label...
ZH 添加和标签... 

// DUMP:7309
EN Add custom label at the start of selection
ZH 在选择开始时添加自定义标签 

// DUMP:7311
EN Edit &label...
ZH 编辑和标签... 

// DUMP:7312
EN Edit custom label at the start of selection
ZH 在选择开头编辑自定义标签 

// DUMP:7314
EN &Assemble...
ZH &集合... 

// DUMP:7315
EN Insert one or more Assembler commands
ZH 插入一个或多个汇编器命令 

// DUMP:7317
EN Add &comment...
ZH 添加注释... 

// DUMP:7318
EN Add custom comment at the start of selection
ZH 在选择开始时添加自定义注释 

// DUMP:7320
EN Edit &comment...
ZH 编辑和注释... 

// DUMP:7321
EN Edit custom comment at the start of selection
ZH 在选择开始时编辑自定义注释 

// DUMP:7324
EN Save file...
ZH 保存存档... 

// DUMP:7325
EN Save file to the disk
ZH 将文件保存到磁盘 

// DUMP:7328
EN &Breakpoint
ZH &断点 

// DUMP:7329
EN Set, reset or edit all kinds of breakpoints
ZH 设置,重置或编辑各种断点 

// DUMP:7332
EN New origin here
ZH 这里的新来源 

// DUMP:7333
EN Set EIP of current thread to selected command
ZH 将当前线程的EIP设置为选定命令 

// DUMP:7336
EN Set EIP of current thread to selected memory address
ZH 将当前线程的EIP设置为选定的内存地址 

// DUMP:7339
EN Follow destination in CPU Disassembler
ZH 在CPU反汇编器中关注目的地

// DUMP:7345
EN Follow in CPU Dump pane
ZH 跟随CPU垃圾窗格 

// DUMP:7347
EN Follow DWORD in Disassembler
ZH 遵循反汇编器中的dword

// DUMP:7348
EN Follow doubleword in CPU Disassembler
ZH 在CPU反汇编器中关注双字

// DUMP:7350
EN Follow DWORD in Dump
ZH 在转储中关注DWORD 

// DUMP:7351
EN Follow doubleword in CPU Dump
ZH 在CPU转储中关注双字 

// DUMP:7353
EN Follow DWORD in Stack
ZH 在堆栈中关注DWORD 

// DUMP:7354
EN Follow doubleword in CPU Stack
ZH 在CPU堆栈中关注双字 

// DUMP:7357
EN Follow address in CPU Disassembler
ZH 关注CPU反汇编器中的地址

// DUMP:7366
EN Go to different point
ZH 转到不同的点 

// DUMP:7368
EN Select module
ZH 选择模块 

// DUMP:7369
EN Select module to display
ZH 选择要显示的模块 

// DUMP:7371
EN Select thread
ZH 选择线程 

// DUMP:7372
EN Select thread to display
ZH 选择要显示的线程 

// DUMP:7375
EN Decode as structure...
ZH 解码为结构... 

// DUMP:7376
EN Decode selection as a known structure in a separate window
ZH 在单独的窗口中解码选择为已知结构 

// DUMP:7378
EN Decode as pointer to structure...
ZH 将作为结构的指针解码... 

// DUMP:7380
EN Decode selection as a pointer to known structure in a separate window
ZH 解码选择作为在单独窗口中的已知结构指针 

// DUMP:7382
EN Open in a separate dump window
ZH 在单独的转储窗口中打开 

// DUMP:7383
EN Open selected piece in a standalone dump window
ZH 在独立的垃圾场窗口中打开选定的作品 

// DUMP:7386
EN Search for
ZH 搜索 

// DUMP:7387
EN Search for objects that match search pattern
ZH 搜索匹配搜索模式的对象 

// DUMP:7389
EN Find references to
ZH 查找参考 

// DUMP:7390
EN Search for commands referring to range or constant
ZH 搜索涉及范围或常数的命令 

// DUMP:7392
EN Highlight register
ZH 突出显示寄存器 

// DUMP:7393
EN Highlight operands containing specified register
ZH 突出显示包含指定寄存器的操作数 

// DUMP:7395
EN Addressing
ZH 寻址 

// DUMP:7396
EN Set absolute or relative addressing
ZH 设置绝对或相对地址 

// DUMP:7399
EN Set contents of the comments column
ZH 设置注释列的内容 

// DUMP:7402
EN Analysis
ZH 分析 

// DUMP:7403
EN Code analysis
ZH 代码分析 

// DUMP:7406
EN Help on command
ZH 帮助命令 

// DUMP:7407
EN Get explanation on the first selected command
ZH 在第一个选定命令上获取说明 

// DUMP:7409
EN Help on API function
ZH 帮助API函数 

// DUMP:7410
EN Search for symbolic name in API Help file
ZH 在API帮助文件中搜索符号名称 

// DUMP:7414
EN Display data as a sequence of hexadecimal bytes
ZH 显示数据作为十六进制字节的顺序 

// DUMP:7416
EN Text
ZH 文本 

// DUMP:7417
EN Display data as a text
ZH 将数据显示为文本 

// DUMP:7419
EN Integer
ZH 整数 

// DUMP:7420
EN Display data as integers
ZH 显示数据作为整数 

// DUMP:7423
EN Display data as floating-point numbers
ZH 将数据显示为浮点数 

// DUMP:7425
EN Disassemble
ZH 反汇编 

// DUMP:7426
EN Decode data as 80x86 commands
ZH 将数据解码为80x86命令 

// DUMP:7428
EN Structure...
ZH 结构... 

// DUMP:7429
EN Decode data as known structure
ZH 将数据解码为已知结构 

// DUMP:7432
EN Columns
ZH 列 

// DUMP:7433
EN Select columns to display
ZH 选择要显示的列 

// DUMP:7435
EN Select ASCII code page
ZH 选择ASCII代码页 

// DUMP:7436
EN Select code page used to display ASCII character dumps
ZH 选择代码页用于显示ASCII字符转储 

// DUMP:7439
EN Select code page used to display multibyte character dumps
ZH 选择代码页用于显示多键字符转储 

// DUMP:8109
EN Unable to open file '%s' for dump
ZH 无法打开文件的文件“%s” 

// DUMP:8115
EN Unable to dump file '%s'. It has zero length.
ZH 无法转让文件“%s”. 它的长度为零. 

// DUMP:8122
EN Unable to read file '%s'
ZH 无法读取文件“%s” 

// DUMP:8208
EN Data dump
ZH 数据转储 

// EXPRESS:188
EN Expression is too complex
ZH 表达太复杂了 

// EXPRESS:255
EN Closing parenthesis expected
ZH 关闭括号期望 

// EXPRESS:267
EN Unary plus is not defined for strings
ZH Unary Plus并未定义为字符串 

// EXPRESS:283
EN Negation is not defined for strings
ZH 符号未定义为字符串 

// EXPRESS:299
EN Logical negation is not defined for strings
ZH 并未为字符串定义逻辑否定 

// EXPRESS:313
EN Bitwise inversion is not defined for floats
ZH 浮点数未定义位倒置 

// EXPRESS:317
EN Bitwise inversion is not defined for strings
ZH 沿字符串未定义的位倒置 

// EXPRESS:504
EN Unexpected end of line
ZH 意外的线 

// EXPRESS:548
EN Repeat count is not allowed here
ZH 在这里不允许重复计数 

// EXPRESS:551
EN Constant repeat count expected
ZH 恒定重复计数预期 

// EXPRESS:554
EN Duplicated repeat count
ZH 重复的重复计数 

// EXPRESS:557
EN Repeat count outside of range 1..%i
ZH 重复计数范围1 .. %i 

// EXPRESS:619
EN Duplicated selector
ZH 重复的选择器 

// EXPRESS:622
EN Invalid type of selector
ZH 无效的选择器类型 

// EXPRESS:683
EN Invalid type of memory address
ZH 无效的内存地址类型 

// EXPRESS:687
EN Closing bracket expected
ZH 预期关闭括号 

// EXPRESS:759
EN Repeat count is allowed only in pure memory references
ZH 仅在纯记忆参考中允许重复计数 

// EXPRESS:907
EN Invalid operation
ZH 无效的操作 

// EXPRESS:986
EN No expression
ZH 没有表达 

// EXPRESS:1091
EN Too many expressions
ZH 表达太多 

// EXPRESS:1212
EN Unable to get thread ordinal
ZH 无法获得线程序列 

// EXPRESS:1220
EN Registers are not accessible
ZH 寄存器无法访问 

// EXPRESS:1306
EN SSE registers are not accessible
ZH SSE寄存器无法访问 

// EXPRESS:1336
EN Expression index out of limits
ZH 表达式索引超出限制 

// EXPRESS:1412
EN Unable to get contents of memory
ZH 无法获得内存的内容 

// EXPRESS:1443
EN Unable to get base of selector
ZH 无法获得选择器的基础 

// EXPRESS:1567
EN Division by 0.0
ZH 除以0.0 

// EXPRESS:1610
EN Division by 0
ZH 分别为0 

// EXPRESS:1725
EN Error in precompiled expression
ZH 预编译表达式错误 

// EXPRESS:1751
EN Invalid expression
ZH 无效的表达 

// EXPRESS:1872
EN Multiple expressions are not allowed
ZH 不允许多种表达 

// FNDATA:522
EN Saving known data to file
ZH 将已知数据保存到文件 

// FNDATA:566
EN Error saving data to file '%s'
ZH 将数据保存到文件“%s” 

// FNDATA:568
EN File '%s' created successfully
ZH 文件“%s”成功创建了 

// FNDATA:641
EN Decoding of known functions is not possible due to lack of memory
ZH 由于缺乏记忆,无法解码已知函数 

// FNDATA:787
EN Corrupt API data, known functions and constants are unavailable
ZH 损坏的API数据,已知函数和常数不可用 

// FNDATA:908
EN Integer constant expected
ZH 整数常数 

// FNDATA:912
EN Bad constant name
ZH 不良的常数名称 

// FNDATA:914
EN Constant ends with vertical line
ZH 持续的垂直线结束 

// FNDATA:919
EN Low memory, processing interrupted
ZH 记忆力低,处理中断 

// FNDATA:938
EN Bad group name
ZH 坏组名称 

// FNDATA:940
EN Length of group name is limited to 31 character
ZH 小组名称的长度限制为31个字符 

// FNDATA:946
EN Too many groups
ZH 小组太多 

// FNDATA:948
EN Redefined group '%s'
ZH 重新定义组“%s” 

// FNDATA:964
EN Expecting CONST or END
ZH 期望const或结束 

// FNDATA:1024
EN Bad name of translator
ZH 翻译的坏名字 

// FNDATA:1026
EN Length of translator name is limited to 30 characters
ZH 翻译名称的长度限制为30个字符 

// FNDATA:1033
EN Too many translators
ZH 翻译人员太多 

// FNDATA:1035
EN Redefined translator '%s'
ZH 重新定义翻译器'%s' 

// FNDATA:1053
EN Expecting translation record or END
ZH 期望翻译记录或结束 

// FNDATA:1057
EN Too many translation records
ZH 翻译记录太多 

// FNDATA:1062
EN Missing equal sign between names
ZH 名称之间缺少相等的符号 

// FNDATA:1065
EN Expecting output name
ZH 期望输出名称 

// FNDATA:1073
EN Empty translator
ZH 空翻译器 

// FNDATA:1081
EN Repeating input name '%s'
ZH 重复输入名称“%s” 

// FNDATA:1109
EN Bad type name
ZH 不好的类型名称 

// FNDATA:1111
EN Length of type name is limited to 30 characters
ZH 类型名称的长度限制为30个字符 

// FNDATA:1125
EN Type description is too long
ZH 类型说明太长了 

// FNDATA:1131
EN Keyword expected
ZH 预期的关键字 

// FNDATA:1136
EN ENDSEL expected
ZH Endsel期望 

// FNDATA:1138
EN ENDIF expected
ZH Endif期望 

// FNDATA:1148
EN Nesting of SELECT blocks is not allowed
ZH 不允许嵌套选择块 

// FNDATA:1150
EN Too deep block nesting
ZH 嵌套太深 

// FNDATA:1161
EN Expecting MASK, FIELD or SIGFIELD
ZH 期待面具,田野或西格菲尔德 

// FNDATA:1164
EN Constant expected
ZH 恒定的预期 

// FNDATA:1172
EN ENDSEL without corresponding SELECT
ZH endsel而不相应的选择 

// FNDATA:1175
EN ENDSEL where ENDIF is expected
ZH ENDSEL预期的endif 

// FNDATA:1184
EN Too deep nesting
ZH 太深的筑巢 

// FNDATA:1190
EN ELSEIF without corresponding IF
ZH 没有对应的elseif 

// FNDATA:1192
EN ELSEIF where ENDSEL is expected
ZH Elseif期望在哪里结束 

// FNDATA:1194
EN ELSEIF after ELSE
ZH Elseif之后 

// FNDATA:1199
EN Too many ELSEIF statements
ZH 太多的语句 

// FNDATA:1248
EN 'EQ' or 'NE' expected
ZH 'eq'或'ne'期望 

// FNDATA:1274
EN Operation or constant expected
ZH 操作或预期的恒定 

// FNDATA:1282
EN ELSE without corresponding IF
ZH 否则没有对应 

// FNDATA:1284
EN ELSE where ENDSEL is expected
ZH 否则预期的是 

// FNDATA:1286
EN ELSE after ELSE
ZH 其他之后 

// FNDATA:1300
EN ENDIF without corresponding IF
ZH endif没有对应的 

// FNDATA:1303
EN ENDIF where ENDSEL is expected
ZH Endif期望Endsel 

// FNDATA:1320
EN Text expected
ZH 预期的文字 

// FNDATA:1353
EN Name expected
ZH 预期的名称 

// FNDATA:1381
EN OUT applies only to pointers
ZH 外出仅适用于指针 

// FNDATA:1577
EN Invalid or unexpected keyword
ZH 无效或意外关键字 

// FNDATA:1598
EN Redefined type '%s'
ZH 重新定义类型的“%s” 

// FNDATA:1627
EN Bad structure name
ZH 不良结构名称 

// FNDATA:1629
EN Length of structure name is limited to 30 characters
ZH 结构名称的长度限制为30个字符 

// FNDATA:1640
EN Expecting field size or END
ZH 期望场大小或结束 

// FNDATA:1643
EN Empty structures are not allowed
ZH 不允许空的结构 

// FNDATA:1663
EN Redefined structure '%s'
ZH 重新定义结构“%s” 

// FNDATA:1685
EN Too many items
ZH 过多的物品 

// FNDATA:1699
EN Field size expected
ZH 预期的场尺寸 

// FNDATA:1703
EN Invalid repeat count
ZH 无效的重复计数 

// FNDATA:1705
EN Repeat count outside of allowed limits
ZH 在允许限制之外重复计数 

// FNDATA:1710
EN Type name expected
ZH 类型名称预期 

// FNDATA:1723
EN Invalid size of FLOAT
ZH 浮标的无效尺寸 

// FNDATA:1726
EN Invalid size of DOUBLE
ZH 双重大小无效 

// FNDATA:1729
EN Invalid size of LDOUBLE
ZH ldouble的尺寸无效 

// FNDATA:1742
EN Invalid pointer size
ZH 无效的指针尺寸 

// FNDATA:1759
EN Pointer to undefined type or structure
ZH 指向未定义类型或结构的指针 

// FNDATA:1769
EN Bad item name
ZH 坏项目名称 

// FNDATA:1776
EN Undefined type
ZH 未定义的类型 

// FNDATA:1793
EN Child structure is too comlex
ZH 儿童结构太复杂了 

// FNDATA:1795
EN Size of field is not multiple of child structure
ZH 场的大小不是儿童结构的倍数 

// FNDATA:1797
EN Unable to get description of child structure
ZH 无法获取儿童结构的描述 

// FNDATA:1805
EN Resulting name of child structure member is too long
ZH 产生的儿童结构成员的名称太长 

// FNDATA:1823
EN Undefined child member type
ZH 未定义的儿童会员类型 

// FNDATA:1849
EN Bad module name
ZH 不良模块名称 

// FNDATA:1851
EN Length of module name is limited to 31 character
ZH 模块名称的长度限制为31个字符 

// FNDATA:1858
EN Point after module name expected
ZH 模块名称之后的点预期 

// FNDATA:1864
EN Bad function name
ZH 不良函数名称 

// FNDATA:1866
EN Too long function name
ZH 函数太长名称 

// FNDATA:1877
EN Variable number of arguments is not allowed for PASCAL or STDFUNC
ZH 对于Pascal或STDFUNC,不允许使用可变的参数 

// FNDATA:1879
EN Ellipsis (...) as first and only argument is not allowed
ZH 省略号 (...) 作为第一个和唯一的论点是不允许的 

// FNDATA:1881
EN Duplicated ellipsis
ZH 重复的省略号 

// FNDATA:1884
EN Keyword or name of type expected
ZH 关键字或预期类型的名称 

// FNDATA:1888
EN Function contains too many formats
ZH 函数包含太多格式 

// FNDATA:1925
EN Redefined procedure '%s'
ZH 重新定义程序'%s' 

// FNDATA:1938
EN Duplicated RETURNS
ZH 重复的回报 

// FNDATA:1946
EN Return type expected
ZH 返回类型预期 

// FNDATA:1951
EN Undefined return type or structure
ZH 未定义的返回类型或结构 

// FNDATA:1953
EN Can't return structure, only pointer to structure
ZH 无法返回结构,只有指向结构的指针 

// FNDATA:1962
EN Duplicated PRESERVES
ZH 重复的蜜饯 

// FNDATA:1966
EN Register name expected
ZH 寄存器名称预期 

// FNDATA:1976
EN Comma between register names expected
ZH 预期寄存器名称之间的逗号 

// FNDATA:1982
EN Ellipsis (...) must be last in the list of arguments
ZH 省略号 (...) 必须是参数列表中的最后 

// FNDATA:1984
EN Too many arguments
ZH 争论太多 

// FNDATA:2020
EN Structure is not allowed, only pointer to structure
ZH 不允许结构,只有指向结构的指针 

// FNDATA:2030
EN Bad parameter name
ZH 不良参数名称 

// FNDATA:2170
EN Bad name of data block
ZH 数据块的坏名称 

// FNDATA:2172
EN Length of data name is limited to 30 characters
ZH 数据名称的长度限制为30个字符 

// FNDATA:2194
EN Data expected
ZH 预期的数据 

// FNDATA:2197
EN Size of raw data exceeds allowed limit
ZH 原始数据的大小超过允许的限制 

// FNDATA:2214
EN Empty raw data block
ZH 空的原始数据块 

// FNDATA:2234
EN Redefined data block '%s'
ZH 重新定义数据块'%s' 

// FNDATA:2256
EN Duplicated FEATURES
ZH 重复的函数 

// FNDATA:2277
EN Unrecognized constant or keyword
ZH 未识别的常数或关键字 

// FNDATA:2284
EN Byte data expected
ZH 字节数据预期 

// FNDATA:2307
EN Syntax error in raw data description
ZH 原始数据描述中的语法错误 

// FNDATA:2335
EN Out of memory - unable to process descriptions in '%s.arg'
ZH 不记忆 - 无法处理“ %s.arg”中的描述 

// FNDATA:2342
EN File '%s.arg' has unsupported UNICODE big endian format
ZH 文件“ %s.arg”已不支持Unicode Big Endian格式 

// FNDATA:2368
EN Loading function descriptions from '%s.arg'
ZH 加载函数描述来自“ %s.arg” 

// FNDATA:2388
EN Invalid type modifier(s)
ZH 无效类型修饰符 

// FNDATA:2437
EN Unexpected keyword
ZH 意外的关键字 

// FNDATA:2459
EN Line %i. %s (%s)
ZH 线 %i.  %s ( %s)  

// FNDATA:2461
EN Line %i. %s
ZH 线 %i.  %s 

// FNDATA:2471
EN Redefined constant '%s'
ZH 重新定义常数'%s' 

// FNDATA:2478
EN 1 constant
ZH 1常数 

// FNDATA:2479
EN %i constants
ZH  %i常数 

// FNDATA:2482
EN 1 group
ZH 1组 

// FNDATA:2483
EN %i groups
ZH  %i组 

// FNDATA:2486
EN 1 translator
ZH 1个翻译器 

// FNDATA:2487
EN %i translators
ZH  %i翻译人员 

// FNDATA:2490
EN 1 structure
ZH 1结构 

// FNDATA:2491
EN %i structures
ZH  %i结构 

// FNDATA:2494
EN 1 type
ZH 1类型 

// FNDATA:2495
EN %i types
ZH  %i类型 

// FNDATA:2498
EN 1 function
ZH 1函数 

// FNDATA:2499
EN %i functions
ZH  %i函数 

// FNDATA:2502
EN 1 data block
ZH 1个数据块 

// FNDATA:2503
EN %i data blocks
ZH  %i数据块 

// FNDATA:2511
EN Total size of known data is %i bytes
ZH 已知数据的总大小为 %i字节 

// FNDATA:3442
EN Low: %08X
ZH 低： %08X

// FNDATA:3450
EN High: %08X
ZH 高： %08X

// FNDATA:3636
EN Middle: %08X
ZH 中间： %08X

// FNDATA:3716
EN , class =
ZH ,class = 

// FNDATA:3720
EN , text =
ZH ,文字= 

// FNDATA:3781
EN (DC or Memory DC)
ZH  (DC或内存DC)  

// FNDATA:3783
EN (Metafile)
ZH  (metafile)  

// FNDATA:3785
EN (Memory DC)
ZH  (内存DC)  

// FNDATA:3789
EN (DC of window %08X
ZH  (窗口DC %08X

// FNDATA:3851
EN (DC)
ZH (CH)

// FNDATA:3853
EN (Region
ZH  (地区 

// FNDATA:3869
EN (Bitmap)
ZH  (位图)  

// FNDATA:3871
EN (Path)
ZH  (小路)  

// FNDATA:3873
EN (Palette)
ZH  (调色板)  

// FNDATA:3875
EN (Color space)
ZH  (色彩空间)  

// FNDATA:3877
EN (Font)
ZH  (字体)  

// FNDATA:3879
EN (Brush
ZH  (刷子 

// FNDATA:3897
EN (Pen)
ZH  (笔)  

// FNDATA:3975
EN , Debuggee
ZH ,Debuggee 

// GUIDS:248
EN Out of memory - unable to process GUIDs in '%s.arg'
ZH 不记忆 - 无法在“ %s.arg”中处理GUIDS 

// GUIDS:283
EN Loading GUIDs from '%s.arg'
ZH 从“ %s.arg”加载指南 

// GUIDS:296
EN GUID expected
ZH GUID期望 

// GUIDS:299
EN Invalid GUID
ZH 无效的GUID 

// GUIDS:303
EN GUID name expected
ZH GUID名称预期 

// GUIDS:379
EN Total number of GUIDs is %i
ZH GUID的总数为 %i 

// HANDLES:165
EN File (pipe)
ZH 文件 (管道)  

// HANDLES:168
EN File (char)
ZH 文件 (char)  

// HANDLES:184
EN File (dev)
ZH 文件 (开发人员)  

// HANDLES:208
EN File (dir)
ZH 文件 (dir)  

// HANDLES:211
EN File (sys)
ZH 文件 (系统)  

// HANDLES:214
EN File (temp)
ZH 文件 (临时)  

// HANDLES:324
EN Original name
ZH 原始名称 

// HANDLES:325
EN Original name associated with the handle
ZH 与手柄关联的原始名称 

// HANDLES:327
EN Translated name
ZH 翻译名称 

// HANDLES:328
EN Handle Name converted to user-friendly form
ZH 处理名称转换为用户友好的表单 

// HANDLES:399
EN &Update
ZH &更新 

// HANDLES:400
EN Update contents of Handles window
ZH 更新手柄窗口的内容 

// HANDLES:402
EN Tag all handles
ZH 标记所有手柄 

// HANDLES:403
EN User-defined tag allows to distinguish new handles from old
ZH 用户定义的标签允许区分新手柄和旧手柄 

// HANDLES:405
EN Untag all handles
ZH 解开所有操作 

// HANDLES:408
EN Show original names
ZH 显示原始名称 

// HANDLES:409
EN Show handle names as reported by Windows
ZH 显示Windows报告的句柄名称 

// HANDLES:411
EN Show translated names
ZH 显示翻译的名称 

// HANDLES:412
EN Show handle names converted to user-friendlier form
ZH 显示句柄名称转换为用户友好的表单 

// HANDLES:414
EN Dump file
ZH 转储文件 

// HANDLES:415
EN Open file associated with the handle in a separate Dump window
ZH 在单独的转储窗口中与句柄关联的打开文件 

// HANDLES:536
EN Size %i., pointer %i.
ZH 尺寸 %i.,指针 %i. 

// HANDLES:538
EN Count %i. of %i.
ZH 计数 %i.  %i. 

// HANDLES:577
EN Handle
ZH 处理 

// HANDLES:578
EN Handle in the context of debugged application
ZH 在调试应用程序的背景下处理 

// HANDLES:582
EN Type of the handle
ZH 手柄类型 

// HANDLES:585
EN Refs
ZH 裁判 

// HANDLES:586
EN Reference count
ZH 参考计数 

// HANDLES:589
EN Access
ZH 使用权 

// HANDLES:590
EN Access rights
ZH 访问权限 

// HANDLES:593
EN Tag
ZH 标签 

// HANDLES:594
EN Allows to distinguish new handles from old
ZH 允许将新手柄与旧手柄区分开 

// HANDLES:598
EN Handle-related information
ZH 处理与之相关的信息 

// HANDLES:621
EN Handles
ZH 句柄

// HELP:966
EN Command help
ZH 命令帮助 

// HELP:970
EN Help
ZH 帮助 

// HELP:1110
EN Help on item
ZH 帮助项目 

// INSPECT:33
EN Structure %s at
ZH 结构 %s 

// JUMPDATA:183
EN Low memory!
ZH 记忆不足！ 

// JUMPDATA:185
EN Out of memory in jump table. Some calls and jumps will be missed in Jump path and Call tree.
ZH 在跳台上的记忆中. 在跳跃路径和调用树中将错过一些调用和跳跃. 

// LIBSCAN:86
EN Not a standard function library
ZH 不是标准函数库 

// LIBSCAN:203
EN Unreadable or corrupted library
ZH 不可读或损坏的库 

// LIBSCAN:207
EN Unable to read library
ZH 无法阅读库 

// LIBSCAN:900
EN Unknown record type 0x%02X
ZH 未知记录类型0x %02X 

// LIBSCAN:912
EN Invalid OMF page size
ZH 无效关注页面大小 

// LIBSCAN:913
EN Invalid OMF dictionary size
ZH 无效的记忆尺寸 

// LIBSCAN:914
EN Unexpected end of OMF file
ZH OMF文件的意外结束 

// LIBSCAN:915
EN OMF syntax error
ZH 遵循语法错误 

// LIBSCAN:916
EN 16-bit OMF file
ZH 16位空的文件 

// LIBSCAN:917
EN Import library
ZH 导入库 

// LIBSCAN:918
EN Contains absolute segments
ZH 包含绝对段 

// LIBSCAN:919
EN Contains unsupported fixups
ZH 包含不受支持的修复程序 

// LIBSCAN:1151
EN File is not for 80x86 CPU
ZH 文件不适合80x86 CPU 

// LIBSCAN:1152
EN COFF section is too big
ZH 科夫部分太大了 

// LIBSCAN:1153
EN COFF syntax error
ZH COFF语法错误 

// LIBSCAN:1236
EN Unable to read object file
ZH 无法读取对象文件 

// LIBSCAN:1247
EN Unrecognized object file format
ZH 无法识别的对象文件格式 

// LIBSCAN:1250
EN 1 image
ZH 1图像 

// LIBSCAN:1252
EN %i images
ZH  %i图像 

// LIBSCAN:1342
EN Object and library files:
ZH 对象和库文件： 

// LIBSCAN:1349
EN Information or error message
ZH 信息或错误消息 

// LIBSCAN:1351
EN Load list
ZH 负载列表 

// LIBSCAN:1352
EN Load file list from existing library
ZH 从现有库中加载文件列表 

// LIBSCAN:1354
EN Add files
ZH 添加文件 

// LIBSCAN:1355
EN Add object files or libraries to the list
ZH 将对象文件或库添加到列表 

// LIBSCAN:1357
EN Delete file
ZH 删除文件 

// LIBSCAN:1358
EN Remove selected file from the list
ZH 从列表中删除选定的文件 

// LIBSCAN:1363
EN Test
ZH 测试 

// LIBSCAN:1364
EN Scan object files
ZH 扫描对象文件 

// LIBSCAN:1366
EN Signature
ZH 签名 

// LIBSCAN:1368
EN If signature is set, it must appear in the code, or function library will be ignored
ZH 如果设置了签名,则必须出现在代码中,或者函数库将被忽略 

// LIBSCAN:1370
EN Save
ZH 节省 

// LIBSCAN:1371
EN Scan files and save library to disc
ZH 扫描文件并将库保存到光盘 

// LIBSCAN:1376
EN Create standard function library
ZH 创建标准函数库 

// LIBSCAN:1404
EN Unable to create '
ZH 无法创建' 

// LIBSCAN:1507
EN Library contains %i functions
ZH 库包含 %i函数 

// LIBSCAN:1509
EN Unable to save object library
ZH 无法保存对象库 

// LIBSCAN:1513
EN Error when creating object library
ZH 创建对象库时错误 

// LIBSCAN:1585
EN Select name of image library file
ZH 选择图像库文件的名称 

// LIBSCAN:1592
EN Library loaded
ZH 库加载 

// LIBSCAN:1603
EN Select object files and libraries
ZH 选择对象文件和库 

// LIBSCAN:1704
EN Enter library signature
ZH 输入库签名 

// LIBSCAN:1794
EN Object and library files
ZH 对象和库文件 

// LIBSCAN:1795
EN List of object and library files
ZH 对象和库文件列表 

// LIBSCAN:1798
EN Message
ZH 信息 

// LIBSCAN:1799
EN Result of scanning
ZH 扫描结果 

// LIST:310
EN Select log file
ZH 选择日志文件 

// LIST:314
EN Unable to open log file '%s'
ZH 无法打开日志文件'%s' 

// LIST:337
EN Show address in CPU Disassembler pane
ZH CPU反汇编器窗格中的显示地址

// LIST:339
EN Follow in CPU Dump
ZH 跟随CPU转储 

// LIST:339
EN Show address in CPU Dump pane
ZH CPU垃圾窗格中的显示地址 

// LIST:341
EN Follow in CPU Stack
ZH 跟随CPU堆栈 

// LIST:341
EN Show address in CPU Stack pane
ZH CPU堆栈窗格中的显示地址 

// LIST:343
EN Clear log
ZH 清除日志 

// LIST:343
EN Empty log window (doesn't influence log file)
ZH 空日志窗口 (不影响日志文件)  

// LIST:345
EN Log to file...
ZH 登录文件... 

// LIST:345
EN Start writing new log data to the file
ZH 开始将新的日志数据写入文件 

// LIST:347
EN Stop logging
ZH 停止记录 

// LIST:347
EN Close log file
ZH 关闭日志文件 

// LIST:395
EN Memory address associated with message
ZH 与消息关联的内存地址 

// LIST:423
EN Log data
ZH 日志数据 

// MEMORY:264
EN Invalidating non-flushed cache!
ZH 无效的缓存无效！ 

// MEMORY:286
EN Unable to flush cache at %08X
ZH 无法以 %08X冲洗缓存

// MEMORY:315
EN Unable to read memory
ZH 无法读取记忆 

// MEMORY:318
EN Memory at address %08X of size %08X (%i.) bytes can not be read. Either adress points to non-existing memory, or read access to memory is not enforceable.
ZH 无法读取地址%08X %08X ( %i.) 字节的内存. Adress要么指向不存在的内存,要么无法执行对内存的访问.

// MEMORY:536
EN Unable to write to memory
ZH 无法写入记忆 

// MEMORY:539
EN Memory at address %08X of size %08X (%i.) bytes can not be written to. Either adress points to non-existing memory, or write access to memory is not enforceable.
ZH 地址为08倍的内存尺寸 %08X ( %i.) 字节不能写入. ADRESS要么指向不存在的内存,要么写对内存的写入访问是不可强制执行的.

// MEMORY:1366
EN Unable to set break-on-access
ZH 无法设置突破性访问 

// MEMORY:1385
EN Limit run trace protocol to selected memory block
ZH 将跟踪协议限制为选定的内存块 

// MEMORY:1387
EN Add memory block to run trace protocol
ZH 添加内存块以运行跟踪协议 

// MEMORY:1419
EN Unable to change memory access rights
ZH 无法更改内存访问权限 

// MEMORY:1426
EN &No access
ZH &无访问 

// MEMORY:1427
EN Disable access to selected memory block
ZH 禁用对选定内存块的访问 

// MEMORY:1429
EN &Read only
ZH &只读 

// MEMORY:1430
EN Allow only read access to selected memory block
ZH 仅允许访问对选定的内存块的访问 

// MEMORY:1432
EN Read/&write
ZH 读/写 

// MEMORY:1433
EN Allow read/write access to selected memory block
ZH 允许读/写入选定的内存块 

// MEMORY:1435
EN &Execute
ZH &执行 

// MEMORY:1436
EN Allow only execution access to selected memory block
ZH 仅允许执行访问选定的内存块 

// MEMORY:1438
EN E&xecute/read
ZH E&XECUTE/阅读 

// MEMORY:1439
EN Allow execute/read access to selected memory block
ZH 允许执行/读取对选定内存块的访问 

// MEMORY:1441
EN &Full
ZH &满的 

// MEMORY:1442
EN Allow full access to selected memory block
ZH 允许完全访问选定的内存块 

// MEMORY:1449
EN Update contents of Memory window
ZH 更新内存窗口的内容 

// MEMORY:1452
EN Create backup copy of selected memory block
ZH 创建选定内存块的备份副本 

// MEMORY:1454
EN View in CPU Disassembler
ZH 在CPU反汇编器中查看

// MEMORY:1455
EN Open memory block in CPU Disassembler
ZH CPU反汇编器中的打开内存块

// MEMORY:1457
EN Dump in CPU
ZH 在CPU中转储 

// MEMORY:1458
EN Open selected memory block in CPU Dump
ZH 在CPU转储中打开选定的内存块 

// MEMORY:1461
EN Open selected memory block in standalone Dump window
ZH 在独立转储窗口中打开选定的内存块 

// MEMORY:1463
EN Search...
ZH 搜索... 

// MEMORY:1464
EN Search for a sequence of bytes or string
ZH 搜索一个字节或字符串序列 

// MEMORY:1466
EN Search next
ZH 下一步搜索 

// MEMORY:1467
EN Continue search
ZH 继续搜索 

// MEMORY:1469
EN Show free memory
ZH 显示自由记忆 

// MEMORY:1470
EN Show free and reserved memory areas
ZH 显示免费和保留的内存区域 

// MEMORY:1472
EN Set break-on-access
ZH 设置突破性访问 

// MEMORY:1473
EN Break on next access to selected memory block
ZH 突破下一个进入选定内存块的访问 

// MEMORY:1475
EN Remove break-on-access
ZH 删除呼吸器 

// MEMORY:1476
EN Remove break-on-access from selected block
ZH 从选定的块中删除突破性访问 

// MEMORY:1479
EN Add selected memory block to the run trace protocol
ZH 将选定的内存块添加到运行跟踪协议 

// MEMORY:1481
EN Set access
ZH 设置访问 

// MEMORY:1482
EN Set allowed type of access to selected memory block
ZH 设置允许访问选定内存块的访问类型 

// MEMORY:1584
EN (self)
ZH  (自己)  

// MEMORY:1593
EN Free
ZH 自由的 

// MEMORY:1595
EN Reserved
ZH 预订的 

// MEMORY:1599
EN code,
ZH 代码, 

// MEMORY:1601
EN data,
ZH 数据, 

// MEMORY:1603
EN SFX,
ZH SFX, 

// MEMORY:1605
EN default heap,
ZH 默认堆, 

// MEMORY:1607
EN heap,
ZH 堆, 

// MEMORY:1609
EN imports,
ZH 进口, 

// MEMORY:1611
EN exports,
ZH 出口, 

// MEMORY:1613
EN resources,
ZH 资源, 

// MEMORY:1615
EN relocations,
ZH 搬迁, 

// MEMORY:1617
EN stack guarding page,
ZH 堆栈保护页, 

// MEMORY:1620
EN PE header (.NET),
ZH PE标题 (.net) , 

// MEMORY:1622
EN PE header,
ZH PE标题, 

// MEMORY:1625
EN Process Environment Block,
ZH 进程环境块, 

// MEMORY:1627
EN User Shared Data,
ZH 用户共享数据, 

// MEMORY:1629
EN stack,
ZH 堆, 

// MEMORY:1632
EN data block,
ZH 数据块, 

// MEMORY:1635
EN native code,
ZH 本地代码, 

// MEMORY:1637
EN Process Parameters,
ZH 进程参数, 

// MEMORY:1639
EN Environment,
ZH 环境, 

// MEMORY:1641
EN GDI handles,
ZH GDI手柄, 

// MEMORY:1643
EN Kernel memory,
ZH 内核记忆, 

// MEMORY:1649
EN Code pages,
ZH 代码页, 

// MEMORY:1656
EN of
ZH of

// MEMORY:1665
EN Priv
ZH Priv

// MEMORY:1666
EN Map
ZH Map 

// MEMORY:1667
EN Img
ZH Img

// MEMORY:1668
EN Kern
ZH Kern 

// MEMORY:1686
EN R
ZH R

// MEMORY:1688
EN RW
ZH CH

// MEMORY:1690
EN RW  CopyOnWr
ZH RW  CopyOnWr 

// MEMORY:1692
EN E
ZH C

// MEMORY:1694
EN R E
ZH R E

// MEMORY:1696
EN RWE
ZH RWE 

// MEMORY:1698
EN RWE CopyOnWr
ZH RWE CopyOnWr

// MEMORY:1703
EN Guarded
ZH 守卫 

// MEMORY:1747
EN Base address of memory block
ZH 内存块的基地址 

// MEMORY:1751
EN Size of memory block (hex and decimal)
ZH 内存块的大小 (十六进制和十进制)  

// MEMORY:1754
EN Owner
ZH 所有者 

// MEMORY:1755
EN Owner of memory block
ZH 内存块所有者 

// MEMORY:1758
EN Section
ZH 部分 

// MEMORY:1759
EN Name of associated image sections
ZH 相关图像部分的名称 

// MEMORY:1762
EN Contains
ZH 包含 

// MEMORY:1763
EN Types of data that memory block contains
ZH 内存块包含的数据类型 

// MEMORY:1767
EN Type of memory block
ZH 内存块类型 

// MEMORY:1771
EN Memory access rights
ZH 内存访问权限 

// MEMORY:1774
EN Initial access
ZH 初始访问 

// MEMORY:1775
EN Initial memory access rights
ZH 初始内存访问权限 

// MEMORY:1781
EN Mapped as
ZH 映射为 

// MEMORY:1782
EN Name of associated memory mapped file
ZH 关联内存映射文件的名称 

// MEMORY:1797
EN Memory map
ZH 内存图 

// MENU:127
EN Main menu: File
ZH 主菜单: 文件

// MENU:129
EN Open new executable
ZH 打开新的可执行文件

// MENU:131
EN Set command line arguments for next run
ZH 设置下次执行时的命令行参数

// MENU:133
EN Attach to running process
ZH 附加到正在运行的进程

// MENU:135
EN Detach from the debugged process
ZH 从被调试的进程上分离

// MENU:137
EN Close OllyDbg
ZH 关闭 OllyDbg

// MENU:140
EN Main menu: View
ZH 主菜单: 查看

// MENU:142
EN Open Log window
ZH 打开日志窗口

// MENU:144
EN Open Executable modules window
ZH 打开可执行模块窗口

// MENU:146
EN Open Memory map window
ZH 打开内存映射窗口

// MENU:148
EN Open list of windows
ZH 打开窗口列表

// MENU:150
EN Open Threads window
ZH 打开线程窗口

// MENU:152
EN Open CPU window
ZH 打开 CPU 窗口

// MENU:154
EN Open Watches window
ZH 打开监视窗口

// MENU:156
EN Open Search results window
ZH 打开搜索结果窗口

// MENU:158
EN Open Run trace window
ZH 打开 Run 跟踪窗口

// MENU:160
EN Open Patches window
ZH 打开补丁窗口

// MENU:162
EN Open INT3 breakpoints window
ZH 打开 INT3 断点窗口

// MENU:164
EN Open Memory breakpoints window
ZH 打开内存断点窗口

// MENU:166
EN Open Hardware breakpoints window
ZH 打开硬件断点窗口

// MENU:168
EN Open list of source files
ZH 打开源文件列表

// MENU:170
EN Open file
ZH 打开文件

// MENU:172
EN Open VEH/SEH chain window
ZH 打开 VEH/SEH 链窗口

// MENU:174
EN Open Handles window
ZH 打开句柄窗口

// MENU:176
EN Open Call stack window
ZH 打开调用堆栈窗口

// MENU:179
EN Main menu: Debug
ZH 主菜单: 调试

// MENU:181
EN Run debugged application
ZH 运行被调试的程序

// MENU:183
EN Run only current thread
ZH 只运行当前进程

// MENU:185
EN Pause debugged application
ZH 暂停被调试的程序

// MENU:187
EN Step into
ZH 单步步入

// MENU:189
EN Step over
ZH 单步步过

// MENU:191
EN Execute till return
ZH 执行到返回

// MENU:193
EN Execute till user code
ZH 执行到用户代码

// MENU:195
EN Call DLL export
ZH 调用 DLL 输出

// MENU:197
EN Restart last debugged executable
ZH 重启上次调试的可执行文件

// MENU:199
EN Close debugged application
ZH 关闭被调试的程序

// MENU:206
EN Main menu: Trace
ZH 主菜单: 跟踪

// MENU:208
EN Open Run trace
ZH 打开 Run 跟踪

// MENU:210
EN Close Run trace
ZH 关闭 Run 跟踪

// MENU:212
EN Animate into
ZH 自动步入

// MENU:214
EN Animate over
ZH 自动步过

// MENU:216
EN Trace into
ZH 跟踪步入

// MENU:218
EN Trace over
ZH 跟踪步过

// MENU:220
EN Run hit trace
ZH 执行 Hit 跟踪

// MENU:222
EN Stop hit trace
ZH 停止 Hit 跟踪

// MENU:224
EN Set run trace break condition
ZH 设置 Run 跟踪断点条件

// MENU:226
EN Set run trace log condition
ZH 设置 Run 跟踪日志条件

// MENU:229
EN Main menu: Options
ZH 主菜单: 选项

// MENU:231
EN Open Options dialog
ZH 打开选项对话框

// MENU:233
EN Open Plugin options dialog
ZH 打开插件选项对话框

// MENU:235
EN Open Shortcut editor
ZH 打开快捷键编辑器

// MENU:238
EN Main menu: Windows
ZH 主菜单: 窗口

// MENU:240
EN Topmost status of main window
ZH 主窗口最前状态

// MENU:242
EN Cascade MDI windows
ZH 层叠 MDI 窗口

// MENU:244
EN Tile MDI windows horizontally
ZH 水平平铺 MDI 窗口

// MENU:246
EN Tile MDI windows vertically
ZH 垂直平铺 MDI 窗口

// MENU:248
EN Arrange icons
ZH 排列图标

// MENU:250
EN Close all MDI windows
ZH 关闭所有 MDI 窗口

// MENU:252
EN Maximize or restore active MDI
ZH 最大化或回复活动的 MDI 窗口

// MENU:254
EN Go to previous MDI window
ZH 激活上一个 MDI 窗口

// MENU:256
EN Go to next MDI window
ZH 激活下一个 MDI 窗口

// MENU:259
EN Main menu: Help
ZH 主菜单: 帮助

// MENU:261
EN Open About dialog
ZH 打开关于对话框

// MENU:264
EN Generic table shortcuts
ZH 通用表快捷方式 

// MENU:266
EN Go to previous CPU pane
ZH 转到以前的CPU窗格 

// MENU:268
EN Go to next CPU pane
ZH 转到下一个CPU窗格 

// MENU:271
EN Update
ZH 更新

// MENU:273
EN Copy
ZH 复制

// MENU:275
EN Copy all
ZH 复制全部

// MENU:277
EN Cut
ZH 剪切

// MENU:279
EN Paste
ZH 粘贴

// MENU:281
EN Make MDI window topmost
ZH 使MDI窗口最上方 

// MENU:283
EN Periodically update contents of window
ZH 定期更新窗口内容

// MENU:285
EN Show or hide bar
ZH 显示或隐藏栏

// MENU:287
EN Show or hide horizontal scrollbar
ZH 显示或隐藏水平滚动栏

// MENU:289
EN Resize all columns to default width
ZH 调整所有列的大小到默认宽度 

// MENU:292
EN Shortcuts used by different windows
ZH 不同窗口使用的快捷方式 

// MENU:294
EN Repeat last search
ZH 重复最后搜索 

// MENU:296
EN Repeat search in inverse direction
ZH 在逆向方向上重复搜索 

// MENU:299
EN Dump: Backup
ZH 转储：备份 

// MENU:301
EN Create or update backup
ZH 创建或更新备份 

// MENU:303
EN Toggle backup display
ZH 切换备份显示 

// MENU:306
EN Dump: Edit
ZH 转储：编辑 

// MENU:312
EN Copy data in hexadecimal format
ZH 复制十六进制格式的数据 

// MENU:314
EN Paste data in hexadecimal format
ZH 以十六进制格式粘贴数据 

// MENU:316
EN Edit first selected item
ZH 编辑第一个选择的项目 

// MENU:318
EN Edit dump selection
ZH 编辑转储选择 

// MENU:324
EN Fill selection with 0xFF
ZH 用0xff填充选择 

// MENU:326
EN Select all
ZH 全选

// MENU:328
EN Select procedure or structure
ZH 选择进程或结构 

// MENU:332
EN Copy all modifications to executable file
ZH 将所有修改复制到可执行文件 

// MENU:336
EN Add or edit custom label
ZH 添加或编辑自定义标签 

// MENU:340
EN Add or edit comment
ZH 添加或编辑注释 

// MENU:342
EN Save file to disk
ZH 保存文件到磁盘

// MENU:345
EN Dump: Breakpoints (shared by other windows)
ZH 转储：断点 (其他窗口共享)  

// MENU:359
EN Enable or disable INT3 breakpoint
ZH 启用或禁用INT3断点 

// MENU:361
EN Set or edit memory breakpoint
ZH 设置或编辑内存断点 

// MENU:365
EN Enable or disable memory breakpoint
ZH 启用或禁用内存断点 

// MENU:369
EN Set or edit hardware breakpoint
ZH 设置或编辑硬件断点 

// MENU:373
EN Enable or disable hardware breakpoint
ZH 启用或禁用硬件断点 

// MENU:378
EN Dump: Jumps to location
ZH 转储：跳到位置 

// MENU:380
EN Set new origin
ZH 设置新来源 

// MENU:384
EN Go to origin (EIP) of current thread
ZH 转到当前线程的原点 (EIP)  

// MENU:386
EN Go to expression
ZH 去表达 

// MENU:388
EN Follow jump or call to selection
ZH 关注跳跃或调用选择 

// MENU:392
EN Go to previous history location
ZH 转到以前的历史位置 

// MENU:394
EN Go to next history location
ZH 转到下一个历史位置 

// MENU:396
EN Go to previous run trace record
ZH 转到以前的运行跟踪记录 

// MENU:398
EN Go to next run trace record
ZH 转到下一个运行跟踪记录 

// MENU:400
EN Go to previous procedure, structure or stack frame
ZH 转到以前的进程,结构或栈帧 

// MENU:402
EN Go to next procedure, structure or stack frame
ZH 转到下一个进程,结构或栈帧 

// MENU:404
EN Go to previous found item
ZH 转到以前发现的项目 

// MENU:406
EN Go to next found item
ZH 转到下一个找到的项目 

// MENU:408
EN Follow selection in executable file
ZH 在可执行文件中关注选择 

// MENU:411
EN Dump: Structures
ZH 转储：结构 

// MENU:413
EN Decode as structure
ZH 解码为结构 

// MENU:415
EN Decode as pointer to structure
ZH 解码为结构指针 

// MENU:420
EN Dump: Search
ZH 转储：搜索 

// MENU:422
EN Show list of names
ZH 显示名称清单 

// MENU:424
EN Find command
ZH 查找命令 

// MENU:426
EN Find sequence of commands
ZH 查找命令序列 

// MENU:428
EN Find constant
ZH 找到常数 

// MENU:430
EN Find integer
ZH 查找整数 

// MENU:434
EN Find binary string
ZH 找到二进制字符串 

// MENU:436
EN Find modification
ZH 查找修改 

// MENU:438
EN Search for all intermodular calls
ZH 搜索所有载体调用 

// MENU:440
EN Search for all commands
ZH 搜索所有命令 

// MENU:442
EN Search for all command sequences
ZH 搜索所有命令序列 

// MENU:444
EN Search for all constants
ZH 搜索所有常数 

// MENU:446
EN Search for all modifications
ZH 搜索所有修改 

// MENU:448
EN Search for all referenced strings
ZH 搜索所有引用的字符串 

// MENU:450
EN Search for all referenced GUIDs
ZH 搜索所有引用的指南 

// MENU:452
EN Search for all user-defined comments
ZH 搜索所有用户定义的注释 

// MENU:454
EN Search for all procedures
ZH 搜索所有进程 

// MENU:456
EN Search for all switches and cascaded IFs
ZH 搜索所有开关和级联IFS 

// MENU:458
EN Search for all referenced floating-point constants
ZH 搜索所有引用的浮点常数 

// MENU:460
EN Find last record in run trace
ZH 在运行跟踪中找到最后记录 

// MENU:463
EN Dump: References
ZH 转储：参考 

// MENU:465
EN Find all references
ZH 查找所有参考 

// MENU:468
EN Dump: Addressing
ZH 转储：地址 

// MENU:474
EN Show offsets relative to module base
ZH 显示相对于模块基础的偏移 

// MENU:477
EN Dump: Comments
ZH 转储：注释 

// MENU:479
EN Toggle between comments and source code
ZH 在注释和源代码之间切换 

// MENU:481
EN Show or hide run trace profile in comments
ZH 在注释中显示或hide运行跟踪配置文件 

// MENU:484
EN Dump: Analysis
ZH 转储：分析 

// MENU:486
EN Analyse module
ZH 分析模块 

// MENU:490
EN Remove analysis from the module
ZH 从模块中删除分析 

// MENU:493
EN Dump: Help
ZH 转储：帮助 

// MENU:500
EN Dump: Data presentation
ZH 转储：数据显示 

// MENU:502
EN Dump as 16 hex bytes and ASCII text
ZH 作为16个十六进制字节和ASCII文本的转储 

// MENU:504
EN Dump as 8 hex bytes and ASCII text
ZH 作为8个十六进制字节和ASCII文本 

// MENU:506
EN Dump as 16 hex bytes and UNICODE text
ZH 转储为16个十六进制字节和Unicode文本 

// MENU:508
EN Dump as 8 hex bytes and UNICODE text
ZH 转储为8个十六进制字节和Unicode文本 

// MENU:510
EN Dump as at most 16 hex bytes and multibyte text
ZH 转储最多像16个十六进制字节和多重文本 

// MENU:512
EN Dump as at most 8 hex bytes and multibyte text
ZH 转储最多像8个十六进制字节和多重文本 

// MENU:514
EN Dump as 64 ASCII characters
ZH 转储为64个ASCII字符 

// MENU:516
EN Dump as 32 ASCII characters
ZH 转储为32个ASCII字符 

// MENU:518
EN Dump as 64 UNICODE characters
ZH 转储为64个Unicode字符 

// MENU:520
EN Dump as 32 UNICODE characters
ZH 转储为32个Unicode字符 

// MENU:522
EN Dump as 16 UNICODE characters
ZH 转储为16个Unicode字符 

// MENU:524
EN Dump as 16-bit signed numbers
ZH 转储为16位签名的数字 

// MENU:526
EN Dump as 16-bit unsigned numbers
ZH 转储为16位未签名的数字 

// MENU:528
EN Dump as 16-bit hexadecimal numbers
ZH 转储为16位十六进制数字 

// MENU:530
EN Dump as 32-bit signed numbers
ZH 转储为32位签名的数字 

// MENU:532
EN Dump as 32-bit unsigned numbers
ZH 转储为32位未签名的数字 

// MENU:534
EN Dump as 32-bit hexadecimal numbers
ZH 转储为32位十六进制数字 

// MENU:536
EN Dump as address with comments
ZH 转储作为注释的地址 

// MENU:538
EN Dump as address with ASCII dump and comments
ZH 转储作为ASCII转储和注释的地址 

// MENU:540
EN Dump as address with UNICODE dump and comments
ZH 转储用Unicode转储和注释作为地址 

// MENU:542
EN Dump as 32-bit floating-point numbers
ZH 转储为32位浮点数 

// MENU:544
EN Dump as 64-bit floating-point numbers
ZH 转储为64位浮点数 

// MENU:546
EN Dump as 80-bit floating-point numbers
ZH 转储为80位浮点数 

// MENU:548
EN Dump as disassembly
ZH 倾倒为反汇编 

// MENU:550
EN Dump as known structure
ZH 转储为已知结构 

// MENU:553
EN Stack-specific shortcuts
ZH 堆栈特定的快捷方式 

// MENU:555
EN Lock or unlock stack
ZH 锁定或解锁堆栈 

// MENU:557
EN Push doubleword
ZH 推双字 

// MENU:559
EN Pop doubleword
ZH 弹出双字 

// MENU:561
EN Follow stack doubleword in CPU Disassembler
ZH 在CPU反汇编器中关注堆栈双字

// MENU:563
EN Go to ESP
ZH 去esp 

// MENU:565
EN Go to EBP
ZH 去EBP 

// MENU:567
EN Show offsets relative to ESP
ZH 显示相对于ESP的偏移 

// MENU:569
EN Show offsets relative to EBP
ZH 显示相对于EBP的偏移 

// MENU:572
EN Shortcuts of Registers pane
ZH 寄存器窗格的捷径 

// MENU:574
EN Increment register
ZH 增量寄存器 

// MENU:576
EN Decrement register
ZH 减少寄存器 

// MENU:578
EN Zero register
ZH 零寄存器 

// MENU:580
EN Set register to 1
ZH 将寄存器设置为1 

// MENU:582
EN Modify contents of register or toggle bit
ZH 修改寄存器或切换位的内容 

// MENU:584
EN Undo selected register
ZH 撤消选定的寄存器 

// MENU:586
EN Push FPU stack
ZH 按下FPU堆栈 

// MENU:588
EN Pop FPU stack
ZH POP FPU堆栈 

// MENU:590
EN Follow contents of register in CPU Disassembler
ZH 遵循CPU反汇编器中的寄存器内容

// MENU:592
EN Follow contents of register in CPU Dump
ZH 在CPU转储中关注寄存器的内容 

// MENU:594
EN Follow contents of register in CPU Stack
ZH 在CPU堆栈中关注寄存器的内容 

// MENU:596
EN View floating-point registers and flags
ZH 查看浮点寄存器和标志 

// MENU:598
EN View MMX registers
ZH 查看MMX寄存器 

// MENU:600
EN View 3DNow! registers
ZH 查看3dnow！ 寄存器 

// MENU:602
EN Help on register
ZH 帮助寄存器 

// MENU:605
EN Shortcuts of Information pane
ZH 信息窗格的快捷方式 

// MENU:609
EN Follow contents of operand in CPU Disassembler
ZH 遵循CPU反汇编器中操作数的内容

// MENU:611
EN Follow contents of operand in CPU Dump
ZH 遵循CPU转储中操作数的内容 

// MENU:613
EN Follow contents of operand in CPU Stack
ZH 遵循CPU堆栈中操作数的内容 

// MENU:615
EN List jumps and calls to command
ZH 列出跳跃和命令的调用 

// MENU:617
EN List switch cases
ZH 列表开关案例 

// MENU:622
EN Log window
ZH 日志窗口 

// MENU:624
EN Follow address of log record in CPU Disassembler
ZH 按照CPU反汇编器中的日志记录地址

// MENU:626
EN Follow address of log record in CPU Dump
ZH 按照CPU转储中的日志记录地址 

// MENU:628
EN Follow address of log record in CPU Stack
ZH 按照CPU堆栈中日志记录的地址 

// MENU:632
EN Start protocolling to file
ZH 开始原始批准要归档 

// MENU:634
EN Stop protocolling to file
ZH 停止原始胶卷以归档 

// MENU:637
EN Executable modules
ZH 可执行模块 

// MENU:639
EN Open code section in CPU Disassembler
ZH CPU反汇编器中的打开代码部分

// MENU:641
EN View module data section in CPU Dump
ZH 查看CPU转储中的模块数据部分 

// MENU:643
EN Open executable file in standalone Dump window
ZH 在独立转储窗口中打开可执行文件 

// MENU:645
EN List names declared in the selected module
ZH 选定模块中声明的列表名称 

// MENU:647
EN List all names declared in the debugged application
ZH 列出在调试应用程序中声明的所有名称 

// MENU:649
EN Find all intermodular calls in the selected module
ZH 在选定的模块中查找所有载体调用 

// MENU:651
EN Analyse selected module
ZH 分析选定的模块 

// MENU:653
EN Save module data to .udd file
ZH 将模块数据保存到.udd文件 

// MENU:655
EN Load module data from .udd file
ZH 从.UDD文件加载模块数据 

// MENU:664
EN View memory block in CPU Dump
ZH 查看CPU转储中的内存块 

// MENU:666
EN Dump memory block in separate window
ZH 在单独窗口中的转储存储器块 

// MENU:668
EN Search memory block for a sequence of bytes or string
ZH 搜索内存块,以示为字节或字符串序列 

// MENU:670
EN Toggle break on access to selected memory block
ZH 切换访问选定的内存块 

// MENU:672
EN Show or hide free memory
ZH 显示或隐藏自由记忆 

// MENU:675
EN List of windows
ZH 窗口列表 

// MENU:677
EN Follow WinProc in CPU Disassembler
ZH 在CPU反汇编器中关注WinProc

// MENU:679
EN Follow ClassProc in CPU Disassembler
ZH 在CPU反汇编器中关注ClassProc

// MENU:682
EN Threads
ZH 线程 

// MENU:684
EN Open thread in CPU window
ZH 在CPU窗口中打开线程 

// MENU:686
EN Dump Thread Information Block
ZH 转储线程信息块 

// MENU:688
EN View thread registers
ZH 查看线程寄存器 

// MENU:690
EN Set symbolic thread name
ZH 设置符号线程名称 

// MENU:692
EN Suspend thread
ZH 挂起线程

// MENU:694
EN Resume thread
ZH 恢复线程

// MENU:696
EN Kill thread
ZH 杀死线程

// MENU:699
EN Watches
ZH 监视

// MENU:701
EN Insert watch
ZH 插入匹配 

// MENU:703
EN Edit watch
ZH 编辑匹配 

// MENU:705
EN Delete watch
ZH 删除匹配 

// MENU:707
EN Move watch one line up
ZH 移动观看一行 

// MENU:709
EN Move watch one line down
ZH 移动一条线向下移动 

// MENU:711
EN Edit contents of displayed register or memory
ZH 编辑显示寄存器或内存的内容 

// MENU:713
EN Follow watch value in CPU Disassembler
ZH 遵循CPU反汇编器中的匹配值

// MENU:715
EN Follow watch value in CPU Dump
ZH 在CPU转储中遵循观察值 

// MENU:717
EN Follow watch value in CPU Stack
ZH 在CPU堆栈中遵循匹配值 

// MENU:720
EN Search results
ZH 搜索结果

// MENU:722
EN Follow selected found item in CPU Disassembler
ZH 在CPU反汇编器中遵循选定的项目

// MENU:724
EN Follow previous found item in Disassembler
ZH 按照以前的反汇编器中找到的项目

// MENU:726
EN Follow next found item in Disassembler
ZH 关注下一个在反汇编器中找到的项目

// MENU:728
EN Find text substring
ZH 查找文本基因 

// MENU:730
EN Set unconditional breakpoint on all found commands
ZH 在所有发现的命令上设置无条件断点 

// MENU:732
EN Set conditional breakpoint on all found commands
ZH 在所有发现的命令上设置有条件断点 

// MENU:734
EN Set logging breakpoint on all found commands
ZH 设置所有发现命令上的日志断点 

// MENU:736
EN Remove breakpoints from all found commands
ZH 从所有发现的命令中删除断点 

// MENU:738
EN Set unconditional break on calls to selected function
ZH 将无条件的调用设置为调用选定函数 

// MENU:740
EN Set conditional break on calls to selected function
ZH 设置有条件的调用调用选择函数 

// MENU:742
EN Set logging break on calls to selected function
ZH 设置调用调用选定函数的记录中断 

// MENU:744
EN Remove breakpoints from calls to selected function
ZH 从调用选定函数的调用中删除断点 

// MENU:747
EN Run trace
ZH Run 跟踪

// MENU:749
EN Follow previous run trace record in Disassembler
ZH 按照以前的运行跟踪记录中的反汇编器记录

// MENU:751
EN Follow next run trace record in Disassembler
ZH 按照反汇编器中的下一个运行跟踪记录

// MENU:753
EN Follow selected trace record in CPU Disassembler
ZH 在CPU反汇编器中遵循选定的跟踪记录

// MENU:755
EN Clear run trace
ZH 清除运行跟踪 

// MENU:757
EN Toggle run trace registers display mode
ZH 切换运行跟踪寄存器显示模式 

// MENU:759
EN Mark address in run trace
ZH 运行跟踪中的标记地址 

// MENU:761
EN Enter address to find and mark in run trace
ZH 输入地址以查找并在运行跟踪中标记 

// MENU:763
EN Find previous marked address in run trace
ZH 在运行跟踪中查找以前的标记地址 

// MENU:765
EN Find next marked address in run trace
ZH 在运行跟踪中查找下一个标记地址 

// MENU:767
EN Clear address marks in run trace
ZH Run Trace中的清晰地址标记 

// MENU:769
EN Profile selected module
ZH 配置文件选定的模块 

// MENU:771
EN Profile whole memory
ZH 配置文件整体内存 

// MENU:773
EN Save run trace data to the file
ZH 将运行跟踪数据保存到文件 

// MENU:775
EN Close run trace log file
ZH 关闭运行跟踪日志文件 

// MENU:778
EN Profile
ZH 轮廓 

// MENU:780
EN Follow selected profile item in CPU Disassembler
ZH 在CPU反汇编器中关注选定的个人资料项目

// MENU:782
EN Follow previous profile item in Disassembler
ZH 在反汇编器中关注以前的个人资料项目

// MENU:784
EN Follow next profile item in Disassembler
ZH 在反汇编器中关注下一个个人资料项目

// MENU:786
EN Mark selected address in run trace
ZH 在运行跟踪中标记选定的地址 

// MENU:789
EN Patches
ZH 补丁 

// MENU:791
EN Follow selected patch in CPU Disassembler
ZH 在CPU反汇编器中关注选定的补丁

// MENU:793
EN Follow previous patch in CPU Disassembler
ZH 在CPU反汇编器中关注以前的补丁

// MENU:795
EN Follow next patch in CPU Disassembler
ZH 在CPU反汇编器中关注下一个补丁

// MENU:797
EN Apply patch
ZH 应用补丁 

// MENU:799
EN Restore original code
ZH 还原原始代码 

// MENU:801
EN Delete patch record from the table
ZH 从表中删除补丁记录 

// MENU:804
EN Breakpoint lists
ZH 断点列表

// MENU:806
EN Delete breakpoint
ZH 删除断点

// MENU:808
EN Enable or disable reakpoint
ZH 启用或禁用断点 

// MENU:812
EN Follow breakpoint in CPU Dump
ZH 关注CPU转储中的断点 

// MENU:814
EN Disable all breakpoints
ZH 禁用所有断点 

// MENU:816
EN Enable all breakpoints
ZH 启用所有断点 

// MENU:821
EN Follow selected source line in CPU Disassembler
ZH 在CPU反汇编器中遵循选定的源线

// MENU:824
EN List of source files
ZH 源文件列表 

// MENU:826
EN View source file
ZH 查看源文件 

// MENU:831
EN Follow import in CPU Disassembler
ZH 在CPU反汇编器中关注导入

// MENU:833
EN Follow selected label in CPU Disassembler
ZH 在CPU反汇编器中关注选定的标签

// MENU:835
EN Follow selected label in CPU Dump
ZH 在CPU转储中关注选定的标签 

// MENU:837
EN Find references to name
ZH 查找名称的引用 

// MENU:839
EN Help on selected API function
ZH 帮助选定的API函数 

// MENU:844
EN Dump file associated with the handle
ZH 与句柄关联的转储文件 

// MENU:847
EN Call stack
ZH 调用堆栈

// MENU:851
EN Follow procedure in CPU Disassember
ZH 遵循CPU反汇编程序中的程序 

// MENU:853
EN Follow caller in CPU Disassember
ZH 在CPU反汇编中关注调用者 

// MENU:855
EN Follow stack frame in CPU Stack
ZH 在CPU堆栈中关注栈帧 

// MENU:857
EN Follow stack doubleword in CPU Dump
ZH 在CPU转储中关注堆栈双字 

// MENU:859
EN Set breakpoint on call
ZH 在调用上设置断点 

// MENU:861
EN Set conditional breakpoint on call
ZH 在调用上设置有条件断点 

// MENU:863
EN Set conditional logging breakpoint on call
ZH 设置有条件的记录断点 

// MENU:911
EN Ctrl+
ZH Ctrl+

// MENU:913
EN Alt+
ZH Alt+

// MENU:915
EN Win+
ZH Win+

// MENU:917
EN Shift+
ZH Shift+

// MENU:930
EN Space
ZH Space

// MENU:932
EN Plus (+)
ZH 加 (+)  

// MENU:934
EN Minus (-)
ZH 减  (-)  

// MENU:936
EN Colon (:)
ZH 冒号  (：)  

// MENU:938
EN Semicolon (;)
ZH Semicolon (;)  

// MENU:940
EN Comma (,)
ZH 逗号 (,)  

// MENU:942
EN Point (.)
ZH Point  (.)  

// MENU:957
EN NumPoint
ZH numpoint 

// MENU:961
EN BkSpc
ZH BKSPC 

// MENU:963
EN Enter
ZH 进入 

// MENU:965
EN Insert
ZH 插入 

// MENU:967
EN Gray *
ZH 灰色的 * 

// MENU:969
EN Gray +
ZH 灰色 + 

// MENU:971
EN Gray -
ZH 灰色的 - 

// MENU:973
EN Gray /
ZH 灰色的 / 

// MENU:975
EN Del
ZH Del

// MENU:977
EN Tab
ZH Tab

// MENU:979
EN UpArrow
ZH 向上箭头 

// MENU:981
EN DownArrow
ZH DownArrow 

// MENU:983
EN LeftArrow
ZH 左箭头 

// MENU:985
EN RightArrow
ZH 右箭头 

// MENU:987
EN PgUp
ZH PgUp 

// MENU:989
EN PgDn
ZH PgDn 

// MENU:991
EN Home
ZH Home

// MENU:993
EN End
ZH End

// MENU:1274
EN Shortcut:
ZH Shortcut: 

// MENU:1277
EN Ctrl +
ZH Ctrl +

// MENU:1278
EN Shortcut includes Control key
ZH Shortcut includes Control key

// MENU:1280
EN Alt +
ZH Alt +

// MENU:1281
EN Shortcut includes Alt key
ZH Shortcut includes Alt key

// MENU:1283
EN Win +
ZH Win +

// MENU:1284
EN Shortcut includes Flying Windows key
ZH Shortcut includes Flying Windows key

// MENU:1286
EN Shift +
ZH Shift +

// MENU:1287
EN Shortcut includes Shift key
ZH Shortcut includes Alt key

// MENU:1290
EN Select main shortcut key
ZH 选择主快捷键 

// MENU:1292
EN Apply
ZH 应用

// MENU:1293
EN Press to apply shortcut
ZH 按下快捷方式 

// MENU:1296
EN Validity of the shortcut
ZH 快捷方式的有效性 

// MENU:1298
EN Load
ZH 加载 

// MENU:1299
EN Load shortcuts from file
ZH 加载文件中的快捷方式 

// MENU:1302
EN Save shortcuts to file
ZH 保存快捷方式以归档 

// MENU:1304
EN Restore defaults
ZH 恢复默认

// MENU:1305
EN Restore default OllyDbg shortcuts
ZH 还原默认ollydbg快捷方式 

// MENU:1308
EN Accept shortcuts and close shortcut editor
ZH 接受快捷方式并关闭快捷方式编辑器 

// MENU:1311
EN Discard modifications and close shortcut editor
ZH 丢弃修改并关闭快捷方式编辑器 

// MENU:1313
EN Shortcut editor
ZH Shortcut editor

// MENU:1469
EN Shortcut is reserved by OS
ZH 快捷方式由OS保留 

// MENU:1472
EN Shortcut is reserved by OllyDbg
ZH 快捷方式由Ollydbg保留 

// MENU:1476
EN Shift is not allowed (used as command modifier)
ZH Shift is not allowed (用作命令修饰符)  

// MENU:1481
EN Shift is not allowed (turns numeric pad keys into arrow mode)
ZH Shift is not allowed (turns numeric pad keys into arrow mode)  

// MENU:1485
EN Shift is not allowed (key is processed as a character)
ZH Shift is not allowed (key is processed as a character)  

// MENU:1491
EN This key can be used only in combination with Alt
ZH 该键只能与ALT结合使用 

// MENU:1505
EN This combination is already used by:
ZH 该组合已经通过： 

// MENU:1511
EN Conflicting shortcut(s) will be removed if you press 'Apply'
ZH 如果您按“Apply”,将删除相互矛盾的快捷方式 

// MENU:1517
EN Press 'Apply' to change shortcut
ZH 按“应用”更改快捷方式 

// MENU:1626
EN Select file with shortcuts
ZH 选择快捷方式的文件 

// MENU:1631
EN No file
ZH 无文件 

// MENU:1675
EN Description
ZH 描述 

// MENU:1676
EN Description of the function
ZH 函数的描述 

// MENU:1679
EN Shortcut
ZH 捷径 

// MENU:1680
EN Currently selected shortcut
ZH 目前选择的快捷方式 

// MENU:2062
EN Resize main window
ZH 调整主窗口大小 

// MENU:2064
EN Move main window
ZH 移动主窗口 

// MENU:2066
EN Minimize main window
ZH 最小化主窗口 

// MENU:2068
EN Maximize main window
ZH 最大化主窗口 

// MENU:2070
EN Restore main window to previous size
ZH 还原主窗口到先前的大小 

// MENU:2079
EN Switch to window
ZH 切换到窗口 

// MODULES:130
EN empty range
ZH 空范围 

// MODULES:132
EN the whole memory
ZH 整个内存 

// MODULES:162
EN Stack of
ZH 堆栈 

// MODULES:166
EN Data block of
ZH 数据块 

// MODULES:170
EN Process Environment Block
ZH 进程环境块 

// MODULES:173
EN User Shared Data
ZH 用户共享数据 

// MODULES:176
EN Process Parameters Block
ZH 进程参数块 

// MODULES:179
EN Environment
ZH 环境 

// MODULES:182
EN GDI handles
ZH GDI处理 

// MODULES:185
EN Kernel memory
ZH 内核内存 

// MODULES:340
EN Unable to save .udd data for '%s'
ZH 无法将.udd数据保存为'%s' 

// MODULES:378
EN (main)
ZH  (主要的)  

// MODULES:381
EN (loader)
ZH  (加载程序)  

// MODULES:383
EN (debugged DLL)
ZH  (调试DLL)  

// MODULES:386
EN (system)
ZH  (系统)  

// MODULES:406
EN Hidden
ZH 隐 

// MODULES:407
EN ,hidden
ZH ,隐 

// MODULES:771
EN Module '%s' (OllyDbg DLL loader)
ZH 模块“%s” (OLLYDBG DLL加载器)  

// MODULES:773
EN Module '%s'
ZH 模块'%s' 

// MODULES:792
EN Module <%s> (anonymous)
ZH 模块< %s> (匿名)  

// MODULES:802
EN Unable to open executable file
ZH 无法打开可执行文件 

// MODULES:813
EN Invalid DOS signature
ZH 无效的DOS签名 

// MODULES:818
EN Invalid PE signature
ZH 无效的PE签名 

// MODULES:822
EN Not an 80x86 executable
ZH 不是80x86可执行的 

// MODULES:850
EN Too short Optional Header
ZH 可选标题太短 

// MODULES:853
EN Size of Optional Header (%i. bytes) differs from expected (%i.)
ZH 可选标头的尺寸 ( %i.字节) 与预期 ( %i.) 不同 

// MODULES:881
EN Invalid Optional Header
ZH 无效的可选标头 

// MODULES:884
EN SectionAlignment in Optional Header is 0x%X bytes instead of 0x%X
ZH 可选标题中的截面为0x %x字节而不是0x %x 

// MODULES:903
EN Different PE headers in file and in memory%s, memory data will be used
ZH 文件和内存 %s中的不同PE标头,将使用内存数据 

// MODULES:904
EN (pending system update?)
ZH  (待处理系统更新？)  

// MODULES:913
EN Export table
ZH 导出表 

// MODULES:914
EN Import table
ZH 导入表 

// MODULES:915
EN Resource table
ZH 资源表 

// MODULES:916
EN Exception table
ZH 异常表 

// MODULES:917
EN Certificate table
ZH 证书表 

// MODULES:918
EN Base relocation table
ZH 基本重定位表 

// MODULES:919
EN Debugging info table
ZH 调试信息表 

// MODULES:920
EN TLS table
ZH TLS表 

// MODULES:921
EN Import address table
ZH 导入地址表 

// MODULES:922
EN Delay import table
ZH 延迟导入表 

// MODULES:925
EN Different PE Data Directory in file and in memory (antivirus?)
ZH 文件和内存中的不同PE数据目录 (Antivirus？)  

// MODULES:927
EN %s: file (%08X,%08X), memory (%08X,%08X)
ZH  %s：文件 ( %08X, %08X) ,内存 ( %08X, %08X) 

// MODULES:935
EN File contains invalid number of sections (%i.)
ZH 文件包含无效的部分 ( %i.)  

// MODULES:943
EN Unable to read section headers
ZH 无法阅读截面标题 

// MODULES:1017
EN Entry point in PE (%08X) differs from reported by OS (%08X)
ZH PE中的入口点 ( %08X) 与OS报告 ( %08X) 不同

// MODULES:1041
EN BaseOfCode points to end of code, corrected to section '%s'
ZH 基本尺寸指向代码结束,校正为“%s”部分 

// MODULES:1074
EN Code size in header is %08X, extended to size of section '%s' (%08X)
ZH 标题中的代码大小为 %08X,扩展到“%s”部分的大小 ( %08X) 

// MODULES:1089
EN Code start in header is %08X, extended to start of section '%s'
ZH 标题中的代码启动为 %08X,扩展到“%s”部分的开始

// MODULES:1095
EN Code size in header is %08X, extended to end of section '%s'
ZH 标题中的代码大小为 %08X,扩展到“%s”部分的末尾

// MODULES:1111
EN Code size in header is 0, assumed code in section %s
ZH 标题中的代码大小为0,假定的代码在章节 %s中 

// MODULES:1131
EN Code size is extended to include all sections marked as CODE
ZH 代码大小扩展到包含所有标记为代码的部分 

// MODULES:1138
EN Size of code in header is too large
ZH 标题中的代码尺寸太大 

// MODULES:1158
EN Probably SFX file, code area extended to cover SFX placeholder '%s'
ZH 可能SFX文件,延长的代码区域以覆盖SFX占位符'%s' 

// MODULES:1161
EN Probably SFX file, code area extended to cover SFX placeholders
ZH 可能SFX文件,延长的代码区域以覆盖SFX占位符 

// MODULES:1216
EN Unable to read export data
ZH 无法读取导出数据 

// MODULES:1222
EN Invalid export data
ZH 无效的导出数据 

// MODULES:1233
EN Export directory in memory is damaged
ZH 内存中的导出目录损坏 

// MODULES:1261
EN Invalid Image Export Directory, or system update is pending
ZH 无效的图像导出目录或系统更新正在待处理 

// MODULES:1263
EN Invalid or compressed Image Export Directory
ZH 无效或压缩图像导出目录 

// MODULES:1346
EN Export '%s' is redirected to %08X
ZH 导出“%s”被重定向到 %08X

// MODULES:1353
EN Export #%i is redirected to %08X
ZH 导出＃ %i被重定向到 %08X

// MODULES:1355
EN <Original_%s>
ZH <原始_ %S> 

// MODULES:1357
EN Redirected to %s
ZH 重定向到 %s 

// MODULES:1359
EN Redirected from <Original_%s>
ZH 从<oinder_ %s>重定向 

// MODULES:1489
EN Unable to read import data
ZH 无法读取导入数据 

// MODULES:1559
EN Unable to read fixup data
ZH 无法读取修复数据 

// MODULES:1562
EN Module contains unknown or non-32bit fixups
ZH 模块包含未知或非32位修复程序 

// MODULES:1578
EN Unable to read TLS directory
ZH 无法读取TLS目录 

// MODULES:1584
EN Unable to read TLS callback address
ZH 无法阅读TLS回调地址 

// MODULES:1588
EN Invalid TLS callback address
ZH 无效的TLS回调地址 

// MODULES:1592
EN Module contains TLS callback(s)
ZH 模块包含TLS回调 

// MODULES:1619
EN Entry point belongs to no section
ZH 入口点不属于 

// MODULES:1626
EN Section '%s', pointed to by entry point, is assumed to contain code
ZH 假定“%s”部分指向入口点包含代码 

// MODULES:1648
EN Code sections '%s' and '%s' will be merged to a single memory block
ZH 代码部分'%s'和'%s'将合并到单个内存块 

// MODULES:1658
EN Error reading executable file
ZH 错误读取可执行文件 

// MODULES:1660
EN Error parsing module in memory
ZH 错误解析模块在内存中 

// MODULES:1826
EN Limit run trace protocol to selected module
ZH 将跟踪协议限制为选定的模块 

// MODULES:1828
EN Add module to run trace protocol
ZH 添加模块以运行跟踪协议 

// MODULES:1880
EN Update contents of Modules window
ZH 更新模块窗口的内容 

// MODULES:1882
EN View &code in CPU
ZH CPU中的查看和代码 

// MODULES:1883
EN Open code section in CPU window and follow entry
ZH 在CPU窗口中打开代码部分,然后关注条目 

// MODULES:1885
EN View &data in CPU Dump
ZH CPU转储中的查看和数据 

// MODULES:1886
EN View data section in CPU Dump pane
ZH 查看CPU转储窗格中的数据部分 

// MODULES:1888
EN View &executable file
ZH 查看可执行文件 

// MODULES:1891
EN Show names
ZH 显示名称 

// MODULES:1892
EN List all names declared in the selected module
ZH 列出所选模块中声明的所有名称 

// MODULES:1894
EN Show names in all modules
ZH 在所有模块中显示名称 

// MODULES:1895
EN List names from all loaded modules
ZH 列出所有已加载模块的名称 

// MODULES:1897
EN Find all intermodular calls
ZH 查找所有载体调用 

// MODULES:1901
EN Add module to the run trace protocol
ZH 将模块添加到运行跟踪协议 

// MODULES:1904
EN Analyse executable code in the selected module
ZH 在选定的模块中分析可执行代码 

// MODULES:1906
EN Save data to .udd file...
ZH 将数据保存到.udd文件... 

// MODULES:1907
EN Save analysis and user-added data to the .udd file
ZH 将分析和用户添加的数据保存到.UDD文件 

// MODULES:1909
EN Load data from .udd file...
ZH 从.udd文件加载数据... 

// MODULES:1910
EN Load analysis and user-added data from the .udd file
ZH 来自.udd文件的负载分析和用户附加数据 

// MODULES:1944
EN Base$    (System)
ZH 基础$ (系统)  

// MODULES:1945
EN Base address and whether this is a system module
ZH 基地地址以及这是否是系统模块 

// MODULES:1949
EN Size of memory occupied by module
ZH 模块占据的内存大小 

// MODULES:1952
EN Entry
ZH 入口 

// MODULES:1953
EN Module entry point
ZH 模块入口点 

// MODULES:1957
EN Internal short module name
ZH 内部短模块名称 

// MODULES:1961
EN Type of the module (.NET or native)
ZH 模块的类型 (.NET或本机)  

// MODULES:1964
EN File version
ZH 文件版本 

// MODULES:1965
EN Version of executable file
ZH 可执行文件的版本 

// MODULES:1968
EN Static links
ZH 静态链接 

// MODULES:1969
EN Modules statically linked to this module
ZH 静态链接到此模块的模块 

// MODULES:1972
EN Path
ZH 小路 

// MODULES:1973
EN Full name of executable file
ZH 可执行文件的全名 

// NAMELIST:353
EN Update contents of Names window
ZH 更新名称窗口的内容 

// NAMELIST:355
EN Follow import
ZH 遵循导入 

// NAMELIST:356
EN Follow import in CPU Disassembler pane
ZH 在CPU反汇编器窗格中关注导入

// NAMELIST:359
EN Follow selected label in CPU Disassembler pane
ZH 在CPU反汇编器窗格中关注选定的标签

// NAMELIST:362
EN Follow selected label in CPU Dump pane
ZH 在CPU转储窗格中关注选定的标签 

// NAMELIST:365
EN Set unconditional breakpoint on selected address
ZH 在选定地址上设置无条件断点 

// NAMELIST:367
EN Conditional breakpoint...
ZH 有条件的断点... 

// NAMELIST:368
EN Set or edit conditional breakpoint
ZH 设置或编辑有条件断点 

// NAMELIST:371
EN Set or edit conditional logging breakpoint
ZH 设置或编辑有条件记录断点 

// NAMELIST:373
EN Remove breakpoint
ZH 删除断点 

// NAMELIST:374
EN Remove breakpoint from selected address
ZH 从选定地址删除断点 

// NAMELIST:376
EN Disable breakpoint
ZH 禁用断点 

// NAMELIST:377
EN Temporarily disable breakpoint on selected address
ZH 暂时禁用选定地址的断点 

// NAMELIST:379
EN Enable breakpoint
ZH 启用断点 

// NAMELIST:380
EN Re-enable breakpoint on selected address
ZH 选择地址上的重新启用断点 

// NAMELIST:382
EN Find references
ZH 查找参考 

// NAMELIST:383
EN Find references to address in the module of origin
ZH 在原始模块中查找对地址的参考 

// NAMELIST:550
EN Search -
ZH 搜索 - 

// NAMELIST:552
EN - No match
ZH - 没有匹配 

// NAMELIST:625
EN Label
ZH 标签 

// NAMELIST:628
EN Export
ZH 出口 

// NAMELIST:630
EN Import
ZH 进口 

// NAMELIST:632
EN Debug data
ZH 调试数据 

// NAMELIST:634
EN Analyser
ZH 分析仪 

// NAMELIST:709
EN Ordinal =
ZH 序数= 

// NAMELIST:789
EN Address of the name
ZH 名称的地址 

// NAMELIST:794
EN Name of the module to which the name belongs
ZH 名称所属的模块的名称 

// NAMELIST:797
EN Name of the section to which the name belongs
ZH 名称所属的部分的名称 

// NAMELIST:801
EN Type of the name
ZH 名称的类型 

// NAMELIST:804
EN Ordinal
ZH 序数 

// NAMELIST:805
EN Ordinal associated with export (decimal number)
ZH 与出口相关的序数 (十进制数)  

// NAMELIST:813
EN Name-related comments
ZH 与名称有关的注释 

// NAMELIST:826
EN All names
ZH 所有名称 

// NAMELIST:830
EN Names in
ZH 名称在 

// NETASM:1139
EN Command crosses end of code block
ZH 命令交叉末端代码块 

// NETDBG:599
EN Unable to get .NET debugging interface ICorDebugProcess2. This makes debugging practically impossible. For example, any breakpoint (also temporary) may lead to deadlock. You may try to continue, but I recommend to restart in native debugging mode.
ZH 无法获得.NET调试接口IcordeBugProcess2. 这使调试几乎不可能. 例如,任何断点 (也是临时) 都可能导致死锁. 您可以尝试继续,但我建议以本机调试模式重新启动. 

// OLLYMAIN:256
EN Process paused
ZH 进程暂停

// OLLYMAIN:260
EN Process terminated
ZH 进程终结

// OLLYMAIN:616
EN Open run trace
ZH 打开 Run 跟踪

// OLLYMAIN:638
EN Restore window
ZH 恢复窗口

// OLLYMAIN:640
EN Maximize window
ZH 最大化窗口

// OLLYMAIN:707
EN &Open...
ZH 打开(&O)...

// OLLYMAIN:707
EN Open executable file for debugging
ZH 打开需要调试的可执行文件

// OLLYMAIN:709
EN Set new arguments...
ZH 设置新参数...

// OLLYMAIN:710
EN Set command line arguments for the next run
ZH 设置下次执行时的命令行参数

// OLLYMAIN:712
EN &Attach...
ZH 附加(&A)...

// OLLYMAIN:714
EN &Detach
ZH 分离(&D)

// OLLYMAIN:716
EN &Detach and exit
ZH 分离并退出(&D)

// OLLYMAIN:717
EN Detach from the debugged process and close OllyDbg
ZH 从被调试的进程上分离并关闭 OllyDbg

// OLLYMAIN:719
EN E&xit
ZH 退出(&X)

// OLLYMAIN:723
EN Reopen last debugged application
ZH 重新打开上次调试的程序

// OLLYMAIN:725
EN Open selected file
ZH 打开选中文件

// OLLYMAIN:747
EN &Log
ZH 日志(&L)

// OLLYMAIN:749
EN &Executable modules
ZH 可执行模块(&E)

// OLLYMAIN:751
EN &Memory map
ZH 内存映射(&M)

// OLLYMAIN:753
EN List of &windows
ZH 窗口列表(&W)

// OLLYMAIN:755
EN &Threads
ZH 线程(&T)

// OLLYMAIN:757
EN &CPU
ZH &CPU

// OLLYMAIN:767
EN &Patches
ZH 补丁(&P)

// OLLYMAIN:769
EN INT3 &breakpoints
ZH INT3 断点(&B)

// OLLYMAIN:771
EN Memor&y breakpoints
ZH 内存断点(&Y)

// OLLYMAIN:773
EN &Hardware breakpoints
ZH 硬件断点(&H)

// OLLYMAIN:775
EN VEH/SEH chain
ZH VEH/SEH 链

// OLLYMAIN:775
EN Open list of installed exception handlers
ZH 打开已安装的异常处理程序的列表

// OLLYMAIN:777
EN Open Calls stack window
ZH 打开调用堆栈窗口

// OLLYMAIN:779
EN &Source files
ZH 源文件(&S)

// OLLYMAIN:781
EN File...
ZH 文件...

// OLLYMAIN:781
EN View file
ZH 查看文件

// OLLYMAIN:783
EN Drive...
ZH 驱动器...

// OLLYMAIN:783
EN View physical sectors on the disk
ZH 查看磁盘上的物理分区

// OLLYMAIN:789
EN &Run
ZH 运行(&R)

// OLLYMAIN:789
EN Run debugged application (all threads)
ZH 运行被调试的程序 (所有线程)

// OLLYMAIN:791
EN Run thread
ZH 运行线程

// OLLYMAIN:793
EN &Pause
ZH 暂停(&P)

// OLLYMAIN:795
EN Step &into
ZH 步入(&I)

// OLLYMAIN:795
EN Execute single command entering subroutines
ZH 执行单个指令或进入子程序

// OLLYMAIN:797
EN Step &over
ZH 步过(&O)

// OLLYMAIN:797
EN Execute single command or call
ZH 执行单个指令或调用

// OLLYMAIN:799
EN Run program till next return
ZH 执行程序到下次返回

// OLLYMAIN:801
EN Run program till exit from system DLLs
ZH 执行程序直到从系统 DLL 退出

// OLLYMAIN:803
EN Call procedure exported by DLL
ZH 调用 DLL 导出的程序

// OLLYMAIN:805
EN Re&start
ZH 重启(&S)

// OLLYMAIN:807
EN &Close
ZH 关闭(&C)

// OLLYMAIN:809
EN Set affinity
ZH 设置亲和性

// OLLYMAIN:809
EN Set list of CPUs for debugged application
ZH 设置用来调试程序的 CPU 列表

// OLLYMAIN:811
EN Create function library
ZH 创建函数库

// OLLYMAIN:817
EN Open or reopen run trace with new parameters
ZH 使用新参数打开或重打开 Run 跟踪

// OLLYMAIN:819
EN Close run trace
ZH 关闭 Run 跟踪

// OLLYMAIN:819
EN Close run trace protocolling
ZH 关闭轨迹原始胶卷 

// OLLYMAIN:821
EN Start animation entering subroutines
ZH 启动动画进入子例程 

// OLLYMAIN:823
EN Start animation executing subroutines at once
ZH 立即启动动画执行子例程 

// OLLYMAIN:825
EN Trace code entering subroutines
ZH 跟踪代码输入子例程 

// OLLYMAIN:827
EN Trace code executing subroutines at once
ZH 跟踪代码一次执行子例程 

// OLLYMAIN:829
EN Mark commands that were executed at least once
ZH 至少执行一次的标记命令 

// OLLYMAIN:831
EN Stop hit trace and discard gathered hit data
ZH 停止命中跟踪并丢弃收集的命中数据 

// OLLYMAIN:833
EN Discard hit trace
ZH 忽略 Hit 跟踪

// OLLYMAIN:833
EN Discard gathered hit trace data
ZH 丢弃收集的命中跟踪数据 

// OLLYMAIN:835
EN Set condition...
ZH 设置条件...

// OLLYMAIN:835
EN Set trace break conditions
ZH 设置跟踪断点条件

// OLLYMAIN:837
EN Set protocol...
ZH 设置协议... 

// OLLYMAIN:837
EN Set commands and address ranges to protocol
ZH 设置命令和地址范围到协议 

// OLLYMAIN:843
EN Plugin menu
ZH 插件菜单

// OLLYMAIN:849
EN &Options...
ZH 选项(&O)...

// OLLYMAIN:849
EN Set OllyDbg options
ZH 设置 OllyDbg 选项

// OLLYMAIN:851
EN Load options...
ZH 加载选项...

// OLLYMAIN:852
EN Load OllyDbg options from different initialization file
ZH 从不同的初始化文件加载ollydbg选项 

// OLLYMAIN:854
EN Save options...
ZH 保存选项...

// OLLYMAIN:855
EN Save OllyDbg options to different initialization file
ZH 将OLLYDBG选项保存到不同的初始化文件 

// OLLYMAIN:857
EN &Plugin options...
ZH 插件选项(&P)...

// OLLYMAIN:857
EN Set plugin options
ZH 设置插件选项

// OLLYMAIN:859
EN &Edit shortcuts...
ZH 编辑快捷键(&E)...

// OLLYMAIN:859
EN Customize keyboard shortcuts
ZH 自定义键盘快捷键

// OLLYMAIN:865
EN Always on &top
ZH 总在最前(&T)

// OLLYMAIN:865
EN Toggle topmost status of main OllyDbg window
ZH 切换 OllyDbg 主窗口最前状态

// OLLYMAIN:867
EN &Cascade
ZH 层叠(&C)

// OLLYMAIN:869
EN Tile &horizontal
ZH 水平平铺(&H)

// OLLYMAIN:871
EN Tile &vertical
ZH 垂直平铺(&V)

// OLLYMAIN:873
EN Arrange &icons
ZH 排列图标(&I)

// OLLYMAIN:873
EN Arrange minimized MDI windows
ZH 排列最小化 MDI 窗口

// OLLYMAIN:875
EN Close all
ZH 关闭所有

// OLLYMAIN:875
EN Close all data windows
ZH 关闭所有数据窗口

// OLLYMAIN:877
EN Toggle between maximized and restored window state
ZH 切换最大化和恢复窗口状态

// OLLYMAIN:879
EN Previous
ZH 上一个

// OLLYMAIN:879
EN Activate previous window
ZH 激活上一个窗口

// OLLYMAIN:881
EN Next
ZH 下一个

// OLLYMAIN:881
EN Activate next window
ZH 激活下一个窗口

// OLLYMAIN:887
EN &About...
ZH 关于(&A)...

// OLLYMAIN:887
EN Show version and copyright information
ZH 显示版本和版权信息

// OLLYMAIN:889
EN License
ZH 许可证

// OLLYMAIN:889
EN Show License Agreement
ZH 显示许可证协议

// OLLYMAIN:895
EN &File
ZH 文件(&F)

// OLLYMAIN:895
EN Select file or process to debug
ZH 选择要调试的文件或进程

// OLLYMAIN:897
EN &View
ZH 查看(&V)

// OLLYMAIN:897
EN Debug windows
ZH 调试窗口

// OLLYMAIN:899
EN &Debug
ZH 调试(&D)

// OLLYMAIN:899
EN Debugging functions
ZH 调试函数

// OLLYMAIN:901
EN &Trace
ZH 跟踪(&T)

// OLLYMAIN:901
EN Run trace functions
ZH Run 跟踪函数

// OLLYMAIN:903
EN &Plugins
ZH 插件(&P)

// OLLYMAIN:903
EN Plugin functions
ZH 插件函数

// OLLYMAIN:905
EN &Options
ZH 选项(&O)

// OLLYMAIN:905
EN Set options
ZH 设置选项

// OLLYMAIN:907
EN &Windows
ZH 窗口(&W)

// OLLYMAIN:907
EN Manipulate windows
ZH 操作窗口

// OLLYMAIN:909
EN &Help
ZH 帮助(&H)

// OLLYMAIN:909
EN Help functions
ZH 帮助函数

// OLLYMAIN:1054
EN WM_DESTROY from different process ignored
ZH 来自不同进程的WM_DESTROY忽略了 

// OLLYMAIN:1070
EN WM_CLOSE from different process ignored
ZH wm_close从不同的进程中忽略 

// OLLYMAIN:1221
EN Select 32-bit executable and specify arguments
ZH 选择32位可执行文件并指定参数 

// OLLYMAIN:1380
EN Set affinity mask for debugged process
ZH 设置亲和力面具以进行调试进程 

// OLLYMAIN:1458
EN Select initialization file
ZH 选择初始化文件 

// OLLYMAIN:1648
EN Top
ZH 最佳 

// OLLYMAIN:1657
EN Ready
ZH 就绪

// OLLYMAIN:1661
EN Loading
ZH 加载中

// OLLYMAIN:1665
EN Attaching
ZH 附着 

// OLLYMAIN:1671
EN Calling DLL
ZH 打调用DLL 

// OLLYMAIN:1673
EN Hit trace
ZH 命中痕迹 

// OLLYMAIN:1675
EN Thread
ZH 线程

// OLLYMAIN:1677
EN Running
ZH 运行中

// OLLYMAIN:1682
EN Step in
ZH 单步步入

// OLLYMAIN:1691
EN Animating
ZH 动画 

// OLLYMAIN:1696
EN Tracing
ZH 跟踪 

// OLLYMAIN:1702
EN Unpacking
ZH 解开包装 

// OLLYMAIN:1707
EN Till RET
ZH ret 

// OLLYMAIN:1711
EN Till user
ZH 直到用户 

// OLLYMAIN:1715
EN Pausing
ZH 暂停 

// OLLYMAIN:1719
EN Paused
ZH 暂停 

// OLLYMAIN:1723
EN Terminated
ZH 终止 

// OLLYMAIN:1727
EN Closing
ZH 关闭 

// OLLYMAIN:1731
EN Unknown
ZH 未知 

// OLLYMAIN:1819
EN You are going to close OllyDbg. The debugged process will terminate, which may lead to the loss of data. Do you still want to close OllyDbg?
ZH 您将关闭Ollydbg. 调试进程将终止,这可能导致数据丢失. 您还想关闭Ollydbg吗？ 

// OLLYMAIN:1877
EN Dynamic link library '%s%s' that resides in OllyDbg directory is intended for use on NT-based operating systems only. Delete it?
ZH 位于OLLYDBG目录中的动态链接库“ %s %s”仅用于基于NT的操作系统. 删除它？ 

// OLLYMAIN:1878
EN Wrong DLL
ZH DLL错误 

// OLLYMAIN:1912
EN Dynamic link library '%s%s' that resides in OllyDbg directory has lower file version (%s) than corresponding DLL in system directory (%s). Delete old library from the OllyDbg directory? (If necessary, you can restore it later from the original .zip archive)
ZH 位于OLLYDBG目录中的动态链接库“ %s %s”的文件版本 ( %s) 比系统目录中的相应DLL较低 ( %s) . 从Ollydbg目录中删除旧图书馆？  (如有必要,您可以以后从原始.zip存档恢复)  

// OLLYMAIN:2804
EN Unable to load KERNEL32.DLL
ZH 无法加载kernel32.dll 

// OLLYMAIN:2889
EN PSAPI.DLL is not found. This library contains important process- and module-oriented functions for OSes based on NT technology. Normal debugging is hardly possible. Do you nevertheless want to continue?
ZH 找不到psapi.dll. 该库包含基于NT技术的OOS的重要进程和模块的重要函数. 正常的调试是几乎不可能的. 但是您想继续吗？ 

// OLLYMAIN:2989
EN Terminal 6
ZH 终端6 

// OLLYMAIN:2992
EN System fixed font
ZH 系统固定字体 

// OLLYMAIN:3002
EN Courier (UNICODE)
ZH 快递 (Unicode)  

// OLLYMAIN:3012
EN Lucida (UNICODE)
ZH 路易德 (Unicode)  

// OLLYMAIN:3015
EN Font 4
ZH 字体4 

// OLLYMAIN:3018
EN Font 5
ZH 字体5 

// OLLYMAIN:3020
EN Font 6
ZH 字体6 

// OLLYMAIN:3022
EN Font 7
ZH 字体7 

// OLLYMAIN:3124
EN Black on white
ZH 黑色白色 

// OLLYMAIN:3146
EN Yellow on blue
ZH 黄色在蓝色上 

// OLLYMAIN:3168
EN Marine
ZH 海洋 

// OLLYMAIN:3190
EN Mostly black
ZH 主要是黑色 

// OLLYMAIN:3213
EN Scheme 4
ZH 方案4 

// OLLYMAIN:3215
EN Scheme 5
ZH 方案5 

// OLLYMAIN:3217
EN Scheme 6
ZH 方案6 

// OLLYMAIN:3219
EN Scheme 7
ZH 方案7 

// OLLYMAIN:3239
EN No highlighting
ZH 没有突出显示 

// OLLYMAIN:3241
EN Christmas tree
ZH 圣诞树 

// OLLYMAIN:3279
EN Jumps and calls
ZH 跳调用 

// OLLYMAIN:3295
EN Memory access
ZH 内存访问 

// OLLYMAIN:3308
EN Hilite 4
ZH Hilite 4 

// OLLYMAIN:3310
EN Hilite 5
ZH Hilite 5 

// OLLYMAIN:3312
EN Hilite 6
ZH Hilite 6 

// OLLYMAIN:3314
EN Hilite 7
ZH Hilite 7 

// OLLYMAIN:3370
EN Unable to create main OllyDbg window
ZH 无法创建主ollydbg窗口 

// OLLYMAIN:3433
EN %s v%i.%02i%s (preliminary version - under development!)
ZH  %s v %i. %02i %s (初步版本 - 正在开发！)  

// OLLYMAIN:3436
EN %s v%i.%02i%s (intermediate version - under development!)
ZH  %s v %i. %02i %s (中间版本 - 正在开发！)  

// OLLYMAIN:3452
EN Unable to initialize COM library. Some features will be disabled.
ZH 无法初始化com库. 某些函数将被禁用. 

// OLLYMAIN:3461
EN Command line:
ZH 命令行： 

// OLLYMAIN:3507
EN Unable to initialize OllyDbg
ZH 无法初始化ollydbg 

// OLLYMAIN:3531
EN You do not have administrative rights on this computer. As a result, some debugging features may fail. To enable all OllyDbg features, please log in as administrator.
ZH 您在这台计算机上没有管理权. 结果,某些调试函数可能会失败. 要启用所有OLLYDBG函数,请登录以管理员的限制. 

// OLLYMAIN:3549
EN Unable to initialize Disassembler. Please contact author.
ZH 无法初始化反汇编器. 请联系作者.

// OLLYMAIN:3553
EN Unable to initialize .NET Disassembler. Please contact author.
ZH 无法初始化.NET反汇编器. 请联系作者.

// OLLYMAIN:3555
EN Not enough memory to initialize internal structures
ZH 没有足够的内存来初始化内部结构 

// OPTIONS:157
EN System colours:
ZH 系统颜色： 

// OPTIONS:159
EN Customizable colours:
ZH 可定制的颜色： 

// OPTIONS:189
EN Highlighted text
ZH 突出显示文字 

// OPTIONS:193
EN Selected line
ZH 选定的行 

// OPTIONS:213
EN EIP at breakpoint
ZH EIP在断点 

// OPTIONS:217
EN Grayed text
ZH 灰色文字 

// OPTIONS:221
EN Normal text
ZH 普通文字 

// OPTIONS:290
EN Font parameters:
ZH 字体参数： 

// OPTIONS:304
EN Height:
ZH 高度： 

// OPTIONS:305
EN %i pixels
ZH  %i像素 

// OPTIONS:308
EN Width:
ZH 宽度： 

// OPTIONS:312
EN Style:
ZH 风格： 

// OPTIONS:313
EN Normal
ZH 普通的 

// OPTIONS:314
EN Bold
ZH 大胆的 

// OPTIONS:315
EN Weight=%i
ZH 体重= %i 

// OPTIONS:316
EN , Italic
ZH ,斜体 

// OPTIONS:317
EN , Underline
ZH ,下划线 

// OPTIONS:318
EN , Strikeout
ZH ,三振出局 

// OPTIONS:321
EN Charset:
ZH charset： 

// OPTIONS:323
EN ANSI
ZH ansi 

// OPTIONS:325
EN Default
ZH 默认 

// OPTIONS:327
EN Symbol
ZH 象征 

// OPTIONS:329
EN OEM
ZH OEM 

// OPTIONS:331
EN Other
ZH 其他 

// OPTIONS:334
EN Face:
ZH 脸： 

// OPTIONS:473
EN Code
ZH 代码 

// OPTIONS:476
EN Code options
ZH 代码选项 

// OPTIONS:482
EN Disassembling syntax:
ZH 反汇编语法： 

// OPTIONS:485
EN MASM (Microsoft)
ZH MASM (Microsoft)  

// OPTIONS:486
EN Disassemble in MASM format
ZH 反汇编MASM格式 

// OPTIONS:488
EN IDEAL (Borland)
ZH 理想 (Borland)  

// OPTIONS:489
EN Disassemble in Borland's IDEAL format
ZH 反汇编Borland的理想格式 

// OPTIONS:491
EN HLA (Randall Hyde)
ZH HLA (Randall Hyde)  

// OPTIONS:492
EN Disassemble in High Level Assembly format
ZH 反汇编高级组装格式 

// OPTIONS:494
EN Linux (AT&&T) - only disassembly!
ZH Linux (AT && t)  - 仅反汇编！ 

// OPTIONS:495
EN Disassemble in AT&T format, unsupported by Assembler!
ZH 反汇编AT&T格式,不支持汇编器！ 

// OPTIONS:497
EN Disassemble in lowercase
ZH 反汇编小写 

// OPTIONS:498
EN Display mnemonics, registers and keywords in lowercase
ZH 用小写字母显示助记符、寄存器和关键字

// OPTIONS:500
EN Tab between mnemonics and arguments
ZH 助记符和参数之间的选项卡 

// OPTIONS:501
EN Start operands from the 9th character position
ZH 从第9个字符位置开始操作数 

// OPTIONS:503
EN Extra space between arguments
ZH 参数之间的额外空间 

// OPTIONS:504
EN Insert additional space character between arguments
ZH 在参数之间插入其他空间字符 

// OPTIONS:506
EN Show default segments
ZH 显示默认段 

// OPTIONS:507
EN Show implicit segment registers in memory addresses
ZH 在内存地址中显示隐式段寄存器 

// OPTIONS:509
EN Always show size of memory operands
ZH 始终显示内存操作数的大小 

// OPTIONS:510
EN Show size of memory operand even if it is unambiguous
ZH 显示内存操作数的大小,即使它是明确的 

// OPTIONS:512
EN Show NEAR jump modifiers
ZH 展示近距离修饰符 

// OPTIONS:513
EN Mark indirect intrasegment jumps as NEAR
ZH 标记间接内内段的跳跃 

// OPTIONS:515
EN Show local module name
ZH 显示本地模块名称 

// OPTIONS:516
EN Precede local addresses with the name of the module
ZH 先于本地地址,名称为模块 

// OPTIONS:518
EN Show symbolic addresses
ZH 显示符号地址 

// OPTIONS:519
EN Show known symbolic addresses instead of constants
ZH 显示已知的符号地址而不是常数 

// OPTIONS:521
EN Demangle symbolic names
ZH Demangle符号名称 

// OPTIONS:522
EN Convert encoded C++ names into the readable form
ZH 将编码的C++ 名称转换为可读表单 

// OPTIONS:525
EN Apply selected options
ZH 应用选定的选项 

// OPTIONS:528
EN Undo modifications
ZH 撤消修改 

// OPTIONS:530
EN Options
ZH 选项 

// OPTIONS:534
EN Mnemonics
ZH mnemonics 

// OPTIONS:543
EN Guess alternative forms of conditional commands
ZH 猜测条件命令的替代形式 

// OPTIONS:544
EN Like JZ, JC instead of JE, JAE. Analysis necessary!
ZH 像JZ,JC而不是JE,Jae. 分析必要！ 

// OPTIONS:546
EN Form of string commands:
ZH 字符串命令的形式： 

// OPTIONS:549
EN Long (MOVS [DWORD EDI],[DWORD ESI]...)
ZH 长(MOVS [DWORD EDI],[DWORD ESI]...) 

// OPTIONS:550
EN State assumed string operands explicitly
ZH 状态假定的字符串操作数明确 

// OPTIONS:552
EN Short (MOVSB...)
ZH 短 (movsb ...)  

// OPTIONS:553
EN Do not specify assumed string operands
ZH 请勿指定假定的字符串操作数 

// OPTIONS:555
EN Decode near returns as:
ZH Decode near returns as:

// OPTIONS:559
EN Emphasize that return is near
ZH 强调回报即将接近 

// OPTIONS:562
EN Almost all returns are near in flat mode applications
ZH 几乎所有 returns 都在 flat mode applications 中接近 

// OPTIONS:564
EN Decode size-sensitive 16/32-bit mnemonics like:
ZH 解码尺寸敏感的16/32位助记符类似： 

// OPTIONS:568
EN No suffix for 16-bit, suffix D for 32-bit mnemonics
ZH 没有后缀16位,后缀D用于32位助记符 

// OPTIONS:571
EN Suffix W for 16-bit, suffix D for 32-bit mnemonics
ZH 后缀w可容纳16位,后缀D,用于32位助记符 

// OPTIONS:574
EN Suffix W for 16-bit, no suffix for 32-bit mnemonics
ZH 后缀w可容纳16位,没有32位助记符的后缀 

// OPTIONS:576
EN Decode jump hints as:
ZH 解码跳跃提示为： 

// OPTIONS:580
EN Plus if jump is mainly taken, minus if not
ZH 另外,如果主要采取跳跃,则减去 

// OPTIONS:583
EN Prefixes 'Branch Hint Taken', 'Branch Hint Not Taken'
ZH 前缀“分支提示”,“分支提示未摄取” 

// OPTIONS:595
EN Operands
ZH 操作数 

// OPTIONS:604
EN Decode top of FPU stack as:
ZH 解码FPU堆栈的顶部为： 

// OPTIONS:608
EN Decode top of FPU stack as ST(0) (full form)
ZH 将FPU堆栈的顶部解码为ST (0)  (完整形式)  

// OPTIONS:611
EN Decode top of FPU stack as ST (simplified form)
ZH 将FPU堆栈的顶部解码为ST (简化形式)  

// OPTIONS:613
EN Decode size of 16/32-byte SSE operands as:
ZH 解码大小为16/32字节SSE操作数为： 

// OPTIONS:616
EN DQWORD/QQWORD (Double/Quad Quadword)
ZH dqword/qqword (double/Quad QuadWord)  

// OPTIONS:617
EN Decode SSE memory operands like [DQWORD EDX]
ZH 解码SSE内存操作数,例如[DQWORD EDX] 

// OPTIONS:619
EN XMMWORD/YMMWORD (as XMM/YMM registers)
ZH xmmword/ymmword (作为xmm/ymm寄存器)  

// OPTIONS:620
EN Decode SSE memory operands like [XMMWORD EDX]
ZH 解码SSE内存操作数,例如[XMMWord EDX] 

// OPTIONS:641
EN Underline fixups
ZH 下划线修复程序 

// OPTIONS:642
EN Underline fixups in dump columns or windows
ZH 在转储列或Windows中下划线修复程序 

// OPTIONS:644
EN Use wide characters in UNICODE && multibyte dumps
ZH 在Unicode中使用宽字符&&多键转储 

// OPTIONS:645
EN So that Kanji symbols are not clipped
ZH 因此,汉字符号不会被夹住 

// OPTIONS:647
EN Disable GDI scripting support
ZH 禁用GDI脚本支持 

// OPTIONS:649
EN Gets rid of dump artefacts, but some UNICODE characters may be replaced by spaceholders
ZH 摆脱垃圾箱,但某些Unicode字符可能被太空持有人取代 

// OPTIONS:651
EN Replace non-printable ASCII characters with dots
ZH 用点代替不可打印的ASCII字符 

// OPTIONS:652
EN Do not display non-printable ASCII characters in dump
ZH 请勿在转储中显示不可打印的ASCII字符 

// OPTIONS:654
EN Display addresses in address column as:
ZH 地址列中的显示地址为： 

// OPTIONS:657
EN Hex, Symbol
ZH 十六进制,象征 

// OPTIONS:658
EN Hex address, followed by symbolic name, if available
ZH 十六进制地址,然后是符号名称,如果有的话 

// OPTIONS:660
EN Symbol, Hex
ZH 符号,十六进制 

// OPTIONS:661
EN If symbolic name is available, put it first
ZH 如果有符号名称可用,请将其放在首位 

// OPTIONS:663
EN Symbol or Hex
ZH 符号或十六进制 

// OPTIONS:665
EN If symbolic name is available, show name, otherwise hexadecimal address
ZH 如果有符号名称,请显示名称,否则十六进制地址 

// OPTIONS:667
EN Highlight symbolic names in address column
ZH 地址列中突出显示符号名称 

// OPTIONS:670
EN Doubleclick on address:
ZH 地址： 

// OPTIONS:673
EN Sets relative addressing
ZH 设置相对地址 

// OPTIONS:674
EN Doubleclick on address to toggle relative addressing
ZH DoubleClick在地址上切换相对地址 

// OPTIONS:676
EN Labels address
ZH 标签地址 

// OPTIONS:677
EN Doubleclick on address to place user-defined label
ZH doubleclick在地址上放置用户定义的标签 

// OPTIONS:679
EN ASCII code page
ZH ASCII代码页 

// OPTIONS:683
EN Code page used in ASCII dumps and data input dialogs
ZH ASCII转储和数据输入对话框中使用的代码页 

// OPTIONS:685
EN Multibyte code page
ZH 多级代码页 

// OPTIONS:690
EN Code page used in multibyte character dumps and data input dialogs
ZH 多键字符转储和数据输入对话框中使用的代码页 

// OPTIONS:702
EN Strings
ZH 字符串 

// OPTIONS:711
EN Decode Pascal-style string constants
ZH 解码Pascal风格的字符串常数 

// OPTIONS:712
EN Pascal strings are preceded with the character count
ZH Pascal 字符串先于字符计数 

// OPTIONS:714
EN Allow diacritical symbols (à,ñ,ø...)
ZH 允许 diacritical 符号(à,ñ,ø...)

// OPTIONS:715
EN Increases number of improperly recognized strings
ZH 增加不当认可的字符串数量 

// OPTIONS:717
EN To recognize UNICODE strings:
ZH 识别Unicode字符串： 

// OPTIONS:720
EN Use internal heuristics (ASCII subset)
ZH 使用内部启发式法 (ASCII子集)  

// OPTIONS:721
EN Search is limited to extended ASCII subset only
ZH 搜索仅限于扩展ASCII子集 

// OPTIONS:723
EN Use IsTextUnicode()
ZH 使用Istextunicode ()  

// OPTIONS:725
EN Let Windows determine if valid UNICODE string. ATTENTION, danger of misinterpretations!
ZH 让Windows确定是否有效的Unicode字符串. 注意,误解的危险！ 

// OPTIONS:727
EN Mode of string decoding:
ZH 字符串解码的模式： 

// OPTIONS:730
EN Plain ("abcdef")
ZH 普通 (“ ABC Def”)  

// OPTIONS:731
EN Display text strings without conversion
ZH 显示文本字符串而无需转换 

// OPTIONS:733
EN Assembler ("abc",LF,"def")
ZH 汇编器 (“ ABC”,LF,“ DEF”)  

// OPTIONS:734
EN Convert strings to more or less MASM-compatible form
ZH 将字符串转换为或多或少兼容麦芽糊状形式 

// OPTIONS:736
EN C ("abc\\ndef")
ZH C ("abc\\ndef")

// OPTIONS:737
EN Convert recognized strings to C-compatible form
ZH 将识别的字符串转换为C兼容形式 

// OPTIONS:749
EN Debugging
ZH 调试 

// OPTIONS:752
EN Debugging options
ZH 调试选项 

// OPTIONS:758
EN Assume flat selectors
ZH 假设扁平选择器 

// OPTIONS:759
EN Assume that CS, DS, SS and ES always have zero offset
ZH 假设CS,DS,SS和ES始终具有零偏移 

// OPTIONS:761
EN After Execute till return, step over RET
ZH 执行直到返回后,跨越RET 

// OPTIONS:762
EN When return is reached, execute it
ZH 当返回时,执行 

// OPTIONS:764
EN Allow fast command emulation
ZH 允许快速命令仿真 

// OPTIONS:765
EN Emulate execution of commands in OllyDbg
ZH 模仿Ollydbg中的命令执行 

// OPTIONS:767
EN Auto backup user code
ZH 自动备份用户代码 

// OPTIONS:768
EN Create backups of non-system code sections
ZH 创建非系统代码部分的备份 

// OPTIONS:770
EN Use HW breakpoints for stepping
ZH 使用HW断点进行步进 

// OPTIONS:771
EN Use less invasive hardware breakpoints instead of INT3
ZH 使用较少的侵入性硬件断点而不是INT3 

// OPTIONS:773
EN Hide unimportant handles
ZH 隐藏不重要的手柄 

// OPTIONS:775
EN Don't list unimportant standard handles in the Handles window
ZH 不要在手柄窗口中列出不重要的标准手柄 

// OPTIONS:777
EN Set permanent breakpoints on system calls
ZH 在系统调用上设置永久断点 

// OPTIONS:779
EN Set INT3 on ZwContinue(), UnhandledExceptionFilter(), KiUserExceptionDispatcher() etc.
ZH 在zwcontinue () ,unhandledexceptionfilter () ,kiuserexceptiondispatcher () 等上设置int3. 

// OPTIONS:781
EN To pause running application:
ZH 暂停运行应用程序： 

// OPTIONS:784
EN Set breakpoint in every thread
ZH 在每个线程中设置断点 

// OPTIONS:785
EN Set memory traps or single-step breaks in every thread
ZH 在每个线程中设置内存陷阱或单步断裂 

// OPTIONS:787
EN Call DebugBreakProcess()
ZH 调用debugbreakprocess ()  

// OPTIONS:788
EN Use this special system call (if supported by OS)
ZH 使用此特殊系统调用 (如果由OS支持)  

// OPTIONS:790
EN When terminating the running application:
ZH 终止运行应用程序时： 

// OPTIONS:793
EN Immediately call TerminateProcess()
ZH 立即调用TerminateProcess ()  

// OPTIONS:794
EN Works fast, but open files may get corrupted
ZH 工作很快,但是打开的文件可能会损坏 

// OPTIONS:796
EN Try to use ExitProcess() first
ZH 尝试使用ExitProcess () 首先使用ExitProcess ()  

// OPTIONS:797
EN Tricky, but a bit safer
ZH 棘手,但是有点安全 

// OPTIONS:799
EN Command used as a soft breakpoint (experimental):
ZH 命令用作软断点 (实验) ： 

// OPTIONS:804
EN Select command used as a soft breakpoint. Use INT3 if in doubt!
ZH 选择命令用作软断点. 如果有疑问,请使用int3！ 

// OPTIONS:816
EN Debugging data
ZH 调试数据 

// OPTIONS:825
EN Use debugging data
ZH 使用调试数据 

// OPTIONS:826
EN Allow DBGHELP.DLL
ZH 允许dbghelp.dll 

// OPTIONS:828
EN Use dbghelp.dll for stack walk
ZH 使用dbghelp.dll进行堆栈步行 

// OPTIONS:829
EN Use DBGHELP.StackWalk64() to walk CPU stack
ZH 使用dbghelp.stackwalk64 () 走路CPU堆栈 

// OPTIONS:831
EN Directories containing debugging data (.pdb,.dbg...).
ZH 包含调试数据的目录 (.pdb,.dbg ...) . 

// OPTIONS:834
EN Dbghelp.dll will also recurse into subdirectories:
ZH dbghelp.dll也将重复进行子目录： 

// OPTIONS:838
EN Directory containing debugging data (.pdb,.dbg...)
ZH 包含调试数据的目录 (.pdb,.dbg ...)  

// OPTIONS:841
EN Select directory where debugging data is kept
ZH 选择保留调试数据的目录 

// OPTIONS:855
EN Allow access to Microsoft Symbol Server
ZH 允许访问Microsoft符号服务器 

// OPTIONS:857
EN Download debugging data for system DLLs from Internet (http://msdl.microsoft.com/download/symbols)
ZH 从Internet (http://msdl.microsoft.com/download/symbols) 下载系统DLL的调试数据 

// OPTIONS:859
EN Don't list missing source files
ZH 不要列出缺少的源文件 

// OPTIONS:860
EN For example, those used to build system libraries
ZH 例如,那些用于构建系统库的人 

// OPTIONS:862
EN Don't list internal compiler labels
ZH 不要列出内部编译器标签 

// OPTIONS:863
EN Constant strings, floating constants, imports etc.
ZH Constant strings, floating constants, imports 等 

// OPTIONS:865
EN Skip leading spaces from source lines in comments
ZH 在注释中跳过 source lines 中的 leading spaces  

// OPTIONS:866
EN Only affects Disassembler comments
ZH 仅影响反汇编器注释

// OPTIONS:870
EN WARNING: Microsoft Symbol Server sends and receives data over the Internet!\nModifications made on this page will take full effect only after restart.
ZH 警告：Microsoft符号服务器通过Internet发送和接收数据！\nmoxifications在此页面上进行的nmoxifications只有在重新启动后才能完全效果. 

// OPTIONS:882
EN Start
ZH 开始 

// OPTIONS:891
EN When starting application, make first pause at:
ZH 启动应用时,请首先停止： 

// OPTIONS:895
EN Make first pause when OS executes DbgBreakPoint()
ZH 当OS执行DBGBRAKEBPOINT () 时,请首次暂停 

// OPTIONS:897
EN TLS callback (if defined)
ZH TLS回调 (如果定义)  

// OPTIONS:899
EN Make first pause at TLS callback, or at entry point of main module if callbacks are absent
ZH 在TLS回调或主模块的入口点进行首次暂停,如果没有回调 

// OPTIONS:902
EN Make first pause at entry point of main module
ZH 在主模块的入口点首次暂停 

// OPTIONS:904
EN WinMain (if location is known)
ZH Winmain (如果已知位置)  

// OPTIONS:906
EN Make first pause at WinMain, or at entry point of main module if WinMain is unknown
ZH 如果未知 

// OPTIONS:908
EN No pause
ZH 没有停顿 

// OPTIONS:909
EN Make no pause, immediately run application
ZH 不停顿,立即运行应用程序 

// OPTIONS:911
EN When attaching to application, make first pause at:
ZH 连接到应用程序时,首先停止： 

// OPTIONS:916
EN When attaching, pause application on system breakpoint in the temporary thread
ZH 附加时,请在临时线程中的系统断点上暂停应用 

// OPTIONS:918
EN Application code
ZH 应用程序代码 

// OPTIONS:919
EN When attaching, pause on application code
ZH 附加时,请暂停应用程序代码 

// OPTIONS:922
EN When attaching, run application without pause
ZH 连接时,不停地运行应用程序 

// OPTIONS:924
EN When loading DLL, make first pause at:
ZH 加载DLL时,请首先暂停： 

// OPTIONS:929
EN When loading DLL, pause application on the entry point of DLL loader
ZH 加载DLL时,请在DLL加载器的入口点上暂停应用程序 

// OPTIONS:931
EN DLL entry point (if defined)
ZH DLL入口点 (如果定义)  

// OPTIONS:933
EN When loading DLL, pause application on the DLL entry point (also known as DllMain() or DllEntryPoint())
ZH 加载DLL时,请在DLL入口点上暂停应用程序 (也称为dllmain () 或dllentrypoint () )  

// OPTIONS:935
EN After call to LoadLibrary()
ZH 调用loadLibrary ()  

// OPTIONS:937
EN When loading DLL, pause after return from call to LoadLibrary() in LOADDLL.EXE
ZH 加载DLL时,从loaddll.exe中的loadLibrary () 返回后暂停 

// OPTIONS:940
EN When loading DLL, run LOADDLL.EXE without pause
ZH 加载dll时,请在不暂停的情况下运行loaddll.exe 

// OPTIONS:952
EN Events
ZH 事件 

// OPTIONS:955
EN Debugging events
ZH 调试事件 

// OPTIONS:961
EN Warn on frequent events
ZH 警告经常事件 

// OPTIONS:962
EN Flash warning if debugging events are frequent
ZH 闪光警告如果调试事件频繁 

// OPTIONS:964
EN Pause on new module (DLL)
ZH 在新模块 (DLL) 上暂停 

// OPTIONS:966
EN When new DLL loads, pause on entry point (if available)
ZH 当新的DLL加载时,请在入口点上暂停 (如果可用)  

// OPTIONS:968
EN Pause on module (DLL) unloading
ZH 暂停模块 (DLL) 卸载 

// OPTIONS:969
EN Pause when DLL is removed from the memory
ZH 当从内存中删除DLL时暂停 

// OPTIONS:971
EN Only on the following modules:
ZH 仅在以下模块上： 

// OPTIONS:972
EN Pause only on listed new/unloading modules
ZH 仅在列出的新/卸载模块上暂停 

// OPTIONS:975
EN Full path, file.ext, file or internal module name
ZH 完整路径,file.ext,文件或内部模块名称 

// OPTIONS:977
EN Add
ZH 添加 

// OPTIONS:978
EN Add module to the list
ZH 将模块添加到列表 

// OPTIONS:980
EN Remove
ZH 消除 

// OPTIONS:981
EN Remove selected module from the list
ZH 从列表中删除选定的模块 

// OPTIONS:983
EN Pause on new thread
ZH 在新线程上暂停 

// OPTIONS:984
EN When new thread starts, pause on its entry point
ZH 当新线程启动时,在其入口点上暂停 

// OPTIONS:986
EN Pause on thread end
ZH 暂停线程端 

// OPTIONS:987
EN Pause when thread terminates
ZH 线程终止时暂停 

// OPTIONS:989
EN Pause on debug string
ZH 在调试字符串上暂停 

// OPTIONS:990
EN Pause when application emits debug string
ZH 当应用程序发出调试字符串时暂停 

// OPTIONS:992
EN Debug child processes
ZH 调试儿童流程 

// OPTIONS:994
EN Start new OllyDbg instance for processes spawned by Debuggee
ZH 启动新的OLLYDBG实例,以用于Debuggee产生的进程 

// OPTIONS:998
EN WARNING: debugging of child processes is possible only when Debuggee was created by OllyDbg and only if option 'Debug child processes' was active.
ZH 警告：只有在Ollydbg创建Debuggee时才进行调试,并且只有在选项“调试儿童进程”活跃时才进行调试. 

// OPTIONS:1010
EN Exceptions
ZH 例外 

// OPTIONS:1013
EN Ignored exceptions
ZH 忽略了异常 

// OPTIONS:1019
EN Ignore memory access violations in KERNEL32
ZH 忽略kernel32中的内存访问违规行为 

// OPTIONS:1020
EN May occur in KERNEL32.IsBadReadPtr() and similar APIs
ZH 可能发生在kernel32.isbadreadptr () 和类似的API中 

// OPTIONS:1022
EN Step over INT3 breaks in MSCORWKS
ZH 在MSCORWKS中跨越INT3断裂 

// OPTIONS:1023
EN In this way .NET engine alerts Debugger to events
ZH 通过这种方式,.NET引擎警报调试器到事件 

// OPTIONS:1025
EN Ignore (pass to debugged program) following exceptions:
ZH 忽略 (通过调试程序) 以下例外： 

// OPTIONS:1028
EN INT3 breaks
ZH int3断裂 

// OPTIONS:1029
EN Let program process breaks on INT3 set by program
ZH 让程序流程破坏程序设置的INT3 

// OPTIONS:1031
EN Single-step breaks
ZH 单步断裂 

// OPTIONS:1032
EN Let program process breaks on TRAP bit set by program
ZH 让程序流程破坏按程序设置的陷阱位 

// OPTIONS:1034
EN Memory access violations
ZH 内存访问违规 

// OPTIONS:1035
EN Let program process breaks on invalid memory access
ZH 让程序进程中断无效的内存访问 

// OPTIONS:1037
EN Integer division by 0
ZH 整数部门0 

// OPTIONS:1038
EN Let program process breaks on integer division by zero
ZH 让程序流程划分为零 

// OPTIONS:1040
EN Invalid or privileged instructions
ZH 无效或特权说明 

// OPTIONS:1041
EN Let program process breaks on invalid instruction
ZH 让程序流程在无效的指令上破裂 

// OPTIONS:1043
EN All FPU exceptions
ZH 所有FPU例外 

// OPTIONS:1044
EN Let program process breaks on all FPU exceptions
ZH 让程序流程破坏所有FPU例外 

// OPTIONS:1046
EN All service exceptions
ZH 所有服务例外 

// OPTIONS:1047
EN Process exceptions (mis)used by OS
ZH OS使用的进程异常 (MIS)  

// OPTIONS:1049
EN Ignore also the following custom exceptions or ranges:
ZH 还忽略以下自定义异常或范围： 

// OPTIONS:1050
EN Activate list of custom exceptions
ZH 激活自定义列表 

// OPTIONS:1053
EN List of custom exceptions to be passed to debuggee
ZH 将传递给Debuggee的自定义例外列表 

// OPTIONS:1055
EN Add current
ZH 添加电流 

// OPTIONS:1056
EN Add exception that paused the debugged application
ZH 添加例外,暂停了调试应用程序 

// OPTIONS:1059
EN Add range of exceptions
ZH 添加异常范围 

// OPTIONS:1062
EN Remove selected exception or range from the list
ZH 从列表中删除选定的异常或范围 

// OPTIONS:1065
EN Pass unprocessed exceptions to Unhandled Exception Filter
ZH 将未加工的例外传递给未经处理的异常过滤器 

// OPTIONS:1066
EN Note: program may terminate if custom filter is not installed!
ZH 注意：如果未安装自定义过滤器,程序可能会终止！ 

// OPTIONS:1068
EN Report ignored exceptions to log
ZH 报告忽略了日志的例外 

// OPTIONS:1069
EN Report ignored (passed to debuggee) exceptions to log
ZH 报告忽略 (传递给debuggee) 例外 

// OPTIONS:1090
EN Size of run trace buffer
ZH 运行跟踪缓冲区的尺寸 

// OPTIONS:1093
EN 1 M|2 M|4 M|8 M|16 M|32 M|64 M|128 M|256 M
ZH 1 C|2 C|4 C|8 C|16 C|32 C|64 C|128 C|256 C

// OPTIONS:1094
EN Approximate size of run trace buffer, bytes
ZH 运行跟踪缓冲区的大约大小,字节 

// OPTIONS:1098
EN Trace all threads
ZH 追踪所有线程 

// OPTIONS:1100
EN If multithread application, switch between threads every 50 ms when tracing
ZH 如果多线程应用程序,请在跟踪时每50毫秒之间每次切换一次线程 

// OPTIONS:1104
EN When tracing or animating into:
ZH 追踪或动画介绍： 

// OPTIONS:1107
EN Don't enter system DLLs
ZH 不要输入系统dll 

// OPTIONS:1108
EN In automatic mode, always trace over API calls
ZH 在自动模式下,始终跟踪API调用 

// OPTIONS:1110
EN Always trace over string commands
ZH 始终跟踪字符串命令 

// OPTIONS:1111
EN In automatic mode, execute string commands at once
ZH 在自动模式下,立即执行字符串命令 

// OPTIONS:1113
EN Remember commands
ZH 记住命令 

// OPTIONS:1114
EN Facilitates debugging of self-modifiable code
ZH 促进调试自我调制代码 

// OPTIONS:1116
EN Remember memory
ZH 记住记忆 

// OPTIONS:1117
EN Save accessed memory to run trace
ZH 保存访问的内存以运行跟踪 

// OPTIONS:1119
EN Remember FPU registers
ZH 记住fpu寄存器 

// OPTIONS:1120
EN Save FPU registers to run trace
ZH 保存FPU寄存器以运行跟踪 

// OPTIONS:1122
EN Synchronize CPU and run trace
ZH 同步CPU并运行跟踪 

// OPTIONS:1123
EN Synchronize CPU display and run trace selection
ZH 同步CPU显示并运行跟踪选择 

// OPTIONS:1125
EN Animation delay
ZH 动画延迟 

// OPTIONS:1128
EN 0 ms|20 ms|50 ms|100 ms|200 ms|500 ms|1000 ms
ZH 0 ch|20 ch|50 ch|100 ch|200 ch|500 ch|1000 ch

// OPTIONS:1130
EN Duration of step in 'Animate into' and 'Animate over' modi
ZH “动画进入”和“动画”莫迪的步骤持续时间 

// OPTIONS:1133
EN WARNING: some run trace options will take effect only after clearing the trace buffer.
ZH 警告：只有在清除跟踪缓冲区后,某些运行跟踪选项才会生效. 

// OPTIONS:1154
EN When starting hit test:
ZH 开始命中测试时： 

// OPTIONS:1157
EN Set breakpoints on known callbacks
ZH 在已知回调上设置断点 

// OPTIONS:1158
EN According to the system DLL entering mode
ZH 根据系统DLL输入模式 

// OPTIONS:1160
EN When indirect or table-based jump or call is hit:
ZH 当命中间接或基于桌子的跳跃或调用时： 

// OPTIONS:1163
EN Check destination each time
ZH 每次检查目的地 

// OPTIONS:1164
EN Keep trace breakpoint set (slow but reliable method)
ZH 保持跟踪断点集 (缓慢但可靠的方法)  

// OPTIONS:1166
EN Use analysis data to guess destinations
ZH 使用分析数据猜测目的地 

// OPTIONS:1168
EN Use destinations found by Analyzer (fast but may be unreliable)
ZH 使用分析仪找到的目的地 (快速但可能不可靠)  

// OPTIONS:1170
EN When next destination is analysed as data:
ZH 当将下一个目的地分析为数据时： 

// OPTIONS:1173
EN Continue hit trace
ZH 继续命中痕迹 

// OPTIONS:1174
EN Ignore analysis and continue hit trace in standard way
ZH 忽略分析并以标准方式继续命中痕迹 

// OPTIONS:1176
EN Pause hit trace
ZH 暂停命中痕迹 

// OPTIONS:1177
EN Pause hit trace if next destination is data
ZH 暂停点击跟踪如果下一个目的地是数据 

// OPTIONS:1179
EN When next destination is outside the code section:
ZH 当下一个目的地在代码部分之外： 

// OPTIONS:1183
EN Continue hit trace outside the code in a standard way
ZH 继续以标准方式在代码外击中跟踪 

// OPTIONS:1186
EN Pause hit trace if command is outside the code section
ZH 暂停点击跟踪如果命令在代码部分之外 

// OPTIONS:1188
EN Trace code command by command
ZH 跟踪代码命令命令 

// OPTIONS:1189
EN Run trace commands outside the code section
ZH 在代码部分之外运行跟踪命令 

// OPTIONS:1191
EN Keep hit trace between sessions
ZH 在会话之间保持点击跟踪 

// OPTIONS:1192
EN Dangerous if code is self-modifiable
ZH 危险如果代码是自修改的 

// OPTIONS:1195
EN WARNING: keeping hit trace between sessions may lead to crash if debugged application is self-modifiable.
ZH 警告：如果调试应用程序可自修改,则在会话之间保持命中率可能会导致崩溃. 

// OPTIONS:1208
EN SFX
ZH SFX 

// OPTIONS:1211
EN Self-extractable modules
ZH 可自提取的模块 

// OPTIONS:1217
EN Unpack SFX modules automatically
ZH 自动解开SFX模块 

// OPTIONS:1218
EN When module is recognized as SFX, unpack it automatically
ZH 当模块被识别为SFX时,自动解开它 

// OPTIONS:1220
EN Use hit trace (fast!)
ZH 使用命中痕迹 (快速！)  

// OPTIONS:1221
EN Much faster but can be easily fooled
ZH 快得多,但很容易被愚弄 

// OPTIONS:1223
EN Use run trace (reliable)
ZH 使用运行跟踪 (可靠)  

// OPTIONS:1224
EN Slow but more reliable than hit trace
ZH 缓慢但比命中痕迹更可靠 

// OPTIONS:1226
EN Use real entry from previous run
ZH 使用以前的运行中的真实条目 

// OPTIONS:1227
EN Accelerate SFX extraction if real entry point is already known
ZH 如果已经知道真实的入口点,请加速SFX提取 

// OPTIONS:1229
EN Pass exceptions to SFX extractor
ZH 将异常传递给SFX提取器 

// OPTIONS:1230
EN Ignore (pass to extractor) all exceptions during extraction
ZH 提取进程中忽略 (传递给提取器) 所有例外 

// OPTIONS:1242
EN Just-in-time
ZH 恰到好处 

// OPTIONS:1245
EN Just-in-time debugging
ZH 即时调试 

// OPTIONS:1251
EN Current just-in-time debugger:
ZH 当前的即时调试器： 

// OPTIONS:1255
EN Name of current just-in-time debugger
ZH 当前即时调试器的名称 

// OPTIONS:1257
EN Set OllyDbg
ZH 设置Ollydbg 

// OPTIONS:1258
EN Press to set OllyDbg as active just-in-time debugger
ZH 按以将OLLYDBG设置为主动的即时调试器 

// OPTIONS:1260
EN Previous just-in-time debugger:
ZH 以前的即时调试器： 

// OPTIONS:1264
EN Name of previous just-in-time debugger
ZH 以前的即时调试器的名称 

// OPTIONS:1266
EN Restore
ZH 恢复 

// OPTIONS:1267
EN Press to restore previous just-in-time debugger
ZH 按恢复以前的即时调试器 

// OPTIONS:1269
EN Confirm before attaching
ZH 附加之前确认 

// OPTIONS:1270
EN Whether OS should ask before calling JIT debugger
ZH OS是否在调用JIT调试器之前问 

// OPTIONS:1285
EN Analysis options
ZH 分析选项 

// OPTIONS:1291
EN Recognition of procedures:
ZH 识别程序： 

// OPTIONS:1294
EN Strict
ZH 严格的 

// OPTIONS:1295
EN Allow only sure procedures to be recognized as such
ZH 仅允许确定的程序被识别 

// OPTIONS:1297
EN Fuzzy
ZH 模糊 

// OPTIONS:1298
EN Recognize any linked piece of code as procedure
ZH 识别任何链接的代码作为进程 

// OPTIONS:1300
EN Automatical module analysis:
ZH 自动模块分析： 

// OPTIONS:1303
EN Off
ZH 离开 

// OPTIONS:1304
EN No automatical analysis
ZH 没有自动分析 

// OPTIONS:1306
EN Main module
ZH 主模块 

// OPTIONS:1307
EN Only main module is analysed automatically
ZH 仅自动分析主要模块 

// OPTIONS:1309
EN Non-system modules
ZH 非系统模块 

// OPTIONS:1311
EN All modules outside the system directory will be analysed
ZH 系统目录之外的所有模块将进行分析 

// OPTIONS:1313
EN All modules
ZH 所有模块 

// OPTIONS:1314
EN Analyse all modules as they are loaded
ZH 分析所有模块加载时 

// OPTIONS:1316
EN Show predicted register values
ZH 显示预测的寄存器值 

// OPTIONS:1317
EN Show contents of registers predicted by Analyser
ZH 显示分析仪预测的寄存器的内容 

// OPTIONS:1319
EN Don't predict register contents for system DLLs
ZH 不要预测系统DLL的寄存器内容 

// OPTIONS:1321
EN Spares memory, but no ARGs, LOCALs and unreliable stack walk
ZH 节省记忆的记忆,但没有ARG,当地人和不可靠的堆栈步行 

// OPTIONS:1323
EN Show recognized ARGs and LOCALs in disassembly
ZH 展示公认的ARG和当地人反汇编 

// OPTIONS:1325
EN Display arguments and local variables in disassembled code
ZH 在分解的代码中显示参数和本地变量 

// OPTIONS:1327
EN Show recognized ARGs and LOCALs in comments
ZH 在注释中显示公认的ARG和当地人 

// OPTIONS:1328
EN Display arguments and local variables in comments
ZH 在注释中显示参数和本地变量 

// OPTIONS:1330
EN Use symbolic names for ARGs, if known
ZH 如果已知,请使用符号名称 

// OPTIONS:1331
EN Like ARG.hCurrInstance instead of ARG.1 in WinMain
ZH 像arg.hcurrinstance而不是arg.1在winmain中 

// OPTIONS:1343
EN Advanced
ZH 先进的 

// OPTIONS:1346
EN Advanced analysis
ZH 高级分析 

// OPTIONS:1352
EN Decode tricky code sequences
ZH 解码棘手的代码序列 

// OPTIONS:1353
EN Decode tricky (mostly hand-written) code sequences
ZH 解码棘手 (主要是手写) 代码序列 

// OPTIONS:1355
EN Decode cascaded IFs as switches
ZH 解码级联IFS作为开关 

// OPTIONS:1357
EN Treat 'IF i==1 ... ELSEIF i==2 ... ELSE ...' as a switch
ZH 治疗'如果i == 1 ... elseif i == 2 ... else ...'作为开关 

// OPTIONS:1359
EN Allow arguments renaming for known functions
ZH 允许重命名已知函数的论点 

// OPTIONS:1361
EN Rename arguments which meaning depends on other argument
ZH 重命名的参数含义取决于其他参数 

// OPTIONS:1363
EN Guess number of arguments of unknown functions
ZH 猜测未知函数的参数数量 

// OPTIONS:1364
EN Guess number of argument directly from machine code
ZH 直接猜测机器代码的参数数量 

// OPTIONS:1366
EN Extract arguments from mangled names
ZH 提取从修补名称中的论点 

// OPTIONS:1368
EN Use information hidden in mangled names to guess arguments
ZH 使用隐藏在被打磨的名称中的信息猜测参数 

// OPTIONS:1370
EN Guess meaning of unknown arguments
ZH 猜测未知论点的含义 

// OPTIONS:1372
EN Try to recognize format strings, windows functions etc.
ZH 尝试识别格式字符串,Windows函数等 

// OPTIONS:1374
EN Show arguments even if their number varies
ZH 显示论点即使数字有所不同 

// OPTIONS:1376
EN I.e. number of recognized arguments in different calls is different
ZH IE. 不同调用中的公认参数数量不同 

// OPTIONS:1378
EN Detect standard library functions (*.udl)
ZH 检测标准库函数 (*.udl)  

// OPTIONS:1380
EN Prepare .udl files via main menu, Debug -> Create function library
ZH 通过主菜单准备.UDL文件,调试 - >创建函数库 

// OPTIONS:1382
EN Comment constant operands of known functions:
ZH 注释已知函数的常量操作数： 

// OPTIONS:1385
EN All known
ZH 都是已知的 

// OPTIONS:1386
EN Comment all known constant operands
ZH 注释所有已知的常量操作数 

// OPTIONS:1388
EN Only those marked as important
ZH 只有标记很重要的人 

// OPTIONS:1389
EN Comment only operands marked as important
ZH 注释仅标记为重要的操作数 

// OPTIONS:1391
EN Unknown functions preserve registers:
ZH 未知函数保留寄存器册： 

// OPTIONS:1394
EN None
ZH 没有任何 

// OPTIONS:1395
EN Unknown functions may modify any register
ZH 未知函数可能会修改任何寄存器 

// OPTIONS:1397
EN EBP
ZH EBP 

// OPTIONS:1398
EN Unknown functions preserve EBP (frame pointer)
ZH 未知函数保留EBP (帧指针)  

// OPTIONS:1400
EN EBX, EBP, ESI and EDI
ZH EBX,EBP,如何 

// OPTIONS:1401
EN Unknown functions follow stdcall convention
ZH 未知函数遵循stdcall惯例 

// OPTIONS:1403
EN Ignore braces in .udd path
ZH 忽略.udd路径中的牙套 

// OPTIONS:1405
EN Ignore parts of path enclosed into braces when opening .udd file
ZH 打开.udd文件时,忽略路径的一部分 

// OPTIONS:1417
EN Invalid commands
ZH 无效命令 

// OPTIONS:1426
EN Accept following potentially invalid commands:
ZH 接受以下潜在无效命令： 

// OPTIONS:1429
EN Far calls and returns
ZH 遥远的调用和返回 

// OPTIONS:1431
EN Far calls and returns are unnecessary in flat Win32 model
ZH Flat Win32型号中不需要遥远的调用和回报 

// OPTIONS:1433
EN Modifications of segment registers
ZH 细分寄存器的修改 

// OPTIONS:1434
EN Segment registers are fixed in flat Win32 model
ZH 细分寄存器固定在Flat Win32型号中 

// OPTIONS:1436
EN Privileged commands
ZH 特权命令 

// OPTIONS:1437
EN Privileged commands are not allowed in user mode
ZH 在用户模式下不允许特权命令 

// OPTIONS:1439
EN I/O commands
ZH i/o命令 

// OPTIONS:1440
EN Direct access to hardware under Windows is deprecated
ZH 不推荐使用Windows下的硬件 

// OPTIONS:1442
EN Commands equivalent to NOP
ZH 命令等于NOP 

// OPTIONS:1443
EN Optimizing compilers do not emit executable NOPs
ZH 优化编译器不会发出可执行的NOP 

// OPTIONS:1445
EN Shifts out of range 1..31
ZH 移出范围1..31 

// OPTIONS:1447
EN Shift count out of the main range is allowed but unusual
ZH 允许换档超出主范围,但不寻常 

// OPTIONS:1449
EN Superfluous prefixes
ZH 多余的前缀 

// OPTIONS:1450
EN Compilers never emit unnecessary prefixes
ZH 编译器永远不会发出不必要的前缀 

// OPTIONS:1452
EN LOCK prefixes
ZH 锁定前缀 

// OPTIONS:1453
EN LOCK is used mainly in system routines
ZH 锁主要用于系统例程 

// OPTIONS:1455
EN Default selectors
ZH 默认选择器 

// OPTIONS:1457
EN Explicitly used default selectors slow down the execution
ZH 显式使用的默认选择器降低了执行 

// OPTIONS:1459
EN Unaligned stack operations
ZH 未对齐的堆栈操作 

// OPTIONS:1460
EN Win32 programs usually keep stack doubleword-aligned
ZH WIN32程序通常保持堆栈双词对准 

// OPTIONS:1462
EN Suspicious ESP modifications
ZH 可疑的ESP修改 

// OPTIONS:1463
EN Invalid ESP may lead to crash
ZH 无效的ESP可能导致崩溃 

// OPTIONS:1465
EN Undocumented commands
ZH 无证命令 

// OPTIONS:1466
EN Sane compilers never use undocumented commands
ZH 理智编译器永远不会使用无证件命令 

// OPTIONS:1468
EN Access to nonexisting memory
ZH 访问不存在的内存 

// OPTIONS:1469
EN Access to nonexisting memory will throw exception
ZH 访问不存在的内存将抛出异常 

// OPTIONS:1471
EN Interrupt commands
ZH 中断命令 

// OPTIONS:1472
EN INT commands in user mode are seldom
ZH 用户模式下的int命令很少 

// OPTIONS:1487
EN Search options
ZH 搜索选项 

// OPTIONS:1493
EN Use predictions in search
ZH 在搜索中使用预测 

// OPTIONS:1495
EN Use predicted contents of registers in search operations
ZH 在搜索操作中使用寄存器的预测内容 

// OPTIONS:1497
EN Include indirect call/jump destinations in references
ZH 在参考中包括间接调用/跳跃目的地 

// OPTIONS:1499
EN For example, call to jump to import will be listed as a reference to the import
ZH 例如,调用跳到导入将被列为对导入的引用 

// OPTIONS:1501
EN Add origin to the list of found commands
ZH 将原点添加到找到命令的列表中 

// OPTIONS:1503
EN Add it, even if command doesn't meet the search criterium
ZH 加上它,即使命令不符合搜索标准 

// OPTIONS:1505
EN Preferable language of resource data:
ZH 资源数据的优选语言： 

// OPTIONS:1510
EN If resource exists in several languages, show this language first
ZH 如果资源以几种语言存在,请首先显示此语言 

// OPTIONS:1525
EN CPU window options
ZH CPU窗口选项 

// OPTIONS:1531
EN Gray inactive panes
ZH 灰色无效窗格 

// OPTIONS:1532
EN Gray text in CPU panes without focus
ZH CPU窗格中的灰色文字无重点 

// OPTIONS:1534
EN Gray register names
ZH 灰色寄存器名称 

// OPTIONS:1535
EN Gray names of registers in the Registers pane
ZH 寄存器表中寄存器处的灰色名称 

// OPTIONS:1537
EN Show direction of jumps
ZH 展示跳跃的方向 

// OPTIONS:1538
EN Draw small arrows indicating direction of jump
ZH 画小箭头,指示跳跃的方向 

// OPTIONS:1540
EN Show jump path
ZH 显示跳跃路径 

// OPTIONS:1541
EN Draw arrows showing jumps to or from selected location
ZH 绘制箭头显示跳跃到选定位置的跳跃 

// OPTIONS:1543
EN Show grayed path if jump is not taken
ZH 如果不采取跳跃,则显示灰色路径 

// OPTIONS:1545
EN Draw arrow showing jump from selected location in gray if jump is not taken
ZH 绘制箭头显示从选定位置的灰色跳跃,如果没有跳跃 

// OPTIONS:1547
EN Enable SSE registers
ZH 启用SSE寄存器 

// OPTIONS:1549
EN Use and display SSE registers (if supported by CPU and OS)
ZH 使用和显示SSE寄存器 (如果由CPU和OS支持)  

// OPTIONS:1551
EN Decode contents of registers:
ZH 解码寄存器的内容： 

// OPTIONS:1554
EN Only for current EIP
ZH 仅对于当前EIP 

// OPTIONS:1556
EN Registers are volatile, use them only to decode currently executed command (pointed by EIP)
ZH 寄存器是波动的,仅使用它们来解码当前执行的命令 (EIP指向)  

// OPTIONS:1558
EN For EIP and selected command
ZH 对于EIP和选定命令 

// OPTIONS:1560
EN Although registers are volatile, use them as a hint to decode operands of the selected command
ZH 尽管寄存器是波动的,但将其用作解码选定命令操作数的提示 

// OPTIONS:1562
EN For any command
ZH 对于任何命令 

// OPTIONS:1564
EN Use current registers to decode all commands, not only pointed by EIP. Note that this may be highly misleading!
ZH 使用当前寄存器来解码所有命令,不仅由EIP指向. 请注意,这可能是高度误导的！ 

// OPTIONS:1566
EN Hide 'current registers' warning
ZH 隐藏“当前寄存器”警告 

// OPTIONS:1567
EN I am experienced, don't annoy me
ZH 我经验丰富,不要惹我 

// OPTIONS:1569
EN Automatic FPU/MMX/3DNow! registers:
ZH 自动FPU/MMX/3DNOW！ 寄存器： 

// OPTIONS:1573
EN Let user decide how to decode FPU registers
ZH 让用户决定如何解码FPU寄存器 

// OPTIONS:1575
EN On events
ZH 关于事件 

// OPTIONS:1577
EN Set mode according to command at EIP when execution pauses
ZH 暂停执行时根据eip的命令设置模式 

// OPTIONS:1581
EN Set mode depending on the command selected in Disassembler
ZH 设置模式取决于在反汇编器中选择的命令

// OPTIONS:1593
EN More CPU
ZH 更多CPU 

// OPTIONS:1596
EN More CPU window options
ZH 更多CPU窗口选项 

// OPTIONS:1602
EN When letter key is pressed in Disassembler:
ZH 当字母键按反汇编器按下时：

// OPTIONS:1605
EN Add label
ZH 添加标签 

// OPTIONS:1606
EN When letter key is pressed, add user-defined label
ZH 按下字母键,添加用户定义的标签 

// OPTIONS:1608
EN Assemble command
ZH 组装命令 

// OPTIONS:1609
EN When letter key is pressed, assemble command
ZH 按下字母键时,组装命令 

// OPTIONS:1611
EN Add comment
ZH 添加注释 

// OPTIONS:1612
EN When letter key is pressed, add user-defined comment
ZH 按下字母键,添加用户定义的注释 

// OPTIONS:1614
EN Repeat last action
ZH 重复最后动作 

// OPTIONS:1616
EN When letter key is pressed, repeat the most recent action
ZH 按下字母键,重复最近的动作 

// OPTIONS:1628
EN Directories
ZH 目录 

// OPTIONS:1637
EN Directory for .udd files:
ZH .UDD文件的目录： 

// OPTIONS:1641
EN Directory where .udd files are kept
ZH 目录保留了.udd文件 

// OPTIONS:1644
EN Select directory where user data files are kept
ZH 选择保留用户数据文件的目录 

// OPTIONS:1646
EN Directory for standard function libraries (.udl):
ZH 标准函数库的目录 (.UDL) ： 

// OPTIONS:1650
EN Directory where .udl files are kept
ZH 目录保留了.udl文件 

// OPTIONS:1654
EN Select directory where standard function libraries are kept
ZH 选择保留标准函数库的目录 

// OPTIONS:1656
EN Plugin directory:
ZH 插件目录： 

// OPTIONS:1660
EN Directory where plugins are kept
ZH 保留插件的目录 

// OPTIONS:1663
EN Select directory where plugins files are kept
ZH 选择保留插件文件的目录 

// OPTIONS:1665
EN Location of API help file (.hlp or .chm):
ZH API帮助文件的位置 (.hlp或.chm) ： 

// OPTIONS:1670
EN Location of file with help on Windows API (either in .hlp or .chm format)
ZH 在Windows API上使用帮助的文件位置 (在.hlp或.chm格式中)  

// OPTIONS:1673
EN Select file with help on Windows API
ZH 在Windows API上选择使用帮助的文件 

// OPTIONS:1685
EN Errors and warnings
ZH 错误和警告 

// OPTIONS:1694
EN Warn if not administrator
ZH 警告如果不是管理员 

// OPTIONS:1696
EN Some debugging operations require administrator rights
ZH 一些调试操作需要管理员权利 

// OPTIONS:1698
EN Restore all errors and warnings
ZH 恢复所有错误和警告 

// OPTIONS:1700
EN Re-enable all messages that were hidden on your request
ZH 重新启用您请求中隐藏的所有消息 

// OPTIONS:1702
EN Restore all actions
ZH 恢复所有动作 

// OPTIONS:1704
EN Re-enable all questions that were hidden on your request
ZH 重新启用所有根据您的要求隐藏的问题 

// OPTIONS:1706
EN WARNING: You can't undo errors, warnings and actions.
ZH 警告：您不能撤消错误,警告和行动. 

// OPTIONS:1719
EN Appearance
ZH 外貌 

// OPTIONS:1722
EN Appearance options
ZH 外观选项 

// OPTIONS:1728
EN Bring OllyDbg to top on pause
ZH 将Ollydbg暂停下来 

// OPTIONS:1729
EN When Debuggee pauses, bring OllyDbg window to top
ZH 当Debuggee暂停时,将Ollydbg窗口带到顶部 

// OPTIONS:1731
EN Keep between sessions:
ZH 保持会议之间： 

// OPTIONS:1734
EN Position and appearance of tables
ZH 桌子的位置和外观 

// OPTIONS:1735
EN Restore position and appearance of table windows
ZH 恢复桌窗的位置和外观 

// OPTIONS:1737
EN Width of columns
ZH 列的宽度 

// OPTIONS:1738
EN Restore width of columns in table windows
ZH 还原表窗口中的列的宽度 

// OPTIONS:1740
EN Sorting column
ZH 排序列 

// OPTIONS:1741
EN Restore sorting column in table windows
ZH 恢复表窗口中的排序列 

// OPTIONS:1743
EN Snow-free drawing (slow on very old systems)
ZH 无雪图 (在非常古老的系统上缓慢)  

// OPTIONS:1745
EN Activate if tables are snowy when scrolling or redrawing
ZH 在滚动或重新刷新时激活桌子 

// OPTIONS:1747
EN Highlight bar in sorted column
ZH 突出显示列中的栏 

// OPTIONS:1748
EN Highlight bar button in column used to sort table data
ZH 突出显示列中用于对表数据进行排序的栏按钮 

// OPTIONS:1750
EN UNICODE edit font
ZH Unicode编辑字体 

// OPTIONS:1754
EN Font used in UNICODE edit controls
ZH Unicode编辑控件中使用的字体 

// OPTIONS:1756
EN Duration of flash
ZH 闪光的持续时间 

// OPTIONS:1759
EN 0.5 s|0.75 s|1 s|1.25 s|1.5 s|1.75 s|2 s|2.25 s|2.5 s
ZH 0.5 c|0.75 c|1 c|1.25 c|1.5 c|1.75 c|2 c|2.25 c|2.5 c

// OPTIONS:1760
EN Duration of flash in the status bar of main window
ZH 主窗口状态栏中的闪光持续时间 

// OPTIONS:1763
EN Test duration of flash warning
ZH 测试闪光警告时间 

// OPTIONS:1765
EN Autoupdate interval
ZH 自动间隔 

// OPTIONS:1768
EN 50 ms|100 ms|200 ms|500 ms|1 s|2 s|5 s|10 s
ZH 50 ch|100 ch|200 ch|500 ch|1 c|2 c|5 c|10 c

// OPTIONS:1769
EN Refresh interval for automatically updated windows
ZH 自动更新Windows的刷新间隔 

// OPTIONS:1771
EN Visible lines
ZH 可见线 

// OPTIONS:1774
EN 0|1|2|3|4|5
ZH 0|1|2|3|4|5

// OPTIONS:1775
EN Number of visible lines before and after cursor in Disassembler when scrolling by keyboard
ZH 通过键盘滚动时,光标前后的可见线数量 

// OPTIONS:1787
EN Defaults
ZH 默认 

// OPTIONS:1790
EN Default settings
ZH 默认设置 

// OPTIONS:1796
EN Default font
ZH 默认字体 

// OPTIONS:1800
EN Default font for new OllyDbg windows
ZH 新的OllydBG窗口的默认字体 

// OPTIONS:1802
EN Default colour scheme
ZH 默认配色方案 

// OPTIONS:1806
EN Default colour scheme for new OllyDbg windows
ZH 新的OllydBG窗口的默认配色方案 

// OPTIONS:1808
EN Horizontal scroll by default
ZH 默认情况下水平滚动 

// OPTIONS:1809
EN Show horizontal scroll in new OllyDbg windows
ZH 在新的ollydbg窗口中显示水平滚动 

// OPTIONS:1813
EN WARNING: Default settings apply only to the newly created windows, and only if their appearance is not restored from the initialization file.
ZH 警告：默认设置仅适用于新创建的Windows,并且仅当其外观未从初始化文件恢复时. 

// OPTIONS:1825
EN Startup
ZH 启动 

// OPTIONS:1828
EN Startup options
ZH 启动选项 

// OPTIONS:1834
EN Use system colours
ZH 使用系统颜色 

// OPTIONS:1835
EN Influences main window, toolbar and table bars
ZH 影响主窗口,工具栏和桌子栏 

// OPTIONS:1837
EN Layout of main window:
ZH 主窗口的布局： 

// OPTIONS:1840
EN Non-scrollable MDI
ZH 不可滚动的MDI 

// OPTIONS:1841
EN Data windows are placed inside the fixed main window
ZH 数据窗口放置在固定主窗口内 

// OPTIONS:1843
EN Scrollable MDI
ZH 可滚动的MDI 

// OPTIONS:1845
EN Data windows are placed inside the scrollable main window
ZH 数据窗口放在可滚动的主窗口内 

// OPTIONS:1847
EN Independent windows
ZH 独立的窗口 

// OPTIONS:1848
EN Data windows are placed directly on the desktop
ZH 数据窗口直接放在桌面上 

// OPTIONS:1850
EN Toolbar:
ZH 工具栏： 

// OPTIONS:1854
EN Do not show toolbar at all
ZH 根本不显示工具栏 

// OPTIONS:1856
EN Horizontal
ZH 水平的 

// OPTIONS:1857
EN Show toolbar on the top of the main window
ZH 在主窗口顶部显示工具栏 

// OPTIONS:1859
EN Vertical
ZH 垂直的 

// OPTIONS:1860
EN Show toolbar on the left side of the main window
ZH 在主窗口的左侧显示工具栏 

// OPTIONS:1862
EN Display run status of the application in the:
ZH 显示应用程序的运行状态： 

// OPTIONS:1865
EN Info bar
ZH 信息栏 

// OPTIONS:1866
EN Display status in the status bar (bottom right corner)
ZH 在状态栏中显示状态 (右下角)  

// OPTIONS:1868
EN Horizontal toolbar
ZH 水平工具栏 

// OPTIONS:1869
EN Display status in the toolbar (top left corner)
ZH 在工具栏中显示状态 (左上角)  

// OPTIONS:1871
EN Size of log buffer
ZH 日志缓冲区的大小 

// OPTIONS:1874
EN 64 k|128 k|256 k|512 k|1 M|2 M|4 M|8 M|16 M
ZH 64 c|128 c|256 c|512 c|1 C|2 C|4 C|8 C|16 C

// OPTIONS:1875
EN Size of message buffer in the Log window
ZH 日志窗口中消息缓冲区的大小 

// OPTIONS:1877
EN Scan registry for GUIDs
ZH 扫描GUIDS 

// OPTIONS:1879
EN Adds registered GUIDs to the list of known GUIDs. If activated, makes startup significantly slower!
ZH 将寄存器的GUID添加到已知GUID列表中. 如果被激活,使启动速度明显慢！ 

// OPTIONS:1882
EN WARNING: modifications made on this page will take effect only after restart.
ZH 警告：此页面上的修改只有在重新启动后才生效. 

// OPTIONS:1894
EN Fonts
ZH 字体 

// OPTIONS:1903
EN Font:
ZH 字体： 

// OPTIONS:1907
EN Font selected for edit
ZH 选择用于编辑的字体 

// OPTIONS:1909
EN Rename
ZH 改名 

// OPTIONS:1910
EN Press to rename actually selected font
ZH 按下重命名实际选择字体 

// OPTIONS:1912
EN Change
ZH 改变 

// OPTIONS:1913
EN Press to edit font properties
ZH 按以编辑字体属性 

// OPTIONS:1916
EN Information about currently selected font
ZH 有关当前选择字体的信息 

// OPTIONS:1918
EN Height adjust: top
ZH 高度调整：顶部 

// OPTIONS:1922
EN -5 pixels|-4 pixels|-3 pixels|-2 pixels|-1 pixel|None|+1 pixel|+2 pixels|+3 pixels|+4 pixels|+5 pixels
ZH -5像素| -4像素| -3像素| -2像素| -1像素|无| +1像素| +2像素| +3像素| +4像素| +5像素| +5像素 

// OPTIONS:1924
EN Adjusts space on the top of the lines in the table
ZH 调整桌子顶部的空间 

// OPTIONS:1926
EN , bottom
ZH , 底部 

// OPTIONS:1932
EN Adjusts space on the bottom of the lines in the table
ZH 调整桌子底部的空间 

// OPTIONS:1934
EN Example:
ZH 例子： 

// OPTIONS:1938
EN Sample colouring
ZH 样品着色 

// OPTIONS:1941
EN Restore default font
ZH 还原默认字体 

// OPTIONS:1953
EN Colours
ZH 颜色 

// OPTIONS:1962
EN Scheme:
ZH 方案： 

// OPTIONS:1966
EN Colour scheme selected for edit
ZH 选择编辑的配色方案 

// OPTIONS:1969
EN Press to rename actually selected colour scheme
ZH 按下重命名实际选择的配色方案 

// OPTIONS:1971
EN Elements of selected scheme:
ZH 选定方案的元素： 

// OPTIONS:1977
EN Normal text|Highlighted text|Grayed text|Current EIP|Unconditional breakpoint|Conditional breakpoint|Disabled breakpoint|Breakpoint at EIP|Auxiliary elements|Underline & select
ZH 普通文本|突出显示的文本|灰色文本|当前EIP |无条件断点|条件断点|禁用断点| EIP处的断点|辅助元素|下划线并选择 

// OPTIONS:1978
EN Select element of colour scheme to edit
ZH 选择要编辑的配色方案元素 

// OPTIONS:1988
EN Left click selects text colour, right - background. To edit custom colour, doubleclick it.
ZH 左键单击选择文本颜色,右 - 背景. 要编辑自定义颜色,请双击它. 

// OPTIONS:1991
EN Restore colours default for selected scheme
ZH 还原颜色默认为选定方案 

// OPTIONS:2003
EN Code highlighting
ZH 代码突出显示 

// OPTIONS:2016
EN Code highlighting scheme selected for edit

// OPTIONS:2019
EN Press to rename actually selected highlighting scheme
ZH 按重命名实际选择突出显示方案 

// OPTIONS:2029
EN Plain commands|Unconditional jumps|Conditional jumps|PUSH/POP commands|Calls|Returns|FPU/MMX/SSE commands|Bad/system/privileged commands|Fillings|Modified commands|General registers|FPU/MMX/SSE registers|Selectors and system registers|Stack memory|Other memory|Constants pointing to memory|Other constants
ZH 普通命令|无条件跳跃|有条件跳跃| push/pop命令|调用|返回| fpu/mmx/sse命令| bad/system/privileged命令|填充|填充|修改命令|常规寄存器| fpu/mmx/sse寄存器|选择器和系统寄存器|选择器和系统 寄存器|堆栈内存|其他内存|指向内存的常数|其他常数 

// OPTIONS:2030
EN Select element of highlighting scheme to edit
ZH 选择要编辑的突出显示方案的元素 

// OPTIONS:2032
EN Highlight operands
ZH 突出显示操作数 

// OPTIONS:2033
EN Check to allow separate highlighting of operands
ZH 检查以允许单独突出显示操作数 

// OPTIONS:2035
EN Highlight modified
ZH 重点修改 

// OPTIONS:2036
EN Check to allow highlighting of modified commands
ZH 检查以突出显示修改的命令 

// OPTIONS:2041
EN Left click selects text colour, right - background, last custom colour is transparent. To edit custom colour, doubleclick it.
ZH 左键单击选择文本颜色,右 - 背景,最后的自定义颜色是透明的. 要编辑自定义颜色,请双击它. 

// OPTIONS:2045
EN Restore default colours for selected highlighting scheme
ZH 还原选定突出显示方案的默认颜色 

// OPTIONS:2057
EN Text-to-speech
ZH 文字转语音 

// OPTIONS:2066
EN Activate text-to-speech
ZH 激活文本到语音 

// OPTIONS:2067
EN Requires SAPI 5.0 or higher
ZH 需要SAPI 5.0或更高 

// OPTIONS:2069
EN Translate commands and registers
ZH 翻译命令和寄存器 

// OPTIONS:2070
EN For example, 'jump if not equal' instead of JNE
ZH 例如,“如果不相等的话”而不是jne 

// OPTIONS:2072
EN Skip leading zeros in hex numbers
ZH 跳过十六进制数字中的领先零 

// OPTIONS:2073
EN Makes reading a bit faster
ZH 使阅读速度更快 

// OPTIONS:2076
EN WARNING: Text-to-speech expects that Microsoft Speech API 5.0 or higher is installed.
ZH 警告：文本到语音期望安装Microsoft Speech API 5.0或更高版本. 

// OPTIONS:2088
EN Miscellaneous
ZH 各种各样的 

// OPTIONS:2091
EN Miscellaneous options
ZH 其他选择 

// OPTIONS:2097
EN Replace graphical symbols in text/clipboard by:
ZH 替换文本/剪贴板中的图形符号： 

// OPTIONS:2100
EN Spaces
ZH 空间 

// OPTIONS:2101
EN Replace graphical symbols with spaces
ZH 用空格替换图形符号 

// OPTIONS:2103
EN Similarly looking ASCII characters
ZH 同样看的ascii字符 

// OPTIONS:2104
EN Replace graphical symbols with ASCII characters
ZH 用ASCII字符替换图形符号 

// OPTIONS:2106
EN DOS box characters
ZH DOS框字符 

// OPTIONS:2107
EN Replace graphical symbols with DOS box characters
ZH 用DOS框字符替换图形符号 

// OPTIONS:2109
EN UNICODE box characters
ZH Unicode框字符 

// OPTIONS:2110
EN Replace graphical symbols with UNICODE box characters
ZH 用Unicode框字符替换图形符号 

// OPTIONS:2113
EN Apply options
ZH 应用选项 

// OPTIONS:2131
EN Apply options to plugins
ZH 将选项应用于插件 

// OPTIONS:2136
EN Plugin options
ZH 插件选项 

// OPTIONS:2287
EN <This copy of OllyDbg>
ZH <ollydbg>的副本 

// OPTIONS:2333
EN <none>
ZH <none> 

// OPTIONS:2571
EN Flash test
ZH 闪存测试 

// OPTIONS:2580
EN Specify module name
ZH 指定模块名称 

// OPTIONS:2609
EN Select range of exceptions
ZH 选择异常范围 

// OPTIONS:2666
EN Enter new name for font %i
ZH 输入字体 %i的新名称 

// OPTIONS:2690
EN Unable to create specified font
ZH 无法创建指定的字体 

// OPTIONS:2717
EN Enter new name for colour scheme %i
ZH 输入配色方案的新名称i 

// OPTIONS:2743
EN Enter new name for highlighting scheme %i
ZH 输入突出显示方案 %i的新名称 

// PATCHES:235
EN EIP inside the patch
ZH 补丁中的EIP 

// PATCHES:239
EN There is at least one thread with EIP pointing to the patch location. Modification of code may lead to invalid functioning or crash of the debugged application. Do you still want to apply or restore patch?
ZH 至少有一个线程,带有EIP指向补丁位置. 代码的修改可能导致调试应用程序的函数无效或崩溃. 您是否还想应用或还原补丁？ 

// PATCHES:278
EN Scan code of all modules for possible modifications
ZH 所有模块的扫描代码以进行可能的修改 

// PATCHES:283
EN Follow previous
ZH 关注以前 

// PATCHES:286
EN Follow next
ZH 接下来关注 

// PATCHES:290
EN Apply patch to memory
ZH 将补丁应用于内存 

// PATCHES:295
EN Delete record
ZH 删除记录 

// PATCHES:296
EN Delete old patch from the table
ZH 从表中删除旧补丁 

// PATCHES:349
EN Invalid
ZH 无效的 

// PATCHES:351
EN Applied
ZH 应用 

// PATCHES:354
EN Modified
ZH 修改的 

// PATCHES:400
EN Patch address
ZH 补丁地址 

// PATCHES:404
EN Name of the module to which this patch belongs
ZH 该补丁属于的模块的名称 

// PATCHES:408
EN Size of the patch, bytes (decimal)
ZH 贴片的大小,字节 (小数)  

// PATCHES:412
EN Status of the patch
ZH 补丁的状态 

// PATCHES:415
EN Modified command
ZH 修改命令 

// PATCHES:416
EN First modified command
ZH 第一个修改命令 

// PATCHES:419
EN Original command
ZH 原始命令 

// PATCHES:420
EN First original command
ZH 第一个原始命令 

// PLUGINS:113
EN Plugin-specific functions
ZH 插件特定函数 

// PLUGINS:280
EN Plugin '%s' has incompatible version (%i.%02i.%04i)
ZH 插件'%s'具有不兼容的版本 ( %i. %02i. %04i)  

// PLUGINS:295
EN Plugin '%s' (file '%s') failed to initialize
ZH 插件'%s' (文件'%s') 无法初始化 

// PLUGINS:387
EN Installed plugins:
ZH 安装插件： 

// PLUGINS:391
EN %s (version %s, file '%s')
ZH %s (版本 %s,文件'%s')  

// REGS:206
EN LastErr
ZH lasterr 

// REGS:211
EN Tag 0
ZH 标签0 

// REGS:212
EN Stack 0
ZH 堆栈0 

// REGS:215
EN Tag 1
ZH 标签1 

// REGS:216
EN Stack 1
ZH 堆栈1 

// REGS:219
EN Tag 2
ZH 标签2 

// REGS:220
EN Stack 2
ZH 堆栈2 

// REGS:223
EN Tag 3
ZH 标签3 

// REGS:224
EN Stack 3
ZH 堆栈3 

// REGS:227
EN Tag 4
ZH 标签4 

// REGS:228
EN Stack 4
ZH 堆栈4 

// REGS:231
EN Tag 5
ZH 标签5 

// REGS:232
EN Stack 5
ZH 堆栈5 

// REGS:235
EN Tag 6
ZH 标签6 

// REGS:236
EN Stack 6
ZH 堆栈6 

// REGS:239
EN Tag 7
ZH 标签7 

// REGS:240
EN Stack 7
ZH 堆栈7 

// REGS:253
EN Err
ZH 呃 

// REGS:254
EN Exception
ZH 例外 

// REGS:255
EN Stack fault
ZH 堆栈故障 

// REGS:256
EN Precision
ZH 精度

// REGS:257
EN Underflow
ZH 下溢

// REGS:258
EN Overflow
ZH 溢出 

// REGS:259
EN 0 division
ZH 除 0

// REGS:260
EN Denormalized
ZH 非规格化

// REGS:266
EN Prec
ZH prec 

// REGS:268
EN Mask
ZH 掩码

// REGS:269
EN Precision mask
ZH 精度掩码

// REGS:270
EN Underflow mask
ZH 下溢掩码 

// REGS:271
EN Overflow mask
ZH 溢出掩码

// REGS:272
EN 0 division mask
ZH 除 0 掩码 

// REGS:273
EN Denormal mask
ZH 非规格化掩码

// REGS:274
EN Invalid mask
ZH 无效的掩码

// REGS:276
EN Last cmnd
ZH 最后一个cmnd 

// REGS:277
EN Last command
ZH 最后命令 

// REGS:298
EN MM0 high
ZH MM0高 

// REGS:299
EN MM0 low
ZH MM0低 

// REGS:301
EN MM1 high
ZH MM1高 

// REGS:302
EN MM1 low
ZH MM1低 

// REGS:304
EN MM2 high
ZH MM2高 

// REGS:305
EN MM2 low
ZH MM2低 

// REGS:307
EN MM3 high
ZH MM3高 

// REGS:308
EN MM3 low
ZH MM3低 

// REGS:310
EN MM4 high
ZH MM4高 

// REGS:311
EN MM4 low
ZH MM4低 

// REGS:313
EN MM5 high
ZH MM5高 

// REGS:314
EN MM5 low
ZH MM5低 

// REGS:316
EN MM6 high
ZH MM6高 

// REGS:317
EN MM6 low
ZH MM6低 

// REGS:319
EN MM7 high
ZH MM7高 

// REGS:320
EN MM7 low
ZH MM7低 

// REGS:352
EN Rnd
ZH rnd 

// REGS:353
EN Rounding
ZH 四舍五入 

// REGS:427
EN XMM0 high
ZH XMM0高 

// REGS:428
EN XMM0 low
ZH XMM0低 

// REGS:430
EN XMM1 high
ZH XMM1高 

// REGS:431
EN XMM1 low
ZH xmm1低 

// REGS:433
EN XMM2 high
ZH XMM2高 

// REGS:434
EN XMM2 low
ZH xmm2低 

// REGS:436
EN XMM3 high
ZH XMM3高 

// REGS:437
EN XMM3 low
ZH xmm3低 

// REGS:439
EN XMM4 high
ZH XMM4高 

// REGS:440
EN XMM4 low
ZH xmm4低 

// REGS:442
EN XMM5 high
ZH XMM5高 

// REGS:443
EN XMM5 low
ZH xmm5低 

// REGS:445
EN XMM6 high
ZH XMM6高 

// REGS:446
EN XMM6 low
ZH xmm6低 

// REGS:448
EN XMM7 high
ZH XMM7高 

// REGS:449
EN XMM7 low
ZH xmm7低 

// REGS:699
EN Registers (FPU)
ZH 寄存器 (FPU)  

// REGS:702
EN Registers (MMX)
ZH 寄存器 (MMX)  

// REGS:705
EN Registers (3DNow!)
ZH 寄存器 (3dnow！)  

// REGS:708
EN Registers (DR)
ZH 寄存器 (DR)  

// REGS:738
EN Registers of
ZH 寄存器册 

// REGS:960
EN 32bit
ZH 32位

// REGS:960
EN 16bit
ZH 16位 

// REGS:983
EN valid
ZH 有效的 

// REGS:984
EN zero
ZH 零 

// REGS:985
EN bad
ZH 坏的 

// REGS:986
EN empty
ZH 空的 

// REGS:1013
EN (Unordered)
ZH  (无序)  

// REGS:1329
EN Modify flags
ZH 修改标志 

// REGS:1351
EN Change thread's last error
ZH 更改线程的最后错误 

// REGS:1743
EN Help on flag
ZH 帮助旗帜 

// REGS:1747
EN No help on selected item
ZH 选定项目没有帮助 

// REGS:1754
EN Overflow (O)
ZH 溢出 (O)  

// REGS:1755
EN Modify flags to meet specified condition
ZH 修改标志以满足指定条件 

// REGS:1757
EN Not Overflow (NO)
ZH 没有溢出 (否)  

// REGS:1760
EN Below (B,C,NAE)
ZH 下面 (b,c,nae)  

// REGS:1763
EN Not Below (NB,NC,AE)
ZH 不低于 (NB,NC,AE)  

// REGS:1766
EN Equal (E,Z)
ZH 等于 (E,Z)  

// REGS:1769
EN Not Equal (NE,NZ)
ZH 不相等 (NE,NZ)  

// REGS:1772
EN Below or Equal (BE,NA)
ZH 在下方或等于 (be,na)  

// REGS:1775
EN Above (A,NBE)
ZH 以上 (a,nbe)  

// REGS:1778
EN Sign (S)
ZH 标志)  

// REGS:1781
EN Not Sign (NS)
ZH 不签名 (NS)  

// REGS:1784
EN Parity Even (PE,P)
ZH 偶校验位 (PE,P)  

// REGS:1787
EN Parity Odd (PO,NP)
ZH 奇校验位 (PO,NP)  

// REGS:1790
EN Less (L,NGE)
ZH less (L,NGE) 

// REGS:1793
EN Greater or Equal (GE,NL)
ZH 更大或相等 (GE,NL)  

// REGS:1796
EN Less or Equal (LE,NG)
ZH 较少或相等 (le,ng)  

// REGS:1799
EN Greater (G,NLE)
ZH 更大 (g,nle)  

// REGS:1807
EN Greater (GT)
ZH 更大 (GT)  

// REGS:1808
EN Modify FPU flags to meet specified condition
ZH 修改FPU标志以满足指定条件 

// REGS:1810
EN Less (LT)
ZH 少 (LT)  

// REGS:1813
EN Equal (EQ)
ZH 相等 (EQ)  

// REGS:1816
EN Unordered
ZH 无序 

// REGS:1827
EN &Increment
ZH 递增(&I)

// REGS:1828
EN Increment register (add 1)
ZH 增量寄存器 (添加1)  

// REGS:1830
EN &Decrement
ZH 递减(&D)

// REGS:1831
EN Decrement register (subtract 1)
ZH 减少寄存器 (减去1)  

// REGS:1833
EN &Zero
ZH &零 

// REGS:1834
EN Set register to 0
ZH 将寄存器设置为0 

// REGS:1839
EN Set to &1
ZH 设置为&1 

// REGS:1842
EN &Toggle
ZH &切换 

// REGS:1843
EN Invert bit value (0 to 1, 1 to 0)
ZH 反转位值 (0到1、1至0)  

// REGS:1845
EN &Modify...
ZH &调整... 

// REGS:1846
EN Change contents of register
ZH 更改寄存器的内容 

// REGS:1902
EN Tag as valid
ZH 标记为有效 

// REGS:1903
EN Set tag associated with floating register to valid
ZH 设置与浮点数于寄存器关联到有效的标签 

// REGS:1905
EN Tag as zero
ZH 标记为零 

// REGS:1906
EN Set tag associated with floating register to zero
ZH 设置与浮点数于寄存器关联的标签至零 

// REGS:1908
EN Tag as bad
ZH 标记为坏 

// REGS:1909
EN Set tag associated with floating register to bad
ZH 将与浮点数于寄存器关联的设置标签与不良 

// REGS:1911
EN Tag as empty
ZH 标记为空 

// REGS:1912
EN Set tag associated with floating register to empty
ZH 将与浮点数于寄存器关联的设置标签与空 

// REGS:1914
EN Round to nearest
ZH 圆形到最近 

// REGS:1915
EN Round to the closest presentable number
ZH 四舍五入到最接近的数字 

// REGS:1917
EN Round down
ZH 下跌 

// REGS:1918
EN Round toward -INF
ZH 转向-inf 

// REGS:1920
EN Round up
ZH 围捕 

// REGS:1921
EN Round toward +INF
ZH 转向 +INF 

// REGS:1923
EN Round toward zero
ZH 朝零 

// REGS:1924
EN Round to number that is smaller by absolute value
ZH 按绝对值较小的圆形数字 

// REGS:1926
EN 24-bit accuracy
ZH 24位准确性 

// REGS:1927
EN Set single (24-bit) FPU precision
ZH 设置单个 (24位) FPU精度 

// REGS:1929
EN 53-bit accuracy
ZH 53位准确性 

// REGS:1930
EN Set double (53-bit) FPU precision
ZH 设置双 (53位) FPU精度 

// REGS:1932
EN 64-bit accuracy
ZH 64位准确性 

// REGS:1933
EN Set extended (64-bit) FPU precision
ZH 设置扩展 (64位) FPU精度 

// REGS:1936
EN Undo modification
ZH 撤消修改 

// REGS:1938
EN Copy to clipboard
ZH 复制到剪贴板 

// REGS:1939
EN Copy value of selected item to clipboard
ZH 选定项目的复制值为剪贴板 

// REGS:1941
EN Copy all registers
ZH 复制所有寄存器 

// REGS:1942
EN Copy the whole Registers pane to clipboard
ZH 将整个寄存器窗格复制到剪贴板 

// REGS:1945
EN Decrement TOP by one
ZH 减少顶 1

// REGS:1948
EN Increment TOP by one
ZH 增顶部 1

// REGS:1959
EN View float registers
ZH 查看浮点数寄存器 

// REGS:1960
EN Show floating-point registers and flags
ZH 显示浮点寄存器和旗帜 

// REGS:1963
EN Decode FPU registers as 64-bit MMX integers
ZH 解码FPU寄存器为64位MMX整数 

// REGS:1966
EN Decode FPU registers as two 3DNow! registers
ZH 将FPU寄存器解码为两个3dnow！ 寄存器 

// REGS:1968
EN View SSE as integers
ZH 将SSE视为整数 

// REGS:1969
EN Decode SSE registers as 4 x 32-bit hex numbers
ZH 将SSE寄存器解码为4 x 32位十六进制数字 

// REGS:1971
EN View SSE as 32-bit floats
ZH 将SSE视为32位浮点数  

// REGS:1972
EN Decode SSE registers as 4 x 32-bit floats
ZH 将SSE寄存器解码为4 x 32位浮点数 

// REGS:1974
EN View SSE as 64-bit doubles
ZH 将SSE视为64位双精度浮点数 

// REGS:1975
EN Decode SSE registers as 2 x 64-bit doubles
ZH 将SSE寄存器解码为2 x 64位双精度浮点数 

// REGS:1978
EN Show help on selected item
ZH 在选定项目上显示帮助 

// REGS:2270
EN Program terminated
ZH 程序终止 

// REGS:2272
EN Program is running
ZH 程序正在运行 

// REGS:2312
EN Press to toggle between FPU/MMX/3DNow!
ZH 按在FPU/MMX/3DNOW之间切换！ 

// RUNDLL:23
EN Processing loaddll.exe
ZH 处理loaddll.exe 

// RUNDLL:27
EN Unable to load '%s'
ZH 无法加载“%s” 

// RUNDLL:43
EN File 'loaddll.dat' created successfully
ZH 文件“loaddll.dat”成功创建了 

// RUNDLL:120
EN Unable to extract LOADDLL.EXE. This is an internal error. Probably OllyDbg is incompatible with your OS. Please inform author.
ZH 无法提取loaddll.exe. 这是一个内部错误. Ollydbg可能与您的操作系统不相容. 请告知作者. 

// RUNDLL:122
EN Unable to extract LOADDLL.EXE due to low memory condition.
ZH 由于内存低,无法提取LoadDll.exe. 

// RUNDLL:126
EN Unable to extract LOADDLL.EXE. If OllyDbg directory is write-protected, please enable writing or move OllyDbg to another directory.
ZH 无法提取loaddll.exe. 如果OLLYDBG目录是写入保护的,请启用写作或将Ollydbg移至另一个目录. 

// RUNDLL:129
EN Invalid version of LOADDLL.EXE. Please delete file '%s' in order to allow OllyDbg to extract valid copy of DLL loader.
ZH loaddll.exe的无效版本. 请删除文件“%s”,以允许Ollydbg提取DLL加载程序的有效副本. 

// RUNDLL:252
EN Export:
ZH 出口： 

// RUNDLL:256
EN Select export to call
ZH 选择导出以调用 

// RUNDLL:260
EN Sort list of exported functions by name (unchecked: by address)
ZH 按名称排序导出函数的列表 (取消选中：通过地址)  

// RUNDLL:263
EN Press to follow selected export in CPU Disassembler
ZH 按下CPU反汇编器中选定的导出

// RUNDLL:266
EN Information on selected export
ZH 有关选定导出的信息 

// RUNDLL:269
EN No arguments
ZH 没有参数 

// RUNDLL:270
EN Function has no arguments
ZH 函数没有参数 

// RUNDLL:273
EN Function has 1 argument
ZH 函数有1个参数 

// RUNDLL:276
EN Function has 2 arguments
ZH 函数有2个参数 

// RUNDLL:279
EN Function has 3 arguments
ZH 函数有3个参数 

// RUNDLL:282
EN Function has 4 arguments
ZH 函数有4个参数 

// RUNDLL:285
EN Function has 5 arguments
ZH 函数有5个参数 

// RUNDLL:288
EN Function has 6 arguments
ZH 函数有6个参数 

// RUNDLL:291
EN Function has 7 arguments
ZH 函数有7个参数 

// RUNDLL:294
EN Function has 8 arguments
ZH 函数有8个参数 

// RUNDLL:297
EN Function has 9 arguments
ZH 函数有9个参数 

// RUNDLL:300
EN Function has 10 arguments
ZH 函数有10个参数 

// RUNDLL:303
EN First call argument
ZH 第一个调用参数 

// RUNDLL:306
EN Second call argument
ZH 第二个调用参数 

// RUNDLL:309
EN Third call argument
ZH 第三个调用参数 

// RUNDLL:312
EN Fourth call argument
ZH 第四个调用论点 

// RUNDLL:315
EN Fifth call argument
ZH 第五调用论点 

// RUNDLL:318
EN Sixth call argument
ZH 第六个调用论点 

// RUNDLL:321
EN Seventh call argument
ZH 第七个调用论点 

// RUNDLL:324
EN Eighth call argument
ZH 第八个调用论点 

// RUNDLL:327
EN Ninth call argument
ZH 第九个调用论点 

// RUNDLL:330
EN Tenth call argument
ZH 第十个调用论点 

// RUNDLL:334
EN First data buffer
ZH 第一个数据缓冲区 

// RUNDLL:337
EN Second data buffer
ZH 第二个数据缓冲区 

// RUNDLL:340
EN Third data buffer
ZH 第三个数据缓冲区 

// RUNDLL:343
EN Fourth data buffer
ZH 第四个数据缓冲区 

// RUNDLL:346
EN Fifth data buffer
ZH 第五数据缓冲区 

// RUNDLL:349
EN Contents of registers:
ZH 寄存器的内容： 

// RUNDLL:352
EN Before call
ZH 打调用之前 

// RUNDLL:355
EN After call
ZH 调用后 

// RUNDLL:377
EN Contents of register EAX before call
ZH 调用之前寄存器的内容 

// RUNDLL:380
EN Contents of register ECX before call
ZH 调用之前,寄存器ECX的内容 

// RUNDLL:383
EN Contents of register EDX before call
ZH 调用之前寄存器的内容 

// RUNDLL:386
EN Contents of register EBX before call
ZH 拨打EBX的内容之前 

// RUNDLL:389
EN Contents of register ESI before call
ZH 调用之前寄存器ESI的内容 

// RUNDLL:392
EN Contents of register EDI before call
ZH 调用之前寄存器EDI的内容 

// RUNDLL:395
EN Contents of register EAX after call
ZH 调用后寄存器eax的内容 

// RUNDLL:398
EN Contents of register ECX after call
ZH 调用后寄存器ECX的内容 

// RUNDLL:401
EN Contents of register EDX after call
ZH 调用后寄存器EDX的内容 

// RUNDLL:404
EN Contents of register EBX after call
ZH 调用后寄存器EBX的内容 

// RUNDLL:407
EN Contents of register ESI after call
ZH 调用后寄存器ESI的内容 

// RUNDLL:410
EN Contents of register EDI after call
ZH 调用后寄存器EDI的内容 

// RUNDLL:413
EN Hide on call
ZH 隐藏在调用上 

// RUNDLL:414
EN Hide this dialog on call and restore it afterwards
ZH 在调用上隐藏此对话框并将其恢复 

// RUNDLL:416
EN Pause after call
ZH 调用后暂停 

// RUNDLL:417
EN Pause Debuggee after call to DLL is finished
ZH 调用后暂停调试完成 

// RUNDLL:419
EN Call export
ZH 调用导出 

// RUNDLL:420
EN Call selected export with specified arguments
ZH 调用所选的带有指定参数的导出 

// RUNDLL:423
EN Results of call
ZH 调用结果 

// RUNDLL:495
EN Low memory, some exports will be missed
ZH 低内存,一些出口将被错过 

// RUNDLL:573
EN ATTENTION! %i ARGUMENTS!
ZH 注意！  %i 个变量！ 

// RUNDLL:576
EN Callback,
ZH 回调, 

// RUNDLL:578
EN 1 argument
ZH 1个参数 

// RUNDLL:580
EN %i arguments
ZH 我的论点 

// RUNDLL:584
EN (debug data)
ZH  (调试数据)  

// RUNDLL:587
EN (guessed)
ZH  (猜测)  

// RUNDLL:602
EN ... (Format arguments may follow)
ZH ... (格式参数可能遵循)  

// RUNDLL:604
EN ... (Counted items may follow)
ZH ... (可能遵循计数的项目)  

// RUNDLL:609
EN Returns %s%s
ZH 返回 %s %s 

// RUNDLL:613
EN May terminate process/thread
ZH 可能终止进程/线程 

// RUNDLL:616
EN Tampers with return address
ZH 带返回地址的录像器 

// RUNDLL:618
EN Preserves
ZH 保护

// RUNDLL:665
EN Unable to communicate with LOADDLL.EXE
ZH 无法与loaddll.exe通信 

// RUNDLL:687
EN Expression must be of integer type
ZH 表达必须是整数类型 

// RUNDLL:894
EN Can't call DLL export now
ZH 现在无法调用DLL导出 

// RUNDLL:909
EN Please run LOADDLL.EXE first!
ZH 请先运行LoadDll.exe！ 

// RUNDLL:927
EN Error in argument %i:
ZH 参数 %i的错误： 

// RUNDLL:939
EN Error in register %s:
ZH 寄存器 %s的错误： 

// RUNDLL:954
EN Calling export...
ZH 调用导出... 

// RUNDLL:1032
EN Unable to get data from LOADDLL.EXE
ZH 无法从loaddll.exe获取数据 

// RUNDLL:1038
EN Call finished
ZH 调用完成 

// RUNDLL:1044
EN , duration %.6f s
ZH ,持续时间 %.6f s 

// RUNDLL:1048
EN , duration %.6f ms
ZH ,持续时间 %.6F ms 

// RUNDLL:1050
EN , duration %.3f us
ZH ,持续时间 %.3f我们 

// RUNDLL:1057
EN EAX = %s
ZH eax = %s 

// RUNDLL:1062
EN Subroutine removed %i doublewords from stack
ZH 子例程从堆栈中删除了 %i双字 

// RUNDLL:1065
EN Subroutine removed %i bytes of data from stack
ZH 子例程从堆栈中删除了数据字节的 %i字节 

// RUNDLL:1072
EN Last error = %08X
ZH 最后错误= %08X

// RUNDLL:1074
EN Last error = %s
ZH 最后错误= %s 

// SAPI:25
EN Hello. Speech interface is on.
ZH 你好. 语音接口已打开. 

// SAPI:69
EN Good-bye!
ZH 再见！ 

// SCANNER:123
EN Unterminated string
ZH 未终止的字符串 

// SCANNER:133
EN String is too long
ZH 字符串太长 

// SCANNER:149
EN Hex escape must have two digits
ZH 十六进制转义必须有两位数 

// SCANNER:158
EN Unsupported escape sequence
ZH 不支持的转义序列

// SCANNER:166
EN Unterminated character constant
ZH 未终止的字符常数 

// SCANNER:170
EN UNICODE character constants are not allowed
ZH 不允许Unicode字符常数 

// SCANNER:209
EN End of comment outside the comment
ZH 注释之外的注释结束 

// SCANNER:349
EN Masked decimal numbers are not allowed
ZH 不允许蒙版十进制数字 

// SCANNER:370
EN Invalid floating-point exponent
ZH 无效的浮点指数 

// SCANNER:406
EN Prefix 0x and suffix h are mutually exclusive
ZH 前缀0x和后缀H相互排斥 

// SCANNER:417
EN Invalid or out-of-range number
ZH 无效或范围的数字 

// SEARCH:68
EN Address of found item
ZH 发现项目的地址 

// SEARCH:83
EN Address of found sequence
ZH 发现序列的地址 

// SEARCH:86
EN First command
ZH 第一个命令 

// SEARCH:87
EN Disassembled first command in the sequence
ZH 在序列中反汇编第一个命令 

// SEARCH:98
EN Address of switch
ZH 开关的地址 

// SEARCH:106
EN Suggested type of switch
ZH 建议的开关类型 

// SEARCH:109
EN Branches
ZH 分支 

// SEARCH:110
EN Number of branches
ZH 分支数 

// SEARCH:114
EN List of cases
ZH 案件清单 

// SEARCH:133
EN Address of call destination
ZH 调用目的地的地址 

// SEARCH:136
EN Dest name
ZH dest名称 

// SEARCH:141
EN Comments and important call arguments
ZH 注释和重要的调用论点 

// SEARCH:148
EN Address of found modification
ZH 发现修改的地址 

// SEARCH:167
EN Address of found procedure (entry point)
ZH 找到程序的地址 (入口点)  

// SEARCH:174
EN Local
ZH 当地的 

// SEARCH:175
EN Number of local calls (from the same module)
ZH 本地调用数量 (来自同一模块)  

// SEARCH:178
EN Global
ZH 全局的

// SEARCH:179
EN Number of intermodular calls
ZH 载体调用的数量 

// SEARCH:213
EN No items found
ZH 未找到任何项目 

// SEARCH:277
EN No search results
ZH 没有搜索结果 

// SEARCH:424
EN Searching -
ZH 搜索 - 

// SEARCH:428
EN Search interrupted
ZH 搜索中断 

// SEARCH:563
EN Found 1 reference
ZH 找到1个参考 

// SEARCH:565
EN Found %i references
ZH 找到 %i参考 

// SEARCH:567
EN (incomplete)
ZH  (不完整)  

// SEARCH:568
EN Refs %s
ZH refs %s 

// SEARCH:756
EN Found 1 string
ZH 找到1个字符串 

// SEARCH:758
EN Found %i strings and references
ZH 找到 %i字符串和参考 

// SEARCH:761
EN Strings %s
ZH 字符串 %s 

// SEARCH:935
EN GUIDs %s
ZH GUIDS %s 

// SEARCH:978
EN Found 1 comment
ZH 找到1条注释 

// SEARCH:980
EN Found %i comments
ZH 找到 %i注释 

// SEARCH:1051
EN Found 1 known procedure
ZH 找到1个已知程序 

// SEARCH:1053
EN Found %i procedures
ZH 找到 %i程序 

// SEARCH:1054
EN Procedures %s
ZH 程序 %s 

// SEARCH:1099
EN Found 1 switch
ZH 找到1个开关 

// SEARCH:1101
EN Found %i switches
ZH 找到 %i 切换 

// SEARCH:1102
EN Switches %s
ZH 开关 %s 

// SEARCH:1283
EN Floats %s
ZH 浮点数 %s 

// SEARCH:1413
EN Enter floating-point constant to search for
ZH 输入浮点常数以搜索 

// SEARCH:1886
EN Specify assembler search model
ZH 指定汇编器搜索模型 

// SEARCH:1889
EN Specify sequence of assembler search models
ZH 指定汇编器搜索模型的顺序 

// SEARCH:2000
EN Found 1 command
ZH 找到1个命令 

// SEARCH:2001
EN Found %i commands
ZH 找到 %i命令 

// SEARCH:2003
EN Found 1 sequence
ZH 找到1个序列 

// SEARCH:2004
EN Found %i sequencess
ZH 在序列中发现 % 

// SEARCH:2008
EN Commands %s
ZH 命令 %s 

// SEARCH:2011
EN Sequences %s
ZH 序列 %s 

// SEARCH:2308
EN Module is not backuped
ZH 模块未备份 

// SEARCH:2418
EN Found 1 modification
ZH 找到1个修改 

// SEARCH:2420
EN Found %i modifications
ZH 找到 %i修改 

// SEARCH:2423
EN Mods %s
ZH mods %s

// SEARCH:2454
EN No backup
ZH 没有备份 

// SEARCH:2686
EN Intermodular calls in %s
ZH 中型调用中 %s 

// SEARCH:2688
EN Found 1 intermodular call
ZH 找到1个载体调用 

// SEARCH:2690
EN Found %i intermodular calls
ZH 找到 %i跨调用 

// SEARCH:2693
EN Calls %s
ZH 调用 %s 

// SEARCH:2743
EN Enter search pattern
ZH 输入搜索模式 

// SEARCH:2795
EN Searching - $ - press SPACE to interrupt
ZH 搜索 -  $  - 按空间中断 

// SEARCH:3228
EN Unable to set all breakpoints
ZH 无法设置所有断点 

// SEARCH:3260
EN Unable to remove all breakpoints
ZH 无法删除所有断点 

// SEARCH:3400
EN Follow selected item in CPU Disassembler pane
ZH 在CPU反汇编器窗格中关注选定的项目

// SEARCH:3403
EN Follow previous item in CPU Disassembler pane
ZH 在CPU反汇编器窗格中关注以前的项目

// SEARCH:3406
EN Follow next item in CPU Disassembler pane
ZH 在CPU反汇编器窗格中关注下一个项目

// SEARCH:3408
EN Search for text
ZH 搜索文字 

// SEARCH:3409
EN Find text substring in the referenced strings
ZH 在引用的字符串中查找文本子字符串 

// SEARCH:3418
EN Set unconditional breakpoint on selected command
ZH 在选定命令上设置无条件断点 

// SEARCH:3427
EN Remove breakpoint from selected command
ZH 从选定命令中删除断点 

// SEARCH:3430
EN Temporarily disable breakpoint on selected command
ZH 暂时禁用选定命令上的断点 

// SEARCH:3433
EN Re-enable breakpoint on selected command
ZH 重新启用选定命令上的断点 

// SEARCH:3435
EN Breakpoint on all commands
ZH 所有命令的断点 

// SEARCH:3438
EN Conditional breakpoint on all commands
ZH 所有命令的条件断点 

// SEARCH:3439
EN Set or edit conditional breakpoint on all found commands
ZH 在所有发现的命令上设置或编辑条件断点 

// SEARCH:3441
EN Conditional log on all commands
ZH 所有命令上的条件登录 

// SEARCH:3442
EN Set or edit conditional logging breakpoint on all found commands
ZH 设置或编辑所有发现命令上的条件记录断点 

// SEARCH:3444
EN Remove breakpoint from all commands
ZH 从所有命令中删除断点 

// SEARCH:3445
EN Remove breakpoint from all found commands
ZH 从所有发现的命令中删除断点 

// SEARCH:3447
EN Breakpoint on all calls to
ZH 所有调用的断点 

// SEARCH:3449
EN Set unconditional breakpoint on all found calls to selected function
ZH 在所有发现的调用到选定函数的所有调用上设置无条件断点 

// SEARCH:3451
EN Conditional breakpoint on all calls to
ZH 所有调用的条件断点 

// SEARCH:3453
EN Set or edit conditional breakpoint on all found calls to selected function
ZH 设置或编辑所有发现的调用到选定函数的调用有条件断点 

// SEARCH:3455
EN Conditional log on all calls to
ZH 有条件登录所有调用 

// SEARCH:3457
EN Set or edit conditional logging breakpoint on all found calls to selected function
ZH 设置或编辑所有发现的调用到所选函数的所有调用的条件记录断点 

// SEARCH:3459
EN Remove breakpoint from all calls to
ZH 从所有调用中删除断点 

// SEARCH:3460
EN Remove breakpoint from all found calls to selected function
ZH 从所有发现的调用到选定函数中删除断点 

// SEARCH:3506
EN Delete tab
ZH 删除选项卡 

// SEARCH:3507
EN Delete tab from the search window
ZH 从搜索窗口删除选项卡 

// SEARCH:3509
EN Move tab to front
ZH 将选项卡移到前面 

// SEARCH:3510
EN Move tab into the first position
ZH 将选项卡移到第一个位置 

// SEARCH:3708
EN Messages
ZH 消息 

// SEARCH:3760
EN Original selection
ZH 原始选择 

// SEH:139
EN Update contents of the VEH/SEH chain window
ZH 更新车辆/SEH链窗的内容 

// SEH:144
EN Follow link in CPU Dump
ZH 在CPU转储中关注链接 

// SEH:145
EN Follow link to exception handler (LIST_ENTRY) in CPU Dump
ZH 请按照CPU转储中的异常处理程序 (list_entry) 链接 

// SEH:147
EN Follow link in CPU Stack
ZH 在CPU堆栈中关注链接 

// SEH:148
EN Follow link to handler (EXCEPTION_REGISTRATION) in CPU Stack
ZH 在CPU堆栈中关注链接到Handler (exception_registration)  

// SEH:150
EN Follow handler
ZH 关注处理程序 

// SEH:151
EN Follow exception handler in Disassembler
ZH 遵循反汇编器中的异常处理程序

// SEH:153
EN Breakpoint on handler
ZH 处理程序上的断点 

// SEH:154
EN Set unconditional breakpoint on exception handler
ZH 在异常处理程序上设置无条件断点 

// SEH:157
EN Set or edit conditional breakpoint on exception handler
ZH 在异常处理程序上设置或编辑条件断点 

// SEH:160
EN Set or edit conditional logging breakpoint on exception handler
ZH 在异常处理程序上设置或编辑条件记录断点 

// SEH:163
EN Remove breakpoint from exception handler
ZH 从异常处理程序中删除断点 

// SEH:201
EN Vectored
ZH 矢量 

// SEH:203
EN SEH
ZH SEH

// SEH:340
EN SEH chain
ZH SEH链 

// SEH:362
EN Index
ZH 指数 

// SEH:363
EN Index of the handler, in the order of execution
ZH 处理程序的索引,按执行顺序 

// SEH:367
EN Type of the handler
ZH 处理程序的类型 

// SEH:370
EN Link
ZH 关联 

// SEH:371
EN Address of the link
ZH 链接的地址 

// SEH:374
EN Handler
ZH 处理程序 

// SEH:375
EN Address of exception handler
ZH 异常处理程序的地址 

// SOURCE:469
EN &Follow in Disassembler
ZH 并跟随反汇编器

// SOURCE:470
EN Follow selected line in CPU Disassembler
ZH 在CPU反汇编器中遵循选定的行

// SOURCE:473
EN Set unconditional breakpoint on every extent of the selected line
ZH 在所选行的各个程度上设置无条件断点 

// SOURCE:476
EN Set conditional breakpoint on every extent of the selected line
ZH 在所选行的各个程度上设置有条件断点 

// SOURCE:480
EN Set conditional logging breakpoint on every extent of the selected line
ZH 在所选行的各个程度上设置有条件的日志记录断点 

// SOURCE:483
EN Remove all breakpoints from the selected source line
ZH 从所选源线中删除所有断点 

// SOURCE:486
EN Temporarily disable all breakpoints on selected source line
ZH 暂时禁用选定源线上的所有断点 

// SOURCE:489
EN Re-enable breakpoints on selected source line
ZH 在选定源行上重新启用断点 

// SOURCE:639
EN Line
ZH 线 

// SOURCE:640
EN Line number
ZH 调用号码 

// SOURCE:836
EN Module containing source file
ZH 包含源文件的模块 

// SOURCE:840
EN Name of the source file
ZH 源文件的名称 

// SOURCE:844
EN Full name of source file, including path
ZH 源文件的全名,包括路径 

// SOURCE:859
EN Source files
ZH 源文件 

// SPEECH:119
EN plus
ZH 加 

// SPEECH:121
EN follows
ZH 跟随 

// SPEECH:123
EN minus
ZH 减 

// SPEECH:125
EN times
ZH 乘以

// SPEECH:127
EN slash
ZH 斜杠

// SPEECH:129
EN percent
ZH 百分 

// SPEECH:131
EN backslash
ZH 反斜杠

// SPEECH:133
EN predicted as
ZH 预测为 

// SPEECH:135
EN equal to
ZH 等于 

// SPEECH:137
EN not equal to
ZH 不等于 

// SPEECH:139
EN equals
ZH 等于 

// SPEECH:141
EN memory
ZH 记忆 

// SPEECH:145
EN logical and
ZH 逻辑和 

// SPEECH:147
EN and
ZH 和 

// SPEECH:149
EN logical or
ZH 逻辑或 

// SPEECH:153
EN or
ZH or

// SPEECH:155
EN exclusive or
ZH 独家或 

// SPEECH:157
EN ellipsis
ZH 省略 

// SPEECH:159
EN shift left
ZH 向左移动 

// SPEECH:161
EN less than or equal
ZH 小于或相等 

// SPEECH:163
EN less than
ZH 少于 

// SPEECH:167
EN shift right
ZH 向右移动 

// SPEECH:169
EN greater than or equal
ZH 大于或相等 

// SPEECH:171
EN greater than
ZH 比...更大

// SPEECH:220
EN times ten to the
ZH 十次到达 

// SPEECH:228
EN power
ZH 力量 

// STACK:409
EN Update contents of the Call stack window
ZH 更新调用堆栈窗口的内容 

// STACK:414
EN Follow in CPU stack
ZH 跟随CPU堆栈 

// STACK:415
EN Follow item in the CPU Stack
ZH 在CPU堆栈中关注项目 

// STACK:417
EN Follow procedure
ZH 遵循程序 

// STACK:418
EN Follow procedure in the CPU Disassembler
ZH 遵循CPU反汇编器中的程序

// STACK:420
EN Follow caller
ZH 关注调用者 

// STACK:421
EN Go to the call instruction
ZH 转到调用指令 

// STACK:423
EN Follow stack frame
ZH 遵循栈帧 

// STACK:424
EN Follow stack frame (EBP register) in the CPU Stack
ZH 在CPU堆栈中关注栈帧 (EBP寄存器)  

// STACK:427
EN Follow stack doubleword in the CPU Dump
ZH 在CPU转储中关注堆栈双字 

// STACK:429
EN Execute till &return
ZH 执行till&返回 

// STACK:430
EN Run application till return from the selected call is reached
ZH 运行应用直到到达选定的调用返回 

// STACK:432
EN Breakpoint on procedure
ZH 进程中的断点 

// STACK:433
EN Set unconditional breakpoint on the entry point of the procedure

// STACK:436
EN Set or edit conditional breakpoint on entry point of the procedure
ZH 在进程的入口点上设置或编辑条件断点 

// STACK:439
EN Set or edit logging breakpoint on the entry point of the procedure
ZH 在进程的入口点上设置或编辑日志记录断点 

// STACK:442
EN Remove breakpoint from the entry point of the procedure
ZH 从进程的入口处删除断点 

// STACK:444
EN Breakpoint on call

// STACK:445
EN Set unconditional breakpoint on the call to the procedure
ZH 在调用进程中设置无条件断点 

// STACK:447
EN Conditional breakpoint on call...
ZH 调用时有条件断点... 

// STACK:448
EN Set or edit conditional breakpoint on the call to the procedure
ZH 在调用到该进程的调用上设置或编辑条件断点 

// STACK:451
EN Set or edit logging breakpoint on the call to the procedure
ZH 在调用到该进程的调用上设置或编辑日志记录断点 

// STACK:453
EN Remove breakpoint from call
ZH 从调用中删除断点 

// STACK:454
EN Remove breakpoint from the call to the procedure
ZH 从调用中删除断点 

// STACK:754
EN Address of item on the stack
ZH 堆栈上的项目地址 

// STACK:757
EN Data
ZH 数据 

// STACK:758
EN Data on the specified address
ZH 指定地址的数据 

// STACK:761
EN Procedure
ZH 程序 

// STACK:762
EN Procedure name or argument decoding
ZH 进程名称或参数解码 

// STACK:765
EN Called from
ZH 来自 

// STACK:766
EN Address of caller
ZH 调用者的地址 

// STACK:769
EN Frame
ZH 帧

// STACK:770
EN Stack frame
ZH 栈帧

// START:321
EN Unable to extract name of executable file from link '%s'

// START:329
EN Program Information File '%s' is a shortcut to MS-DOS program. OllyDbg is unable to debug 16-bit code.
ZH 程序信息文件“%s”是MS-DOS程序的快捷方式. Ollydbg无法调试16位代码. 

// START:335
EN Unable to locate file '%s'
ZH 无法找到文件'%s' 

// START:385
EN Unable to open or read file '%s'
ZH 无法打开或读取文件'%s' 

// START:388
EN File '%s' is probably not a 32-bit Portable Executable. Try to load it anyway?
ZH 文件“%s”可能不是32位便携式可执行文件. 尝试加载它？ 

// START:389
EN Not a valid PE file
ZH 没有有效的PE文件 

// START:394
EN File '%s' probably will not run under Win95-based OS due to the non-standard section alignment. Try to load it anyway?
ZH 由于非标准部分对齐,文件“%s”可能不会在基于WIN95的OS下运行. 尝试加载它？ 

// START:395
EN Suspicious PE file
ZH 可疑的PE文件 

// START:399
EN Request to load DLL
ZH 请求加载DLL 

// START:401
EN File '%s' is a DLL. Windows can't execute DLLs directly. Extract and launch LOADDLL.EXE?
ZH 文件“%s”是DLL. Windows无法直接执行DLL. 提取和启动LoadDll.exe？ 

// START:447
EN Unable to start .NET file '%s'
ZH 无法启动.NET文件'%s' 

// START:472
EN Unable to start file '%s'
ZH 无法启动文件'%s' 

// START:491
EN Console application '%s'
ZH 控制台应用“%s” 

// START:493
EN .NET application '%s'
ZH .NET应用程序'%s' 

// START:495
EN File '%s'
ZH 文件“%s” 

// START:497
EN Arguments:
ZH 参数： 

// START:501
EN Current directory:
ZH 当前目录： 

// START:770
EN Unable to locate process with identifier %08X (%u.). Probably this process has already terminated, or is not visible to OllyDbg.
ZH 无法使用标识符 %08X ( %u.) 定位进程. 大概这个进程已经终止,或者Ollydbg不可见.

// START:783
EN unknown meaning
ZH 未知的含义 

// START:785
EN Unable to attach to process '%s' with ID %08X (%i.). Reason: %08X (%s)
ZH 无法附加进程“%s”，ID 为 %08X (%i.) . 原因： %08X ( %s) 

// START:807
EN Attached to '%s'
ZH 附着在“%s”上 

// START:856
EN Update list of running processes
ZH 更新运行进程列表 

// START:858
EN A&ttach
ZH 附 

// START:859
EN Attach to selected process
ZH 附加选定的进程 

// START:898
EN <Debuggee>
ZH <Debuggee> 

// START:1005
EN Select process to attach
ZH 选择附加进程 

// START:1006
EN Attach
ZH 附

// START:1022
EN To find process, start typing its name
ZH 要查找进程,请开始键入其名称 

// START:1080
EN You can't debug the instance of the OllyDbg you are currently using.
ZH 您无法调试您当前正在使用的OLLYDBG的实例. 

// START:1084
EN The process '%s' is one you are currently debugging. You are already attached to it.
ZH “%s”进程是您当前正在调试的进程. 您已经附着在它上. 

// START:1116
EN PID$     (Decimal)
ZH PID$ (十进制)  

// START:1117
EN Process identifier (hex and decimal forms)
ZH 进程标识符 (十六进制和十进制形式)  

// START:1121
EN Process name
ZH 进程名称 

// START:1124
EN Window
ZH 窗口

// START:1126
EN Title of some top-level window belonging to process
ZH 某些属于进程的顶级窗口的标题 

// START:1130
EN Name of executable file
ZH 可执行文件的名称 

// SUPPORT:14
EN About OllyDbg
ZH 关于Ollydbg 

// SUPPORT:22
EN (alpha %i)
ZH  (alpha %i)  

// SUPPORT:24
EN (beta %i)
ZH  (beta %i)  

// SUPPORT:35
EN OllyDbg v%i.%02i%s%s\n\n32-bit Assembler-Level Debugger\n\nCopyright © %s %s\nAll Rights Reserved\n\nThe product names mentioned in this\nsoftware may be trademarks or registered\ntrademarks of their respective owners.\n\nFor the newest information, visit
ZH Ollydbg v%i.%02i%s%s\n\n\n32-位汇编器级调试器\n\n\ncopyright© %s %s\n所有权利保留\n\n\n\n\n\n\n在此\nsoftware中提到的产品名称可能是商标或寄存器商标或已寄存器\ntrademarks的所有者.\n\n对于最新信息,请访问 

// SUPPORT:73
EN Error
ZH 错误 

// SUPPORT:178
EN Don't display this message in the future
ZH 将来不要显示此消息 

// SUPPORT:282
EN No
ZH 不

// SUPPORT:283
EN Yes
ZH 是的 

// SUPPORT:284
EN Don't ask this question again
ZH 不要再问这个问题 

// SUPPORT:1156
EN MEMMON: Undeclared memory block %08X
ZH memmon：未宣布的内存块 %08X

// SUPPORT:1160
EN MEMMON: Memfree()'ing block %08X allocated with Virtalloc()
ZH memmon：memfree () 'ing块 %08X用virtalloc () 分配

// SUPPORT:1164
EN MEMMON: Virtfree()'ing block %08X allocated with Memalloc()
ZH memmon：firtfree () 'ing块 %08X用memalloc () 分配

// SUPPORT:1168
EN MEMMON: Too short memory block %08X
ZH memmon：太短内存块 %08X

// SUPPORT:1172
EN MEMMON: Corrupted memory block %08X
ZH memmon：损坏的内存块 %08X

// SUPPORT:1193
EN MEMMON: OllyDbg memory monitoring active
ZH memmon：OLLYDBG内存监视活动 

// SUPPORT:1196
EN MEMMON: Unable to start memory monitoring
ZH memmon：无法启动内存监视 

// SUPPORT:1242
EN MEMMON: %s memory addr=%08X size=%08X from %08X, %08X%s
ZH memmon：%s 内存 addr = %08X 尺寸= %08X 从 %08X, %08X %s

// SUPPORT:1295
EN MEMMON: Too many memory blocks, monitoring is unreliable
ZH memmon：存储器块太多,监视是不可靠的 

// SUPPORT:1893
EN <main>
ZH <main> 

// SUPPORT:1926
EN Current dir:
ZH 当前DIR： 

// SUPPORT:1954
EN Append to existing file
ZH 附加到现有文件 

// SUPPORT:1955
EN Add available contents
ZH 添加可用的内容 

// SUPPORT:1956
EN Separate columns with tabs
ZH 带有选项卡的单独列 

// SUPPORT:1967
EN Add to:
ZH 添加： 

// SUPPORT:1968
EN Group 1
ZH 第1组 

// SUPPORT:1969
EN Group 2
ZH 第2组 

// SUPPORT:1970
EN Group 3
ZH 第3组 

// SUPPORT:1971
EN Group 4
ZH 第4组 

// SUPPORT:1983
EN Stream:
ZH 流： 

// SUPPORT:2215
EN Any file (*.*)
ZH 任何文件 (*.*)  

// SUPPORT:2218
EN Executable file or DLL (*.exe,*.dll)
ZH 可执行文件或dll (*.exe,*.dll)  

// SUPPORT:2221
EN Executable, DLL or link (*.exe,*.dll,*.lnk)
ZH 可执行文件,dll或链接 (*.exe,*.dll,*.lnk)  

// SUPPORT:2223
EN Executable file (*.exe)
ZH 可执行文件 (*.exe)  

// SUPPORT:2225
EN Dynamic-link library (*.dll)
ZH 动态链接库 (*.dll)  

// SUPPORT:2227
EN Desktop link (*.lnk)
ZH 桌面链接 (*.lnk)  

// SUPPORT:2230
EN Object file or library (*.obj,*.lib,*.o,*.a)
ZH 对象文件或库 (*.obj,*.lib,*.o,*.a)  

// SUPPORT:2232
EN Object file (*.obj)
ZH 对象文件 (*.OBJ)  

// SUPPORT:2234
EN Import or object library (*.lib)
ZH 导入或对象库 (*.lib)  

// SUPPORT:2237
EN Source (*.c,*.cpp,*.h,*.hpp,*.asm,*.pas)
ZH 源文件 (*.c,*.cpp,*.h,*.hpp,*.asm,*.pas)  

// SUPPORT:2239
EN C/C++ source (*.c,*.cpp)
ZH C/C++ 源文件 (*.c,*.cpp)  

// SUPPORT:2241
EN C source (*.c)
ZH C 源文件 (*.c)  

// SUPPORT:2243
EN C++ source (*.cpp)
ZH C++ 源文件 (*.cpp)  

// SUPPORT:2245
EN Header file (*.h,*.hpp)
ZH 标题文件 (*.H,*.HPP)  

// SUPPORT:2247
EN C Header file (*.h)
ZH C 标头文件 (*.H)  

// SUPPORT:2249
EN C++ Header file (*.hpp)
ZH C++ 标头文件 (*.hpp)  

// SUPPORT:2251
EN Assembler source (*.asm)
ZH 汇编源文件 (*.asm)  

// SUPPORT:2253
EN Delphi/Pascal source (*.pas)
ZH Delphi/Pascal 源文件 (*.pas)  

// SUPPORT:2255
EN Text file (*.txt)
ZH 文本文件 (*.txt)  

// SUPPORT:2257
EN Backup file (*.bak)
ZH 备份文件 (*.bak)  

// SUPPORT:2259
EN Argument descriptions (*.arg)
ZH 参数描述 (*.arg)  

// SUPPORT:2261
EN Help file (*.hlp,*.chm)
ZH 帮助文件 (*.hlp,*.CHM)  

// SUPPORT:2263
EN Binary file (*.bin)
ZH 二进制文件 (*.bin)  

// SUPPORT:2265
EN User data file (*.udd)
ZH 用户数据文件 (*.udd)  

// SUPPORT:2267
EN User image library (*.udl)
ZH 用户图像库 (*.udl)  

// SUPPORT:2269
EN Initialization file (*.ini)
ZH 初始化文件 (*.ini)  

// SUPPORT:2271
EN %.64s file (%.64s)
ZH  %.64S文件 ( %.64s)  

// SUPPORT:2493
EN File '%s' is system or read-only. Please try another name.
ZH 文件“%s”是系统或仅读取. 请尝试另一个名字. 

// SUPPORT:2497
EN File '%s' already exists. Do you want to overwrite it?
ZH 文件“%s”已经存在. 您想覆盖它吗？ 

// SUPPORT:2498
EN File exists
ZH 文件已存在 

// SUPPORT:2917
EN Timer %i: %.3lf s, %7i calls (%.3lf us/call)
ZH 计时器 %i： %.3lf s, %7i调用 ( %.3lf US/CALL)  

// TABLE:718
EN ATTENTION, snow-free drawing is not possible!
ZH 注意,不可能的无雪图！ 

// TABLE:2792
EN Unnamed table
ZH 未命名的表 

// TABLE:2793
EN , item %i
ZH , 项目 %i 

// TABLE:3259
EN Whole line
ZH 全线 

// TABLE:3260
EN Copy selected line to clipboard
ZH 将选定的行复制到剪贴板 

// TABLE:3262
EN Whole table
ZH 整表 

// TABLE:3263
EN Copy whole table to clipboard, preserving column widths
ZH 将整台复制到剪贴板,保留列宽度 

// TABLE:3266
EN Copy selected item in  named column to clipboard
ZH 将所选项目在命名列中复制到剪贴板 

// TABLE:3322
EN Select sorting criterium
ZH 选择排序标准 

// TABLE:3357
EN Select font
ZH 选择字体 

// TABLE:3386
EN Select colour scheme
ZH 选择配色方案 

// TABLE:3418
EN Select highlighting scheme
ZH 选择突出显示方案 

// TABLE:3443
EN Always on top
ZH 总在最前面 

// TABLE:3444
EN Make this MDI window topmost
ZH 使此MDI窗口最上方 

// TABLE:3447
EN Make this window topmost
ZH 使这个窗口最上面 

// TABLE:3449
EN Autoupdate
ZH 自动更新 

// TABLE:3450
EN Periodically update the contents of the window
ZH 定期更新窗口的内容 

// TABLE:3452
EN Hide bar
ZH 隐藏栏 

// TABLE:3453
EN Hide bar with column names on the top of the table
ZH 隐藏栏上的列名称在表的顶部 

// TABLE:3455
EN Show bar
ZH 展示栏 

// TABLE:3456
EN Display bar with column names on the top of the table
ZH 显示栏,表格在表的顶部 

// TABLE:3458
EN Hide horizontal scroll
ZH 隐藏水平滚动 

// TABLE:3459
EN Hide horizontal scrollbar
ZH 隐藏水平滚动条 

// TABLE:3461
EN Show horizontal scroll
ZH 显示水平滚动 

// TABLE:3462
EN Show horizontal scrollbar
ZH 显示水平滚动条 

// TABLE:3464
EN Default columns
ZH 默认列 

// TABLE:3467
EN Font
ZH 字体 

// TABLE:3473
EN Highlighting
ZH 突出显示 

// TABLE:3483
EN Sort by
ZH 排序方式 

// TABLE:3487
EN Appearance, fonts, colours...
ZH 外观,字体,颜色... 

// TABLE:3494
EN Copy the whole table to clipboard
ZH 将整个桌子复制到剪贴板 

// THREADS:69
EN NULL thread
ZH 空线程 

// THREADS:70
EN NULL
ZH 无效的 

// THREADS:78
EN Main thread
ZH 主线程 

// THREADS:78
EN main thread
ZH 主线程 

// THREADS:80
EN Main
ZH 主要的 

// THREADS:80
EN main
ZH 主要的 

// THREADS:85
EN .NET helper thread
ZH .NET辅助螺纹 

// THREADS:87
EN Temporary thread
ZH 临时线程 

// THREADS:87
EN temporary thread
ZH 临时线程 

// THREADS:89
EN thread
ZH 线程

// THREADS:280
EN Unable to suspend thread
ZH 无法暂停线程 

// THREADS:300
EN Unable to resume thread
ZH 无法恢复线程 

// THREADS:341
EN Thread Information Block of
ZH 线程信息块 

// THREADS:406
EN You are going to kill the last thread in the debugged application. The application will close. All unsaved information will be lost and loaded DLLs will receive no notification. Kill thread anyway?
ZH 您将杀死调试应用程序中的最后一个线程. 该应用程序将关闭. 所有未保存的信息将丢失,并且已加载的DLL将不会收到通知. 无论如何杀死线程？ 

// THREADS:410
EN You are going to kill internal .NET debugging helper thread. You will be unable to continue debugging, and the application may crash. Kill thread anyway?
ZH 您将杀死内部.NET调试助手线程. 您将无法继续调试,并且应用程序可能会崩溃. 无论如何杀死线程？ 

// THREADS:415
EN You are going to kill main thread of debugged application. In most cases, this will make application unusable. Also note that all unsaved information in this thread will be lost and loaded DLLs will receive no notification. Kill thread anyway?
ZH 您将杀死调试应用程序的主线程. 在大多数情况下,这将使应用程序无法使用. 另请注意,此线程中的所有未保存信息将丢失,并且已加载的DLL将不会收到通知. 无论如何杀死线程？ 

// THREADS:419
EN You are going to kill thread %08X. All unsaved information in this thread will be lost and loaded DLLs will receive no notification. Kill thread anyway?
ZH 您将杀死线程 %08X. 此线程中的所有未保存信息将丢失,并且已加载的DLL将不会收到通知. 无论如何杀死线程？

// THREADS:420
EN About to kill the thread
ZH 即将杀死线程 

// THREADS:446
EN You are going to assign time-critical priority to
ZH 您将把关键时间的优先级分配给 

// THREADS:450
EN . In some cases this may slow down or practically stop OllyDbg and other applications. Continue anyway?
ZH . 在某些情况下,这可能会减慢或实际上停止OllydBG和其他应用. 无论如何继续？ 

// THREADS:452
EN About to assign time-critical priority to thread
ZH 即将将关键时间优先级分配给线程 

// THREADS:456
EN Unable to change priority
ZH 无法更改优先级 

// THREADS:462
EN Idle
ZH 闲置的 

// THREADS:463
EN Change priority of selected thread to idle
ZH 将选定线程的优先级更改为空闲 

// THREADS:465
EN Lowest
ZH 最低 

// THREADS:466
EN Change priority of selected thread to lowest
ZH 将选定线程的优先级更改为最低 

// THREADS:468
EN Low
ZH 低的 

// THREADS:469
EN Change priority of selected thread to low
ZH 将选定线程的优先级更改为低 

// THREADS:472
EN Change priority of selected thread to normal
ZH 将选定线程的优先级更改为正常 

// THREADS:475
EN Change priority of selected thread to high
ZH 将选定线程的优先级更改为高 

// THREADS:477
EN Highest
ZH 最高 

// THREADS:478
EN Change priority of selected thread to highest
ZH 将选定线程的优先级更改为最高 

// THREADS:480
EN Time critical
ZH 关键时间 

// THREADS:481
EN Change priority of selected thread to time critical
ZH 将选定线程的优先级更改为关键时间 

// THREADS:488
EN Update contents of Threads window
ZH 更新线程窗口的内容 

// THREADS:490
EN &Open in CPU
ZH 并在CPU中开放 

// THREADS:493
EN &Dump TIB
ZH &Dump TIB

// THREADS:496
EN Show registers
ZH 显示寄存器 

// THREADS:497
EN Show thread's registers in standalone window
ZH 在独立窗口中显示线程的寄存器 

// THREADS:499
EN Set symbolic name
ZH 设置符号名称 

// THREADS:500
EN Assign symbolic name to selected thread
ZH 为选定线程分配符号名称 

// THREADS:502
EN &Suspend
ZH &暂停 

// THREADS:503
EN Suspend selected thread
ZH 暂停选定的线程 

// THREADS:505
EN &Resume
ZH &恢复

// THREADS:506
EN Resume suspended thread
ZH 恢复悬挂线 

// THREADS:508
EN Set &priority
ZH 设置优先级 

// THREADS:509
EN Change priority of selected thread
ZH 更改选定线程的优先级 

// THREADS:511
EN &Kill
ZH &杀 

// THREADS:512
EN Kill selected thread
ZH 杀死选定的线程 

// THREADS:583
EN Debug
ZH 调试 

// THREADS:585
EN Temp
ZH 温度 

// THREADS:645
EN %4i.%04i s
ZH %4i.%04i c

// THREADS:683
EN Ord
ZH Ord

// THREADS:684
EN Decimal sequential number of thread in process
ZH 进程中的十进制顺序数量 

// THREADS:687
EN Ident
ZH 识别 

// THREADS:689
EN Name (if present) and unique system-wide identifier of the thread
ZH 名称 (如果存在) 和线程的独特范围标识符 

// THREADS:692
EN Window's title
ZH 窗口的标题 

// THREADS:694
EN Title of one of the top-level windows owned by thread
ZH 线程拥有的顶级窗口之一的标题 

// THREADS:697
EN Last error
ZH 最后一个错误 

// THREADS:698
EN Last error, as returned by GetLastError()
ZH 最后一个错误,如getlastror () 返回 

// THREADS:702
EN Address of thread's entry point
ZH 线程入口点的地址 

// THREADS:705
EN TIB
ZH tib 

// THREADS:706
EN Address of Thread Information Block
ZH 线程信息块的地址 

// THREADS:709
EN Suspend
ZH 暂停 

// THREADS:710
EN Suspend count of the thread
ZH 暂停线程计数 

// THREADS:713
EN Priority
ZH 优先级

// THREADS:715
EN Current thread's priority (relative to priority class of the process)
ZH 当前线程的优先级 (相对于进程的优先类别)  

// THREADS:718
EN User time
ZH 用户时间 

// THREADS:719
EN CPU time spent by thread in user mode
ZH CPU在用户模式下用线程花费的时间 

// THREADS:722
EN System time
ZH 系统时间 

// THREADS:723
EN CPU time spent by thread in system mode
ZH CPU在系统模式下用线程花费的时间 

// TRACE:165
EN Unable to allocate memory for run trace buffer
ZH 无法为运行跟踪缓冲区分配内存 

// TRACE:465
EN Too many ranges to protocol
ZH 太多的范围 

// TRACE:646
EN Referenced memory (decoded)
ZH 引用内存 (解码)  

// TRACE:647
EN Contents of memory preceding command execution
ZH 内存的内容在执行命令之前 

// TRACE:649
EN Referenced memory (raw)
ZH 引用内存 (RAW)  

// TRACE:653
EN Registers modified by command
ZH 命令修改的寄存器 

// TRACE:654
EN List of registers modified by the command
ZH 命令修改的寄存器列表 

// TRACE:656
EN Registers preceding command execution
ZH 寄存器前命令执行 

// TRACE:657
EN List of registers at the moment of execution
ZH 执行时的寄存器列表 

// TRACE:812
EN Enter expression to mark
ZH 输入表达式以标记 

// TRACE:847
EN Mark not found
ZH 标记找不到 

// TRACE:900
EN Select file for the run trace data
ZH 选择运行跟踪数据的文件 

// TRACE:908
EN Unable to open run trace log file '%s'
ZH 无法打开运行跟踪日志文件'%s' 

// TRACE:923
EN Saving existing run trace data - $%%
ZH 保存现有运行跟踪数据 -  $%% 

// TRACE:971
EN Highlight operands that use ESP (stack pointer) or SP
ZH 突出显示使用ESP (堆栈指针) 或SP的操作数 

// TRACE:974
EN Highlight operands that use EBP (frame pointer) or BP
ZH 突出显示使用EBP (帧指针) 或BP的操作数 

// TRACE:986
EN Decoded
ZH 解码 

// TRACE:987
EN Decode memory contents
ZH 解码内存内容 

// TRACE:989
EN Raw
ZH 原始的 

// TRACE:990
EN Display raw memory contents
ZH 显示原始内存内容 

// TRACE:997
EN Show registers modified by command
ZH 命令修改的显示寄存器 

// TRACE:999
EN All
ZH 全部 

// TRACE:1000
EN Show registers at the moment of execution
ZH 在执行时显示寄存器 

// TRACE:1016
EN Follow destination in CPU window
ZH 在CPU窗口中关注目的地 

// TRACE:1019
EN Delete all run trace records
ZH 删除所有运行跟踪记录 

// TRACE:1021
EN Show memory
ZH 显示内存 

// TRACE:1022
EN Decoding mode for the protocolled memory contents
ZH 原始内存内容的解码模式 

// TRACE:1025
EN Show all registers or only modified
ZH 显示所有寄存器或仅修改 

// TRACE:1030
EN Mark selected address
ZH 标记选定地址 

// TRACE:1031
EN Mark all appearances of the selected address
ZH 标记所选地址的所有外观 

// TRACE:1033
EN Find address...
ZH 查找地址... 

// TRACE:1034
EN Enter address to find and mark
ZH 输入地址查找并标记 

// TRACE:1036
EN Find previous mark
ZH 查找上一个标记 

// TRACE:1037
EN Find previous marked address in the run trace
ZH 在运行跟踪中查找以前的标记地址 

// TRACE:1039
EN Find next mark
ZH 查找下一个标记 

// TRACE:1040
EN Find next marked address in the run trace
ZH 在运行跟踪中查找下一个标记地址 

// TRACE:1042
EN Clear marks
ZH 清晰的标记 

// TRACE:1043
EN Clear address marks
ZH 清晰的地址标记 

// TRACE:1046
EN Show profile for the module the selected command belongs to
ZH 选定命令属于该模块的显示配置文件 

// TRACE:1048
EN Global profile
ZH 全球概况 

// TRACE:1049
EN Show profile for the whole memory
ZH 显示整个内存的配置文件 

// TRACE:1205
EN Turned off
ZH 关掉 

// TRACE:1355
EN Back
ZH 后退 

// TRACE:1356
EN Backward index of the command in the run trace
ZH 运行跟踪中命令的向后索引 

// TRACE:1360
EN Thread in which the command was executed
ZH 执行命令的线程 

// TRACE:1364
EN Module to which the command belongs
ZH 命令属于的模块 

// TRACE:1368
EN Address of the command
ZH 命令地址 

// TRACE:1415
EN Run trace (protocolling filter is active)
ZH 运行轨迹 (原始填充过滤器处于活动状态)  

// TRACE:1525
EN Profiling - $%%
ZH 分析 -  $%% 

// TRACE:1555
EN Incomplete profile
ZH 不完整的配置文件 

// TRACE:1761
EN Update contents of Profile window
ZH 更新配置文件窗口的内容 

// TRACE:1773
EN Mark all appearances of the selected address in the run trace
ZH 在运行跟踪中标记所选地址的所有外观

// TRACE:1776
EN Clear address marks in the run trace
ZH 清除运行跟踪中的地址标记 

// TRACE:1833
EN Count
ZH 数数 

// TRACE:1834
EN Number of registered hits
ZH 寄存器命中次数 

// TRACE:1867
EN Profile of
ZH 配置文件 

// UDD:183
EN Select .udd file
ZH 选择.udd文件 

// UDD:203
EN Saving .udd data for '%s'
ZH 保存.udd数据为“%s” 

// UDD:738
EN Invalid or missing file '%s'
ZH 无效或缺少文件'%s' 

// UDD:741
EN Module '%s' - loading .udd data
ZH 模块'%s' - 加载.udd数据 

// UDD:744
EN Module '%s' - reloading .udd data
ZH 模块'%s' - 重新加载.udd数据 

// UDD:792
EN Modified executable
ZH 修改后的可执行文件 

// UDD:796
EN Length of file '%s' differs from that specified in .udd file. Old breakpoints, labels and comments are probably no longer valid. Do you want to use old data from the .udd file?
ZH 文件“%s”的长度与.udd文件中指定的时间不同. 旧的断点,标签和注释可能不再有效. 您要使用.udd文件中的旧数据吗？ 

// UDD:839
EN File '%s' was modified since last debugging session. It may happen that analysis data, breakpoints, labels and comments no longer apply. Do you want to use old data saved in the .udd file?
ZH 自上次调试会话以来,修改了文件“%s”. 不再适用分析数据,断点,标签和注释. 您要使用保存在.udd文件中的旧数据吗？ 

// UDD:1344
EN Corrupted breakpoints
ZH 损坏的断点 

// UDD:1351
EN Module '%s' contains corrupted breakpoints, where the first byte of the current command differs from that in the previous debugging session. This happens when program was recompiled, the code is self-modifiable (for example, self-extracting) or when breakpoint was set on the patched code.\n\nFor security reasons, OllyDbg will disable suspicious INT3 breakpoints. You can re-enable them in the Breakpoints window.
ZH 模块“%s”包含损坏的断点,其中当前命令的第一个字节与上一个调试会话中的字节不同. 当对程序进行重新编译时,该代码是可以自我调制的 (例如,自提取) 或在修补的代码上设置断点. 您可以在“断点”窗口中重新启用它们. 

// UDD:1356
EN Error in '%s', analysis data for module %s is incomplete (record %08X)
ZH “%s”中的错误,模块 %s的分析数据不完整 (记录 %08X) 

// WATCHES:132
EN Edit watch expression
ZH 编辑匹配表达式 

// WATCHES:134
EN Enter new watch expression
ZH 输入新匹配表达 

// WATCHES:255
EN Edit byte at
ZH 编辑字节at 

// WATCHES:258
EN Edit word at
ZH 编辑单词 

// WATCHES:261
EN Edit dword at
ZH 编辑dword at 

// WATCHES:264
EN Edit 32-bit float at
ZH 编辑32位浮点数于 

// WATCHES:267
EN Edit 64-bit float at
ZH 编辑64位浮点数于 

// WATCHES:270
EN Edit 80-bit float at
ZH 编辑80位浮点数于 

// WATCHES:273
EN Edit selector at
ZH 编辑选择器 

// WATCHES:276
EN Edit ASCII string at
ZH 编辑ASCII字符串 

// WATCHES:279
EN Edit UNICODE string at
ZH 编辑Unicode字符串 

// WATCHES:368
EN Update contents of Watch window
ZH 更新匹配窗口的内容 

// WATCHES:370
EN &Insert watch...
ZH &插入匹配... 

// WATCHES:371
EN Insert new watch expression before selected
ZH 在选择之前插入新匹配表达式 

// WATCHES:373
EN &Add watch...
ZH &添加匹配... 

// WATCHES:374
EN Add new watch expression
ZH 添加新匹配表达 

// WATCHES:376
EN &Edit watch...
ZH &编辑匹配... 

// WATCHES:379
EN &Delete watch
ZH &删除匹配 

// WATCHES:380
EN Delete watch expression
ZH 删除匹配表达式

// WATCHES:382
EN Move up
ZH 提升 

// WATCHES:385
EN Move down
ZH 向下移动 

// WATCHES:388
EN Edit value...
ZH 编辑值... 

// WATCHES:392
EN Follow value in CPU Disassembler pane
ZH 遵循CPU反汇编器窗格中的值

// WATCHES:395
EN Follow value in CPU Dump pane
ZH 遵循CPU转储窗格中的值 

// WATCHES:398
EN Follow value in CPU Stack pane
ZH 遵循CPU堆栈窗格中的值 

// WATCHES:482
EN Expression
ZH 表达式

// WATCHES:483
EN Expression to evaluate
ZH 计算的表达式

// WATCHES:487
EN Value of expression
ZH 表达式的值 

// WINDOWS:504
EN Update contents of the list of windows
ZH 更新Windows列表的内容 

// WINDOWS:506
EN Follow WinProc
ZH 关注WinProc 

// WINDOWS:507
EN Follow WinProc in Disassembler
ZH 关注反汇编器中的WinProc

// WINDOWS:509
EN Breakpoint on WinProc
ZH WinProc的断点 

// WINDOWS:510
EN Set unconditional breakpoint on WinProc
ZH 在WNDProc上设置有条件断点 

// WINDOWS:513
EN Set or edit conditional breakpoint on WinProc
ZH 在WinProc上设置或编辑有条件断点 

// WINDOWS:516
EN Set or edit conditional logging breakpoint on WinProc
ZH 在WinProc上设置或编辑条件记录断点 

// WINDOWS:519
EN Remove breakpoint from WinProc
ZH 从WinProc中删除断点 

// WINDOWS:521
EN Follow ClassProc
ZH 关注ClassProc 

// WINDOWS:522
EN Follow ClassProc in Disassembler
ZH 在反汇编器中关注ClassProc

// WINDOWS:524
EN Breakpoint on ClassProc
ZH ClassProc上的断点 

// WINDOWS:525
EN Set unconditional breakpoint on ClassProc
ZH 在ClassProc上设置无条件断点 

// WINDOWS:528
EN Set or edit conditional breakpoint on ClassProc
ZH 在ClassProc上设置或编辑条件断点 

// WINDOWS:531
EN Set or edit conditional logging breakpoint on ClassProc
ZH 在ClassProc上设置或编辑条件记录断点 

// WINDOWS:534
EN Remove breakpoint from ClassProc
ZH 从ClassProc中删除断点 

// WINDOWS:582
EN Topmost
ZH 最上方 

// WINDOWS:584
EN Desktop
ZH 桌面 

// WINDOWS:606
EN %08X (menu)
ZH %08X (菜单) 

// WINDOWS:689
EN (menu)
ZH  (菜单)  

// WINDOWS:691
EN (desktop window)
ZH  (桌面窗口)  

// WINDOWS:693
EN (dialog box)
ZH  (对话框)  

// WINDOWS:695
EN (task switch window)
ZH  (任务开关窗口)  

// WINDOWS:732
EN Window's handle
ZH 窗口的句柄

// WINDOWS:736
EN Window's title or text
ZH 窗口的标题或文字 

// WINDOWS:739
EN Parent
ZH 父

// WINDOWS:740
EN Handle of parent window
ZH 父窗口的句柄 

// WINDOWS:743
EN WinProc
ZH WinProc 

// WINDOWS:744
EN Address of window callback function
ZH 窗口回调函数的地址 

// WINDOWS:747
EN ID/menu
ZH ID/菜单 

// WINDOWS:748
EN Identifier of child window or menu handle
ZH 子窗口或菜单句柄的标识符

// WINDOWS:752
EN Window type (ASCII or UNICODE)
ZH 窗口类型 (ASCII或Unicode)  

// WINDOWS:755
EN Style
ZH 风格 

// WINDOWS:756
EN Window style, set of WS_xxx
ZH 窗口样式,一组WS_XXX 

// WINDOWS:759
EN ExtStyle
ZH ExtStyle

// WINDOWS:760
EN Extended style, set of WS_EX_xxx
ZH 扩展样式,一组WS_EX_XXX 

// WINDOWS:764
EN ID of thread that owns the window
ZH 拥有窗口的线程的ID 

// WINDOWS:767
EN ClsProc
ZH ClsProc

// WINDOWS:768
EN Address of default (class) window function
ZH 默认 (类) 窗口函数的地址 

// WINDOWS:771
EN ClsName
ZH Clsname

// WINDOWS:772
EN Class name
ZH 类名称
